[{"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/index.js":"1","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/App.js":"2","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/reportWebVitals.js":"3","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/Signin.js":"4","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/HomepageScreen.js":"5","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/ProjectsScreen.js":"6","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/CoursesScreen.js":"7","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/ProfileScreen.js":"8","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/CoursesMainScreen.js":"9","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/TeachersScreen.js":"10","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/AboutusScreen.js":"11","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/api-service.js":"12","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/components/Navbar/index.js":"13","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/components/Popup.js":"14","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/components/UpdateUserDetails.js":"15","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/components/Navbar/NavbarElements.js":"16"},{"size":953,"mtime":1639677029000,"results":"17","hashOfConfig":"18"},{"size":1509,"mtime":1640111347006,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1639677029000,"results":"20","hashOfConfig":"18"},{"size":2060,"mtime":1639677029000,"results":"21","hashOfConfig":"18"},{"size":240,"mtime":1639677029000,"results":"22","hashOfConfig":"18"},{"size":158,"mtime":1639677029000,"results":"23","hashOfConfig":"18"},{"size":17200,"mtime":1639677029000,"results":"24","hashOfConfig":"18"},{"size":4616,"mtime":1640112363312,"results":"25","hashOfConfig":"18"},{"size":2670,"mtime":1639677029000,"results":"26","hashOfConfig":"18"},{"size":227,"mtime":1639677029000,"results":"27","hashOfConfig":"18"},{"size":238,"mtime":1639677029000,"results":"28","hashOfConfig":"18"},{"size":17135,"mtime":1640106984991,"results":"29","hashOfConfig":"18"},{"size":1675,"mtime":1639677029000,"results":"30","hashOfConfig":"18"},{"size":2310,"mtime":1639677029000,"results":"31","hashOfConfig":"18"},{"size":2036,"mtime":1640193784082,"results":"32","hashOfConfig":"18"},{"size":1664,"mtime":1639677029000,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"3jat24",{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/index.js",[],["72","73"],"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/App.js",["74","75","76","77"],"import './App.css';\nimport React, {useEffect} from 'react';\nimport Navbar from \"./components/Navbar\";\nimport HomepageScreen from './pages/HomepageScreen';\nimport CoursesScreen from './pages/CoursesScreen';\nimport ProjectsScreen from './pages/ProjectsScreen';\nimport ProfileScreen from './pages/ProfileScreen';\nimport CoursesMainScreen from './pages/CoursesMainScreen';\nimport TeachersScreen from './pages/TeachersScreen';\nimport AboutusScreen from './pages/AboutusScreen';\nimport UpdateUserDetails from './components/UpdateUserDetails';\nimport Signin from './pages/Signin'; \nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { useCookies } from 'react-cookie';\n\n\n\nfunction App() {\n  const [token, setToken, deleteToken] = useCookies(['mr-token']);\n\n\n  return (\n\n    <Router>\n     \n      <Navbar />\n      <Switch>\n        <Route path=\"/HomepageScreen\" exact component={HomepageScreen} />\n        <Route path=\"/CoursesScreen\" component={CoursesScreen} />\n        <Route path=\"/ProjectsScreen\" component={ProjectsScreen} />\n        <Route path=\"/ProfileScreen\" component={ProfileScreen} />\n        <Route path=\"/TeachersScreen\" component={TeachersScreen} />\n        <Route path=\"/AboutusScreen\" component={AboutusScreen} />\n        <Route path=\"/Signin\" component={Signin} />\n        <Route path=\"/CoursesMainScreen\" component={CoursesMainScreen} />\n        <Route path=\"/UpdateUserDetails\" component={UpdateUserDetails}/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/reportWebVitals.js",[],"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/Signin.js",[],"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/HomepageScreen.js",[],"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/ProjectsScreen.js",[],"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/CoursesScreen.js",["78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100"],"import React, {useEffect, useState} from 'react';\nimport ReactPlayer from 'react-player';\nimport '../Courses.css';\nimport { API } from '../api-service';\n//import {token} from '/Signin'; \n// import ReactDom from 'react-dom';\n//import Popup from 'react-popup';\nimport Popup from '../components/Popup';\nimport { useCookies } from 'react-cookie';\nimport Signin from '../pages/Signin'; \n\n\n\nconst CoursesScreen = () => {\n  const [token, setToken, deleteToken] = useCookies(['mr-token']);\n  console.log(\"token is: \", token['mr-token'])\n  // const user = parseJwt(token['mr-token']);\n\n    \n\n  \n//   render() \n//     const { state } = this.props.location\n//     return (\n//       console.log(state)\n//     )\n  \nconst search = window.location.search; // returns the URL query String\nconst params = new URLSearchParams(search); \nconst IdFromURL = params.get('id');\nconst linkFromURL = params.get('link');\n// const courseFromUrl = params.get('course');   \nconsole.log(\"now\"); \nconsole.log(IdFromURL);\nconsole.log(linkFromURL);\n\n// console.log(courseFromUrl); \nconst [courses, setCourses] = useState([]);\nconst [userLessons, setUserLessons] = useState([]);\nconst [lessons, setLessons] = useState([]);\nconst [lessonNumber, setLessonsNumber] = useState([1]);\nconst [currentLesson, setCurrentLesson] = useState([]);\n//the url from youtube for every lesson. changed when the user choose another lesson. the default is for the first lesson. \nconst[url, setUrl ] = useState(linkFromURL);  \nconst[buttonPopup, setButtonPopup ] = useState(false); \nconst[notePopup, setNotePopup ] = useState(false);\nconst[notes, setNotes ] = useState();\nconst[answer, setAnswer ] = useState();\nconst[userLastLesson, setUserLastLesson ] = useState(1);\nconst lessonsList =[];\nvar numOfLessons = 0;\n\n//const [playing, setPlaying] = useState()\n\n\n\n\n//const displayCourses = () =>  {\n  useEffect(() =>{\n  var username = Signin.username\n  console.log(\"username is:\",username)\n  setLessonsNumber(1) \n  API.displayCourses()\n      .then( resp => setCourses(resp))\n      //.then( resp => setCurrentLesson(resp[0].lessons[0]))\n      .catch( error => console.log(error)) \n  API.getLessons()\n      .then( resp => setLessons(resp))\n      .catch( error => console.log(error)) \n  API.getUserLessons()\n    .then( resp => setUserLessons(resp))\n    .catch( error => console.log(error)) \n  API.getUserLastLesson(token['mr-token'],IdFromURL)\n    .then( resp => setUserLastLesson(resp.results[0].numOfLesson))\n    .catch( error => console.log(error))\n\n}, [])\n\n\n\n//console.log(parseJwt('eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c'))\n// const setFirstUrl= () =>  {\n//   console.log(\"courses[0]\")\n//   console.log(courses[0])\n//   //setUrl(courses[0].lessons[0].link)  .lessons[0].link\n// }\n// useEffect(() =>{ \n//   console.log(\"please work: \")\n//   console.log(courses[0].lessons[0].link)  \n// }, [courses.length > 1])\n\n// const getFirstLesson = (courses) =>{\n//   console.log(\"in first lesson\")\n//   var firstLesson = courses[0].lessons[0]\n//   console.log(\"the first lesson is: \",firstLesson)\n// }\n\nconst displayLessons = (lesson) =>{\n  if(lesson.numOfLesson<=userLastLesson){\n    console.log(\"in display lesson: \")\n    console.log(\"last lesson is: \",userLastLesson)\n    console.log(lesson)\n    //console.log(parseJwt(token['mr-token']))\n    console.log(userLessons)\n    //console.log(token.User)\n    //console.log(token['mr-token'].User)\n    setUrl(lesson.link)\n    console.log(\"lesson number is: \", lessonNumber)\n    console.log(\"lesson id is: \",lesson.id)\n    setLessonsNumber(lesson.numOfLesson)\n    //works for python course -> setLessonsNumber(lesson.id === 1? 1:lesson.id-1)\n    setCurrentLesson(lesson)\n    console.log(\"after: lesson number is: \", lessonNumber)\n  }\n}\n\n\n\n\nconst playNextLesson= () =>  {\n  console.log(\"in next lesoon fun. next lesson number is: \", lessonNumber+1);\n  console.log(\"lesson number is: \", lessonNumber);\n  console.log(lessonsList)\n  // console.log(\"courses[0]\")\n  // console.log(courses[0].lessons[0])\n//   var len = 2;\n//  lessonsList.map(id => {return len=len+1} )\n\n  console.log(\"lesson list.length is:\", lessonsList[0].length);\n {lessonsList[0]  ?  lessonNumber ===  lessonsList[0].length  ?console.log(\"1\") :console.log(\"2\") :console.log(\"3\") }\n  //if there is ann assignmnent for these lesson - display it on a popup message. if there is no assignment - proceed to next lesson\n    // if (currentLesson.assignment != \"null\"){\n    // {lessonsList.map(lesson =>{\n      // var first = lessonsList[0].name;\n      // console.log(first);\n      // console.log(\"first\");\n      //if there is an assignment for this lesson\n    if(lessonsList[0][lessonNumber-1].assignment !=\"null\"){\n      console.log(\"need to be here\");\n      console.log(currentLesson.assignment);\n      console.log(\"lesson number is: \", lessonNumber);\n      setAnswer('')\n\n      if(currentLesson.id){\n        API.getUserAnswer(token['mr-token'], currentLesson.id)\n        //.then( resp => console.log(resp))\n        .then( resp => setAnswer(resp.results[0].answer))\n        .catch( error => console.log(error))\n      }\n      else{\n        console.log(\"im in else\")\n        API.getUserAnswer(token['mr-token'], params.get('firstLessonId'))\n        //.then( resp => console.log(resp))\n        .then( resp => setAnswer(resp.results[0].answer))\n        .catch( error => console.log(error))\n      }\n       \n      setButtonPopup(true);\n  }\n  else{\n    if(userLastLesson==lessonNumber){\n      API.updateUserCourse(token['mr-token'], userLastLesson+1, IdFromURL)\n      setUserLastLesson(userLastLesson+1)\n      }\n    {lessonsList.map(lesson => {\n      {console.log(\"inside next lesson\")}\n      {console.log(lesson[lessonNumber])}\n      return setUrl(lesson[lessonNumber].link), setCurrentLesson(lesson[lessonNumber])\n      \n      // console.log(lesson[4].link);\n    })}\n    setLessonsNumber(lessonNumber+1)\n    \n  // console.log(lessonsList[3]);\n // console.log(lessonsList[4].url);\n  //setLessonsNumber(lessonNumber+1)\n  \n  }\n}\n\n\n\nconst playPreviousLesson= () =>  {\n  console.log(\"in previous. next lesson number is:\", lessonNumber-1);\n  console.log(\"lesson number is: \", lessonNumber);\n  {lessonsList.map(lesson => {\n    return setUrl(lesson[lessonNumber-2].link), setCurrentLesson(lesson[lessonNumber-2])\n    // console.log(lesson[4].link);\n  })}\n  setLessonsNumber(lessonNumber-1)\n  \n  // console.log(lessonNumber)\n  // API.getPreviousLesson(lessonNumber-1)\n  //     .then( resp => setCurrentLesson(resp))\n  //     .then(console.log(currentLesson))\n  //     .catch( error => console.log(error)) \n  // setUrl(currentLesson.link)\n  // setLessonsNumber(currentLesson.id)  \n}\n//proceed to the next lesson of the course after the popup message\nconst proceedToNextLesson= () =>  {\n  if(userLastLesson==lessonNumber){\n    API.updateUserCourse(token['mr-token'], userLastLesson+1, IdFromURL)\n    setUserLastLesson(userLastLesson+1)\n    }\n  console.log(\" inside fun proceed\");\n  if(currentLesson.id)\n    API.updateUserAnswer(token['mr-token'], answer, currentLesson.id)\n  else\n    API.updateUserAnswer(token['mr-token'], answer, params.get('firstLessonId'))\n  {lessonsList.map(lesson => {\n    return setUrl(lesson[lessonNumber].link), setCurrentLesson(lesson[lessonNumber])\n  })}\n  setLessonsNumber(lessonNumber+1)\n  setButtonPopup(false)\n}\n// console.log(\"lessonNumber+2\")\n// API.getNextLesson(lessonNumber+1)\n//     .then( resp => setCurrentLesson(resp))\n//     .then(console.log(currentLesson))\n//     .catch( error => console.log(error)) \n//     console.log(\"the current lesson is:\")\n//     console.log(currentLesson.name)\n// setUrl(currentLesson.link)\n// setLessonsNumber(currentLesson.id)\n// \nconst openNotes= () =>  {\n  //{setPlaying(false)}\n  console.log(\" inside openNotes\");\n  setNotes('')\n  console.log(\"lesson is:\",currentLesson.id)\n  console.log(\"maybe that: \",  params.get('firstLessonId'))\n  if(currentLesson.id){\n    API.getUserNotes(token['mr-token'],currentLesson.id)\n      // .then( console.log(\"resp.results[0].notes\"))\n      // .then( resp => console.log(resp))\n      .then( resp => setNotes(resp.results[0].notes))\n      .catch( error => console.log(error))\n  }\n  else{\n    console.log(\"im in else\")\n    API.getUserNotes(token['mr-token'],params.get('firstLessonId'))\n      .then( resp => setNotes(resp.results[0].notes))\n      .catch( error => console.log(error))\n  }\n  setNotePopup(true)\n}\nconst saveNotes= () =>  { \nif(currentLesson.id)\n  API.updateUserNotes(token['mr-token'], notes, currentLesson.id)\nelse\n  API.updateUserNotes(token['mr-token'], notes, params.get('firstLessonId'))\n setNotePopup(false)\n}\n// const ref = player => {\n//   player = player\n// }\n\n  return ( \n\n  \n    <div className=\"App\">\n      <header className=\"Header\">\n      \n     \n      {/* <h1>{currentLesson.assignment}</h1> */}\n        {/* {courses.map(lesson => {\n             if(lesson.id == IdFromURL) \n                 return <h2>{lesson.name}}</h2>} */}\n\n\n                 { courses.map(lesson => { \n                  if(lesson.id == IdFromURL) \n                      return <h1>{lesson.name}</h1>\n                    //  return <h1>{currentLesson.id}</h1>\n                     \n               })}\n\n\n      </header> \n      <button onClick={openNotes}>הערות</button>\n      <div className=\"lessons\">\n      <div>\n        {/* //working */}\n      {/* {  courses.map( course => {\n            return <button onClick={() => test(course)}>{course.name}</button>\n          })}  */}\n      {/* {  courses.map( course => {\n            return <h2>{course.name}</h2>\n          })}  */}\n      {/* { courses.map(lesson => {\n            return <h2>{lesson.lessons.map((name) => \n              <li >{name.name} </li>\n              //<button onClick={displayLessons(name.name)}>{name.name} </button>\n            )}</h2>\n        })} */}\n      </div>\n      <div>\n      {/* { courses.map( lesson => {         &nbsp;&nbsp;&nbsp;\n          lesson.lessons.map(nam =>{\n            return <h2>{nam.name}</h2>\n        })\n          })} */}\n        </div>\n       \n        <div>\n\n           {/*  display the lessons for the chosen course */ }\n          { courses.map(lesson => { \n             if(lesson.id == IdFromURL){\n                numOfLessons=lesson.lessons.length;\n                {console.log(\"num of lesson is: \",numOfLessons )}\n                {lessonsList.push(lesson.lessons)}\n                // {setsSelectedCourse(lesson)}\n                return <h2>{lesson.lessons.map((name) =>\n                   //{if(name.numOfLesson<=userLastLesson){\n                      //<ul class={name.numOfLesson == currentLesson.numOfLesson ? \"currentList\": \"lessonsList\"}> <li onClick={() => displayLessons(name)}>{name.name} </li> </ul>}\n                  // else\n                  //   <ul class={\"lessonsList\"}> <li>{name.name + \" (נעול)\"} </li> </ul>\n                // <ul class={name.numOfLesson == currentLesson.numOfLesson ? \"currentList\": \"lessonsList\"}> <li onClick={() => displayLessons(name)}>{name.name + \" (נעול)\"} </li> </ul>\n                  <ul class={name.numOfLesson>userLastLesson? \"coursesListBlocked\" :name.numOfLesson == currentLesson.numOfLesson ? \"currentList\": \"lessonsList\"}>\n                  <li onClick={() => displayLessons(name)}>\n                  {name.numOfLesson>userLastLesson?   name.name + \" (נעול)\":name.name } </li> </ul>\n                // <ul class={name.numOfLesson == currentLesson.numOfLesson ? \"currentList\": \"lessonsList\"}> <li onClick={() =>  displayLessons(name)}>{  name.numOfLesson>userLastLesson? name.name + \" (נעול)\"}b:name.name } </li> </ul>\n             //}\n             )}</h2> \n                } \n          })}\n        \n</div>\n              \n\n        <div>\n\n          <ReactPlayer trigger={url} controls url={url} width='70%'\n          height='220%'/><br/>\n          {console.log(\"lessonsList\")}\n          {console.log(lessonsList)}\n          {/* {numOfLessons = lessonsList.length > 0 ? lessonsList[0].length: '0'} */}\n          {/* <div className=\"prevAndNext\"> */}\n            {/* <button className=\"prevAndNext\" onClick={playNextLesson} >השיעור הבא</button> */}\n            {/*lessonsList[0] &&    lessonsList[0].length*/}\n            \n              \n           \n            {/* <button className=\"prevAndNext\" style={{display : lessonNumber ===  lessonsList[0].length  ? \"\": \"none\"}}  onClick={playNextLesson} >השיעור הבא</button>  */}\n            <button className=\"prevAndNext\" style={{display : lessonNumber ===  numOfLessons  ? \"none\": \"\"}}  onClick={playNextLesson} >השיעור הבא</button> \n            {/* <button className=\"prevAndNext\" style={{display : lessonsList[0]!=null  &&  lessonNumber ===  lessonsList[0].length  ? \"none\": \"\"}}  onClick={playNextLesson} >השיעור הבא</button>  */}\n            <button className=\"prevAndNext\" style={{display : lessonNumber ===  1  ? \"none\": \"\"}} onClick={playPreviousLesson}>השיעור הקודם</button><br/>\n     \n        </div>\n\n          {/* display as buttons all the lessons of the selected course  */}\n        {/* { courses.map(lesson => {\n            return <h2>{lesson.lessons.map((name) => \n             <ul class=\"lessonsList\"> <li onClick={() => displayLessons(name)}>{name.name} </li> </ul>\n              //<button onClick={displayLessons(name.name)}>{name.name} </button>\n            )}</h2>\n        })} */}\n        \n\n\n           {/* <button onClick={() => setUrl('https://youtu.be/i9-HWYsrh_k')} >שיעור 1</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/OWuRhPUP31s')}>שיעור 2</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/Ew_JiqX1EO0')} >שיעור 3</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/6XI_0ORZsao')}>שיעור 4</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/iDu4PuKNXpc')} >שיעור 5</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/VIAgn7_zPvU')}>שיעור 6</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/yPdMrpmLZ1o')} >שיעור 7</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/2SYkSp8bHkQ')}>שיעור 8</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/djYyAngqOHA')} >שיעור 9</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/F6OD_OCSDrQ')}>שיעור 10</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/hsdPUQ94TFQ')} >שיעור 11</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/iIFS059A1oM')}>שיעור 12</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/HD2s_BTtVBo')} >שיעור 13</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/zACdpNyH3_M')}>שיעור 14</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/Xn9_B_oQcC4')} >שיעור 15</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/K2eQyBepFoQ')}>שיעור 16</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/GSQEc4BxrhE')}>שיעור 17</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/uzZFDPQ_jyI')} >שיעור 18</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/Q-vWAl6AdsE')}>שיעור 19</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/z5zA9wMjwmQ')} >שיעור 20</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/HfyV9IzyaJQ')}>שיעור 21</button><br/> */}\n        \n        {/* <div>\n          \n          { courses.map( course => {\n            return <h2>{course.name}</h2>\n          })}\n        </div> */}\n          {/* course = this.props.data.map(function (co)){\n          return(\n          <div>\n          <h2>{course.name}</h2>\n          </div>\n          );\n      });\n    } */}\n    </div>\n    \n    <Popup trigger={buttonPopup} setTrigger={setButtonPopup}>\n      <h3>לפני שעוברים לשיעור הבא יש לבצע מטלה</h3>\n          {console.log(\"popup message\")}\n          {console.log(currentLesson.assignment)}\n          <p>{currentLesson.assignment}</p>\n          {console.log(\"answer is: \",answer)}\n          <button onClick={proceedToNextLesson}>שמור והמשך לשיעור הבא</button>\n          <input type = \"text\" value={answer} \n          onChange={e => setAnswer(e.target.value)}\n          ></input>\n    </Popup>\n    <Popup trigger={notePopup} setTrigger={setNotePopup}>\n    \n    {/* {console.log(this.player.getCurrentTime())} */}\n      <h3>אלו ההערות שלך עבור שיעור זה</h3>\n          {console.log(\"popup message 2\")}\n          {console.log(notes)}\n          {/* {console.log(notes.results && notes.results.notes)} */}\n          {console.log(\"end of popup message 2\")}\n          {/* <p>{notes}</p> */}\n        \n          <textarea\n          name = \"notesTA\"\n          value={notes}\n          onChange={e => setNotes(e.target.value)}\n          rows={5}\n          cols={50}\n        />\n        <br/>\n        <button onClick={saveNotes}>שמור</button>\n        \n    </Popup>\n   \n    </div>  \n\n  );\n};\n\n\n\nexport default CoursesScreen;\n","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/ProfileScreen.js",["101","102","103","104","105","106","107","108","109","110","111"],"import React, {useEffect, useState} from 'react';\nimport { Container,Row,Col,Form ,Button} from 'react-bootstrap';\nimport { useCookies } from 'react-cookie';\nimport { API } from '../api-service';\nimport Signin from '../pages/Signin'; \nimport { useHistory } from \"react-router-dom\";\n\nimport '../index.css';\nimport UpdateUserDetails from '../components/UpdateUserDetails'\nconst axios = require('axios');\n\n\nconst ProfileScreen = () => {\n    const history = useHistory();\n    const handleRoute = () =>{ \n        history.push(\"/UpdateUserDetails\");\n      }\n    const [token, setToken, deleteToken] = useCookies(['mr-token']);\n\n    const [user,setUser] = useState([]);\n    useEffect(()=>{\n        //var username = Signin.username\n        //console.log(\"username is:\",username)\n        API.getUserDetails(token['mr-token'])\n         //.then(resp => console.log(\"resp is:\", resp.results))\n         .then(resp => setUser(resp.results))  \n         .catch( error => console.log(error)) \n\n    }, [])\n    return(\n        <div className=\"App\">\n        <header className=\"Header\">דף פרופיל</header>\n        <div className=\"profile\">\n            <div>\n        <h4>שם משתמש:</h4>\n         <p>{user.username}</p>\n        \n         <br/>\n\n         <h4>שם פרטי: </h4>\n         <p>{user.firstName}</p>\n         <br/>\n\n       <h4>שם משפחה:</h4>\n       <p>{user.lastName}</p>\n       </div>\n        <div>\n        <h4>דואר אלקטרוני:</h4>\n       <p>{user.email}</p>\n         \n       <h4>קצת עליי..</h4>\n       <p>{user.aboutMe}</p>\n       </div>\n       <div>\n       <h4>תחביבים:</h4>\n       <p>{user.hobbies}</p>\n       </div>\n       </div>\n        <button onClick={handleRoute}>עדכון פרטים</button>\n        </div>\n    )\n}\n        \n\n\n\n//         <div className=\"App\">\n//         <header className=\"Header\">דף פרופייל</header>\n//         <div className=\"profile\">\n//          {user.username}: שם משתמש \n//         </div>\n//         <div>\n//        :שם פרטי \n//         </div>\n//         <div>\n//         : שם משפחה\n//         </div>\n//         <div>\n//         : דואר אלקטרוני \n//         </div>\n//         <div>\n//        : גיל\n//         </div>\n//         <div>\n//        : תחביבים\n//         </div>\n//         <button onClick={UpdateUserDetails}>עדכון פרטים</button>\n//         </div>\n//     )\n// }\n /*\nclass ProfileScreen extends React.Component {\n    constructor(props){\n        super(props);\n        this.state={\n            user_id:this.props.user_id,\n            username:this.props.username,\n            email:this.props.email,\n            profileImage:this.props.profileImage,\n            msg:this.props.msg,\n            uploadedFile:null\n        }\n    }\n    fetchUserDetails=(user_id)=>{\n        //console.log(user_id);\n        axios.get(\"http://127.0.0.1:8000/main/users/\"+user_id,{\n            headers: {\n                \"content-type\": \"application/json\"\n              } \n        }).then(res=>{\n            console.log(res);\n            this.setState({email:res.data.results[0].email});\n            this.setState({profileImage:res.data.results[0].profileImage})\n        })\n        .catch(err=>console.log(err))\n    }\n    render(){\n        return (\n            <Container>\n            <Row>\n           \n            <Col>\n                <h1>User Profile</h1>\n                <Form className=\"form\">     \n        <p>{this.state.msg}</p>\n      <Form.Group controlId=\"formCategory1\">\n        <Form.Label>Username:</Form.Label>\n        <Form.Control type=\"text\" defaultValue={this.state.username}/>     \n      </Form.Group>\n      <Form.Group controlId=\"formCategory2\">\n        <Form.Label>Email:</Form.Label>\n        <Form.Control type=\"email\" defaultValue={this.state.email} />     \n      </Form.Group>\n      <Form.Group controlId=\"formCategory3\">\n        <Form.Label>First Name:</Form.Label>\n        <Form.Control type=\"text\" name=\"firstname\" onChange={this.changefirstname}/>\n        </Form.Group>\n        <Form.Group controlId=\"formCategory4\">\n        <Form.Label>Last Name:</Form.Label>\n        <Form.Control type=\"text\" name=\"lastname\" onChange={this.changelastname}/>\n        </Form.Group>\n        <Form.Group controlId=\"formCategory5\">\n        <Form.Label>Skills:</Form.Label>\n        <Form.Control type=\"text\" name=\"skills\" onChange={this.changeskills}/>\n        </Form.Group>\n      <Button variant=\"primary\" onClick={this.UpdateProfileHandler}>Update Profile</Button>\n      </Form>\n       </Col>\n    \n           </Row>\n            </Container>\n        )\n    }\n    \n}\n*/\nexport default ProfileScreen;","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/CoursesMainScreen.js",[],"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/TeachersScreen.js",[],"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/AboutusScreen.js",[],"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/api-service.js",["112","113","114","115","116","117","118","119","120"],"import React from \"react\"\nconst BASE_URL = 'https://yarintz.pythonanywhere.com';\nconst LOCAL_URL = 'http://127.0.0.1:8000';\nexport class API extends React.Component{\n/*\nstatic DisplayUser(body){ \n        console.log(body)\n        return fetch(`${LOCAL_URL}/main/users/21/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify( body )\n        }).then( resp => resp.json())\n        }\n       */\n       /*\nstatic DisplayUserInfo(token, id, data){\n    return fetch(`${LOCAL_URL}/main/users/${id}/`),{\n        method: 'POST',\n        headers:{\n            'Content-Type': 'application/json',\n            'Authorization': `Token ${token}`\n        },\n        body: JSON.stringify( data )\n    }).then( resp => resp.json())  \n}*/\n// static getUserDetails(id){\n\n//     return fetch(`${LOCAL_URL}/main/users/${id}`,{\n//         method: 'GET',\n//         headers: {  \n//             'Content-Type':'application/json',\n           \n//         }\n//     }).then( resp => resp.json())\n//     //.then( res => props.UpdateUser(res))\n//     //.catch( error => console.log(error))\n// } \nstatic getUserDetails(token){\n\n    return fetch(`${BASE_URL}/main/userProfile/1/getUserDetails/`,{\n        method: 'POST',\n        headers: {  \n            'Content-Type':'application/json',\n            'Authorization': `Token ${token}` \n        }\n    })\n    //.then(resp => console.log(resp))\n     .then( resp => resp.json())\n    //.then( res => props.UpdateUser(res))\n    //.catch( error => console.log(error))\n} \n\nstatic getUserDetails(token){\n\n    return fetch(`${BASE_URL}/main/userProfile/1/getUserDetails/`,{\n        method: 'POST',\n        headers: {  \n            'Content-Type':'application/json',\n            'Authorization': `Token ${token}` \n        }\n    })\n    //.then(resp => console.log(resp))\n     .then( resp => resp.json())\n    //.then( res => props.UpdateUser(res))\n    //.catch( error => console.log(error))\n} \nstatic getUserDetails(token){\n\n    return fetch(`${LOCAL_URL}/main/userProfile/1/getUserDetails/`,{\n        method: 'POST',\n        headers: {  \n            'Content-Type':'application/json',\n            'Authorization': `Token ${token}` \n        }\n    })\n    //.then(resp => console.log(resp))\n     .then( resp => resp.json())\n    //.then( res => props.UpdateUser(res))\n    //.catch( error => console.log(error))\n}\nstatic UpdateUserDetails(token){\n\n    return fetch(`${LOCAL_URL}/main/userProfile/1/UpdateUserDetails/`,{\n        method: 'POST',\n        headers: {  \n            'Content-Type':'application/json',\n            'Authorization': `Token ${token}` \n        }\n    })\n    //.then(resp => console.log(resp))\n     .then( resp => resp.json())\n    //.then( res => props.UpdateUser(res))\n    //.catch( error => console.log(error))\n}  \nstatic loginUser(body){ \n    return fetch(`${BASE_URL}/auth/`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify( body )\n        }).then( resp => resp.json())\n    }\nstatic registerUser(body){ \n    console.log(body)\n        return fetch(`${BASE_URL}/main/users/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify( body )\n            }).then( resp => resp.json())\n        }\n        static displayCourses(){ \n                console.log(\"inside displayCourses fun\")\n                return fetch(`${BASE_URL}/main/courses/`, {\n                    method: 'GET',\n                    headers: {\n                        'Content-Type': 'application/json'\n                     },\n                    //body: JSON.stringify( body )\n                }).then( resp => resp.json())\n                // .then( resp => console.log(resp))\n                }           \n        static getLessons(){ \n                console.log(\"inside getLessons fun\")\n                // return fetch(`http://127.0.0.1:8000/main/courses/1/`, {\n                return fetch(`${BASE_URL}/admin/main/course/1/`, {\n                    method: 'GET',\n                    headers: {\n                        'Content-Type': 'application/json'\n                        },\n                    //body: JSON.stringify( body )\n                })\n                .then( resp => resp.json())\n                // .then( resp => console.log(resp))\n                \n                      \n                }  \n                static getNextLesson(num){ \n                    console.log(\"inside getNextLesson fun\")\n                    return fetch(`${BASE_URL}/main/lessons/${num}/`, {\n                        method: 'GET',\n                        headers: {\n                            'Content-Type': 'application/json'\n                            },\n                        //body: JSON.stringify( body )\n                    })\n                    .then( resp => resp.json())\n                    // .then( resp => console.log(resp)) \n                }\n                static getPreviousLesson(num){ \n                    console.log(\"inside getPreviousLesson fun\")\n                    console.log(num)\n                    return fetch(`${BASE_URL}/main/lessons/${num}/`, {\n                        method: 'GET',\n                        headers: {\n                            'Content-Type': 'application/json'\n                            },                       \n                    })\n                    .then( resp => resp.json())\n                }\n\n                static getCurrentCourse(numOfCourse){ \n                    console.log(\"inside displayCourses fun\")\n                    return fetch(`${BASE_URL}/main/courses/${numOfCourse}/`, {\n                        method: 'GET',\n                        headers: {\n                            'Content-Type': 'application/json'\n                         },\n                        //body: JSON.stringify( body )\n                    }).then( resp => resp.json())\n                    // .then( resp => console.log(resp))\n                    }   \n               \n                    static loginUser(body){ \n                        return fetch(`${LOCAL_URL}/auth/`, {\n                            method: 'POST',\n                            headers: {\n                                'Content-Type': 'application/json'\n                            },\n                            body: JSON.stringify( body )\n                        }).then( resp => resp.json())\n                        }\n\n\n                        static registerUser(body){ \n                            console.log(body)\n                            return fetch(`${LOCAL_URL}/main/users/`, {\n                                method: 'POST',\n                                headers: {\n                                    'Content-Type': 'application/json'\n                                },\n                                body: JSON.stringify( body )\n                            }).then( resp => resp.json())\n                            }\n                        static displayCourses(){ \n                                console.log(\"inside displayCourses fun\")\n                                return fetch(`${LOCAL_URL}/main/courses/`, {\n                                    method: 'GET',\n                                    headers: {\n                                        'Content-Type': 'application/json'\n                                     },\n                                    //body: JSON.stringify( body )\n                                }).then( resp => resp.json())\n                                // .then( resp => console.log(resp))\n                                }           \n                        static getLessons(){ \n                                console.log(\"inside getLessons fun\")\n                                // return fetch(`http://127.0.0.1:8000/main/courses/1/`, {\n                                return fetch(`${LOCAL_URL}/admin/main/course/1/`, {\n                                    method: 'GET',\n                                    headers: {\n                                        'Content-Type': 'application/json'\n                                        },\n                                    //body: JSON.stringify( body )\n                                })\n                                .then( resp => resp.json())\n                                // .then( resp => console.log(resp))\n                                \n                                      \n                                }  \n                                static getNextLesson(num){ \n                                    console.log(\"inside getNextLesson fun\")\n                                    return fetch(`${LOCAL_URL}/main/lessons/${num}/`, {\n                                        method: 'GET',\n                                        headers: {\n                                            'Content-Type': 'application/json'\n                                            },\n                                        //body: JSON.stringify( body )\n                                    })\n                                    .then( resp => resp.json())\n                                    // .then( resp => console.log(resp)) \n                                }\n                                static getPreviousLesson(num){ \n                                    console.log(\"inside getPreviousLesson fun\")\n                                    console.log(num)\n                                    return fetch(`${LOCAL_URL}/main/lessons/${num}/`, {\n                                        method: 'GET',\n                                        headers: {\n                                            'Content-Type': 'application/json'\n                                            },                       \n                                    })\n                                    .then( resp => resp.json())\n                                }\n                \n                                static getCurrentCourse(numOfCourse){ \n                                    console.log(\"inside displayCourses fun\")\n                                    return fetch(`${LOCAL_URL}/main/courses/${numOfCourse}/`, {\n                                        method: 'GET',\n                                        headers: {\n                                            'Content-Type': 'application/json'\n                                         },\n                                        //body: JSON.stringify( body )\n                                    }).then( resp => resp.json())\n                                    // .then( resp => console.log(resp))\n                                    }\n                                static getUserLessons(){ \n                                        console.log(\"inside getUserLessons fun\")                           \n                                        return fetch(`${LOCAL_URL}/main/userLessons/`, {\n                                            method: 'GET',\n                                            headers: {\n                                                'Content-Type': 'application/json'\n                                                },\n                                            //body: JSON.stringify( body )\n                                        }).then( resp => resp.json())\n                                        //.then( resp => console.log(resp))\n                                        \n                                              \n                                        }  \n                static getUserNotes(token, data){ \n                    console.log(\"im in getUserNotes\")\n                  //  http://127.0.0.1:8000/main/userLessons/1/getUserLessons/                             \n                    return fetch(`${LOCAL_URL}/main/userLessons/1/getUserLessons/`, {\n                        method: 'POST',\n                        headers: {\n                        //   'Accept': 'application/json',\n                          'Content-Type': 'application/json',\n                          'Authorization': `Token ${token}` \n                             },\n                             body: JSON.stringify({'lesson' : data})  \n                            // body: JSON.stringify({data})  \n                            // params: {\n                            //     'lesson': '4'\n                            //   }                 \n                        })\n                          .then( resp => resp.json())\n                        //.then( resp => console.log(\"eewrwerrewreerwewfaj\"))\n                       }  \n                       static updateUserNotes(token, data, numOfLesson){ \n                        console.log(\"im in getUserNotes\")\n                      //  http://127.0.0.1:8000/main/userLessons/1/getUserLessons/                             \n                         return fetch(`${LOCAL_URL}/main/userLessons/${numOfLesson}/addUserLessons/`, {\n                            method: 'POST',\n                            headers: {\n                            \n                              'Content-Type': 'application/json',\n                              'Authorization': `Token ${token}` \n                                 },\n                                 body: JSON.stringify({'notes' : data})  \n                                    \n                            })\n                              .then( resp => resp.json())\n                            //.then( resp => console.log(\"eewrwerrewreerwewfaj\"))\n                           }  \n\n                           static getUserAnswer(token, data){ \n                            console.log(\"im in getUserAnswer\")                         \n                            return fetch(`${LOCAL_URL}/main/userLessons/1/getUserLessons/`, {\n                                method: 'POST',\n                                headers: {\n                                  'Content-Type': 'application/json',\n                                  'Authorization': `Token ${token}` \n                                     },\n                                     body: JSON.stringify({'lesson' : data})  \n              \n                                })\n                                  //.then( resp => console.log(resp))\n                                  .then( resp => resp.json())\n                            \n                               }  \n                               static updateUserAnswer(token, data, numOfLesson){                             \n                                return fetch(`${LOCAL_URL}/main/userLessons/${numOfLesson}/addUserLessons/`, {\n                                    method: 'POST',\n                                    headers: {\n                                    \n                                      'Content-Type': 'application/json',\n                                      'Authorization': `Token ${token}` \n                                         },\n                                         body: JSON.stringify({'answer' : data})  \n                                            \n                                    })\n                                      .then( resp => resp.json())\n                                   }\n                                   \n                                   static getUserLastLesson(token, numOfCourse){                                                       \n                                    return fetch(`${LOCAL_URL}/main/userCourses/${numOfCourse}/getUserCourses/`, {\n                                        method: 'POST',\n                                        headers: {\n                                          'Content-Type': 'application/json',\n                                          'Authorization': `Token ${token}` \n                                             },\n                                            //  body: JSON.stringify({'course' : data})  \n                      \n                                        })\n                                          //.then( resp => console.log(resp))\n                                          .then( resp => resp.json())\n                                    \n                                       } \n                                       \n                                       static updateUserCourse(token, data, numOfCourse){                             \n                                        return fetch(`${LOCAL_URL}/main/userCourses/${numOfCourse}/addUserCourses/`, {\n                                            method: 'POST',\n                                            headers: {\n                                            \n                                              'Content-Type': 'application/json',\n                                              'Authorization': `Token ${token}` \n                                                 },\n                                                 body: JSON.stringify({'lesson' : data})  \n                                                    \n                                            })\n                                              .then( resp => resp.json())\n                                           }\n    }","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/components/Navbar/index.js",["121","122","123","124"],"import React, { useEffect, useState } from \"react\";\nimport { useCookies } from 'react-cookie';\n\nimport {\n  Nav,\n  NavLogo,\n  NavLink,\n  Bars,\n  NavMenu,\n  NavBtn,\n  NavBtnLink,\n} from \"./NavbarElements\";\n\n\nconst Navbar = () => {\n    \n    const[token, setToken, deleteToken] = useCookies(['mr-token']);\n\n\nconst logoutUser = () => {\n      console.log(\"inside logoutUser\");\n      console.log(token);\n      deleteToken(['mr-token']);\n      console.log(token);\n}\n  \n    return (\n        <>\n           <Nav>\n            <NavLogo to=\"/\">\n                Logo\n            </NavLogo>\n            <Bars />\n            <NavMenu>\n            <NavLink to=\"/AboutusScreen\" activeStyle>\n                    עלינו\n                </NavLink>\n            <NavLink to=\"/TeachersScreen\" activeStyle>\n                    הדרכה\n                </NavLink>\n            <NavLink to=\"/ProfileScreen\" activeStyle>\n                    פרופייל\n                </NavLink>\n            <NavLink to=\"/ProjectsScreen\" activeStyle>\n                    פרויקטים\n                </NavLink> \n                <NavLink to=\"/CoursesMainScreen\" activeStyle>\n                    לֹמידה\n                </NavLink>\n                <NavLink to=\"/HomeScreen\" activeStyle>\n                    דף הבית\n                </NavLink>\n               \n\n                {token['mr-token'] ? (<NavBtn onClick={logoutUser} activeStyle>\n                    התנתק\n                </NavBtn> ) : <NavLink  to=\"/Signin\" activeStyle>\n                    התחבר\n                </NavLink>}\n\n                \n            </NavMenu> \n           </Nav> \n        </>\n    );\n};\nexport default Navbar;","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/components/Popup.js",[],"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/components/UpdateUserDetails.js",["125","126","127","128","129","130","131","132","133","134","135"],"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/components/Navbar/NavbarElements.js",[],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":2,"column":16,"nodeType":"142","messageId":"143","endLine":2,"endColumn":25},{"ruleId":"140","severity":1,"message":"144","line":19,"column":10,"nodeType":"142","messageId":"143","endLine":19,"endColumn":15},{"ruleId":"140","severity":1,"message":"145","line":19,"column":17,"nodeType":"142","messageId":"143","endLine":19,"endColumn":25},{"ruleId":"140","severity":1,"message":"146","line":19,"column":27,"nodeType":"142","messageId":"143","endLine":19,"endColumn":38},{"ruleId":"140","severity":1,"message":"145","line":15,"column":17,"nodeType":"142","messageId":"143","endLine":15,"endColumn":25},{"ruleId":"140","severity":1,"message":"146","line":15,"column":27,"nodeType":"142","messageId":"143","endLine":15,"endColumn":38},{"ruleId":"140","severity":1,"message":"147","line":40,"column":8,"nodeType":"142","messageId":"143","endLine":40,"endColumn":15},{"ruleId":"148","severity":1,"message":"149","line":77,"column":4,"nodeType":"150","endLine":77,"endColumn":6,"suggestions":"151"},{"ruleId":"152","severity":1,"message":"153","line":130,"column":2,"nodeType":"154","messageId":"155","endLine":130,"endColumn":118},{"ruleId":"156","severity":1,"message":"157","line":138,"column":50,"nodeType":"158","messageId":"159","endLine":138,"endColumn":52},{"ruleId":"156","severity":1,"message":"160","line":161,"column":22,"nodeType":"158","messageId":"159","endLine":161,"endColumn":24},{"ruleId":"152","severity":1,"message":"153","line":165,"column":5,"nodeType":"154","messageId":"155","endLine":171,"endColumn":8},{"ruleId":"152","severity":1,"message":"153","line":166,"column":7,"nodeType":"154","messageId":"155","endLine":166,"endColumn":42},{"ruleId":"152","severity":1,"message":"153","line":167,"column":7,"nodeType":"154","messageId":"155","endLine":167,"endColumn":42},{"ruleId":"161","severity":1,"message":"162","line":168,"column":47,"nodeType":"163","messageId":"164","endLine":168,"endColumn":48},{"ruleId":"152","severity":1,"message":"153","line":186,"column":3,"nodeType":"154","messageId":"155","endLine":189,"endColumn":6},{"ruleId":"161","severity":1,"message":"162","line":187,"column":47,"nodeType":"163","messageId":"164","endLine":187,"endColumn":48},{"ruleId":"156","severity":1,"message":"160","line":202,"column":20,"nodeType":"158","messageId":"159","endLine":202,"endColumn":22},{"ruleId":"152","severity":1,"message":"153","line":211,"column":3,"nodeType":"154","messageId":"155","endLine":213,"endColumn":6},{"ruleId":"161","severity":1,"message":"162","line":212,"column":45,"nodeType":"163","messageId":"164","endLine":212,"endColumn":46},{"ruleId":"165","severity":1,"message":"166","line":272,"column":39,"nodeType":"167","messageId":"168","endLine":272,"endColumn":41},{"ruleId":"156","severity":1,"message":"160","line":273,"column":32,"nodeType":"158","messageId":"159","endLine":273,"endColumn":34},{"ruleId":"165","severity":1,"message":"166","line":309,"column":32,"nodeType":"167","messageId":"168","endLine":309,"endColumn":34},{"ruleId":"156","severity":1,"message":"160","line":310,"column":27,"nodeType":"158","messageId":"159","endLine":310,"endColumn":29},{"ruleId":"152","severity":1,"message":"153","line":312,"column":17,"nodeType":"154","messageId":"155","endLine":312,"endColumn":66},{"ruleId":"152","severity":1,"message":"153","line":313,"column":17,"nodeType":"154","messageId":"155","endLine":313,"endColumn":51},{"ruleId":"156","severity":1,"message":"160","line":321,"column":102,"nodeType":"158","messageId":"159","endLine":321,"endColumn":104},{"ruleId":"140","severity":1,"message":"169","line":2,"column":10,"nodeType":"142","messageId":"143","endLine":2,"endColumn":19},{"ruleId":"140","severity":1,"message":"170","line":2,"column":20,"nodeType":"142","messageId":"143","endLine":2,"endColumn":23},{"ruleId":"140","severity":1,"message":"171","line":2,"column":24,"nodeType":"142","messageId":"143","endLine":2,"endColumn":27},{"ruleId":"140","severity":1,"message":"172","line":2,"column":28,"nodeType":"142","messageId":"143","endLine":2,"endColumn":32},{"ruleId":"140","severity":1,"message":"173","line":2,"column":34,"nodeType":"142","messageId":"143","endLine":2,"endColumn":40},{"ruleId":"140","severity":1,"message":"174","line":5,"column":8,"nodeType":"142","messageId":"143","endLine":5,"endColumn":14},{"ruleId":"140","severity":1,"message":"175","line":9,"column":8,"nodeType":"142","messageId":"143","endLine":9,"endColumn":25},{"ruleId":"140","severity":1,"message":"176","line":10,"column":7,"nodeType":"142","messageId":"143","endLine":10,"endColumn":12},{"ruleId":"140","severity":1,"message":"145","line":18,"column":19,"nodeType":"142","messageId":"143","endLine":18,"endColumn":27},{"ruleId":"140","severity":1,"message":"146","line":18,"column":29,"nodeType":"142","messageId":"143","endLine":18,"endColumn":40},{"ruleId":"148","severity":1,"message":"177","line":29,"column":8,"nodeType":"150","endLine":29,"endColumn":10,"suggestions":"178"},{"ruleId":"179","severity":1,"message":"180","line":55,"column":1,"nodeType":"181","messageId":"159","endLine":68,"endColumn":2},{"ruleId":"179","severity":1,"message":"180","line":69,"column":1,"nodeType":"181","messageId":"159","endLine":82,"endColumn":2},{"ruleId":"179","severity":1,"message":"182","line":178,"column":21,"nodeType":"181","messageId":"159","endLine":186,"endColumn":26},{"ruleId":"179","severity":1,"message":"183","line":189,"column":25,"nodeType":"181","messageId":"159","endLine":198,"endColumn":30},{"ruleId":"179","severity":1,"message":"184","line":199,"column":25,"nodeType":"181","messageId":"159","endLine":209,"endColumn":34},{"ruleId":"179","severity":1,"message":"185","line":210,"column":25,"nodeType":"181","messageId":"159","endLine":224,"endColumn":34},{"ruleId":"179","severity":1,"message":"186","line":225,"column":33,"nodeType":"181","messageId":"159","endLine":236,"endColumn":34},{"ruleId":"179","severity":1,"message":"187","line":237,"column":33,"nodeType":"181","messageId":"159","endLine":247,"endColumn":34},{"ruleId":"179","severity":1,"message":"188","line":249,"column":33,"nodeType":"181","messageId":"159","endLine":259,"endColumn":38},{"ruleId":"140","severity":1,"message":"141","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":26},{"ruleId":"140","severity":1,"message":"189","line":1,"column":28,"nodeType":"142","messageId":"143","endLine":1,"endColumn":36},{"ruleId":"140","severity":1,"message":"190","line":11,"column":3,"nodeType":"142","messageId":"143","endLine":11,"endColumn":13},{"ruleId":"140","severity":1,"message":"145","line":17,"column":18,"nodeType":"142","messageId":"143","endLine":17,"endColumn":26},{"ruleId":"140","severity":1,"message":"169","line":2,"column":10,"nodeType":"142","messageId":"143","endLine":2,"endColumn":19},{"ruleId":"140","severity":1,"message":"170","line":2,"column":20,"nodeType":"142","messageId":"143","endLine":2,"endColumn":23},{"ruleId":"140","severity":1,"message":"171","line":2,"column":24,"nodeType":"142","messageId":"143","endLine":2,"endColumn":27},{"ruleId":"140","severity":1,"message":"172","line":2,"column":28,"nodeType":"142","messageId":"143","endLine":2,"endColumn":32},{"ruleId":"140","severity":1,"message":"173","line":2,"column":34,"nodeType":"142","messageId":"143","endLine":2,"endColumn":40},{"ruleId":"140","severity":1,"message":"174","line":5,"column":8,"nodeType":"142","messageId":"143","endLine":5,"endColumn":14},{"ruleId":"140","severity":1,"message":"176","line":8,"column":7,"nodeType":"142","messageId":"143","endLine":8,"endColumn":12},{"ruleId":"140","severity":1,"message":"191","line":9,"column":7,"nodeType":"142","messageId":"143","endLine":9,"endColumn":12},{"ruleId":"140","severity":1,"message":"145","line":24,"column":19,"nodeType":"142","messageId":"143","endLine":24,"endColumn":27},{"ruleId":"140","severity":1,"message":"146","line":24,"column":29,"nodeType":"142","messageId":"143","endLine":24,"endColumn":40},{"ruleId":"148","severity":1,"message":"177","line":35,"column":8,"nodeType":"150","endLine":35,"endColumn":10,"suggestions":"192"},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","'setToken' is assigned a value but never used.","'deleteToken' is assigned a value but never used.","'lessons' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'IdFromURL' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["195"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'Signin' is defined but never used.","'UpdateUserDetails' is defined but never used.","'axios' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["196"],"no-dupe-class-members","Duplicate name 'getUserDetails'.","MethodDefinition","Duplicate name 'loginUser'.","Duplicate name 'registerUser'.","Duplicate name 'displayCourses'.","Duplicate name 'getLessons'.","Duplicate name 'getNextLesson'.","Duplicate name 'getPreviousLesson'.","Duplicate name 'getCurrentCourse'.","'useState' is defined but never used.","'NavBtnLink' is defined but never used.","'Popup' is defined but never used.",["197"],"no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"200","fix":"202"},"Update the dependencies array to be: [IdFromURL, token]",{"range":"203","text":"204"},"Update the dependencies array to be: [token]",{"range":"205","text":"206"},{"range":"207","text":"206"},[2494,2496],"[IdFromURL, token]",[984,986],"[token]",[1110,1112]]