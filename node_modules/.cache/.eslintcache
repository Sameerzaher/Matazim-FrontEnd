[{"C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\index.js":"1","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\App.js":"2","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\reportWebVitals.js":"3","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\Signin.js":"4","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\HomepageScreen.js":"5","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\ProfileScreen.js":"6","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\CoursesScreen.js":"7","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\CoursesMainScreen.js":"8","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\ProjectsScreen.js":"9","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\api-service.js":"10","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\components\\Navbar\\index.js":"11","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\components\\Popup.js":"12","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\components\\Navbar\\NavbarElements.js":"13","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\AboutusScreen.js":"14","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\TeachersScreen.js":"15","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\components\\UpdateUserDetails.js":"16","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\UserProfile.js":"17","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\UserRegistration.js":"18","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\CheckUserAssignments.js":"19"},{"size":953,"mtime":1636454510000,"results":"20","hashOfConfig":"21"},{"size":1891,"mtime":1645536250264,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1633425085070,"results":"23","hashOfConfig":"21"},{"size":5473,"mtime":1645455711218,"results":"24","hashOfConfig":"21"},{"size":240,"mtime":1636454510000,"results":"25","hashOfConfig":"21"},{"size":9980,"mtime":1644619832203,"results":"26","hashOfConfig":"21"},{"size":19888,"mtime":1647188263192,"results":"27","hashOfConfig":"21"},{"size":2465,"mtime":1640871680768,"results":"28","hashOfConfig":"21"},{"size":158,"mtime":1636454510000,"results":"29","hashOfConfig":"21"},{"size":34686,"mtime":1646758845448,"results":"30","hashOfConfig":"21"},{"size":1707,"mtime":1642800844769,"results":"31","hashOfConfig":"21"},{"size":2388,"mtime":1638458714563,"results":"32","hashOfConfig":"21"},{"size":1664,"mtime":1645981745314,"results":"33","hashOfConfig":"21"},{"size":248,"mtime":1639656124485,"results":"34","hashOfConfig":"21"},{"size":12040,"mtime":1644623517417,"results":"35","hashOfConfig":"21"},{"size":5436,"mtime":1640854434956,"results":"36","hashOfConfig":"21"},{"size":5521,"mtime":1645536148686,"results":"37","hashOfConfig":"21"},{"size":4329,"mtime":1645454933917,"results":"38","hashOfConfig":"21"},{"size":7235,"mtime":1647193785523,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"etbtul",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"42"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\index.js",[],["88","89"],"C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\App.js",["90","91","92","93"],"import './App.css';\nimport React, {useEffect} from 'react';\nimport Navbar from \"./components/Navbar\";\nimport HomepageScreen from './pages/HomepageScreen';\nimport CoursesScreen from './pages/CoursesScreen';\nimport ProjectsScreen from './pages/ProjectsScreen';\nimport ProfileScreen from './pages/ProfileScreen';\nimport CoursesMainScreen from './pages/CoursesMainScreen';\nimport TeachersScreen from './pages/TeachersScreen';\nimport AboutusScreen from './pages/AboutusScreen';\nimport UpdateUserDetails from './components/UpdateUserDetails';\nimport Signin from './pages/Signin'; \nimport UserProfile from './pages/UserProfile'; \nimport UserRegistration from './pages/UserRegistration'; \nimport CheckUserAssignments from './pages/CheckUserAssignments';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { useCookies } from 'react-cookie';\n\n\n\nfunction App() {\n  const [token, setToken, deleteToken] = useCookies(['mr-token']);\n\n\n  return (\n\n    <Router>\n     \n      <Navbar />\n      <Switch>\n        <Route path=\"/HomepageScreen\" exact component={HomepageScreen} />\n        <Route path=\"/CoursesScreen\" component={CoursesScreen} />\n        <Route path=\"/ProjectsScreen\" component={ProjectsScreen} />\n        <Route path=\"/ProfileScreen\" component={ProfileScreen} />\n        <Route path=\"/TeachersScreen\" component={TeachersScreen} />\n        <Route path=\"/AboutusScreen\" component={AboutusScreen} />\n        <Route path=\"/Signin\" component={Signin} />\n        <Route path=\"/CoursesMainScreen\" component={CoursesMainScreen} />\n        <Route path=\"/UpdateUserDetails\" component={UpdateUserDetails}/>\n        <Route path=\"/UserProfile\" component={UserProfile}/>\n        <Route path=\"/UserRegistration\" component={UserRegistration}/>\n        <Route path=\"/CheckUserAssignments\" component={CheckUserAssignments}/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\reportWebVitals.js",[],"C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\Signin.js",["94","95","96","97"],"import React, {useEffect, useState} from 'react';\r\nimport { API } from '../api-service';\r\nimport { useCookies } from 'react-cookie';\r\nimport validator from 'validator'\r\n\r\nfunction Signin(){\r\n    \r\n    const[username, setUsername ] = useState('');\r\n    const[password, setPassword ] = useState('');\r\n    const[firstName, setFirstName ] = useState('');\r\n    const[lastName, setLastaName ] = useState('');\r\n    const[errorMessage, setErrorMessage ] = useState('');\r\n    const[token, setToken] = useCookies(['mr-token']);\r\n    const[isLoginView, setIsLoginView ] = useState(true);\r\n    const[userRegistered, setUserRegistered ] = useState(false);\r\n \r\n    //const emailRegex = /^(([^<>()[]\\\\.,;:\\s@\\\"]+(\\.[^<>()[]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    useEffect( () =>{\r\n        console.log(token)\r\n         if(token['mr-token'] )  \r\n            if(token['mr-token'] === 'undefined' )\r\n            setErrorMessage('שם משתמש או סיסמא לא נכונים') \r\n            else\r\n                window.location.href ='/HomePageScreen'; \r\n      }, [token])\r\n\r\n    //   useEffect( () =>{\r\n    //     console.log(\"in use effect og registration\")\r\n    //     API.registerUserProfile(username)\r\n    //         .then( resp => console.log(resp))\r\n    //         //.then( resp => console.log(resp))                \r\n    //         .catch( error => console.log(error))\r\n    //     setUserRegistered(false);\r\n    //   }, [userRegistered])\r\n\r\n\r\n  \r\n\r\n    const loginClicked = () =>  {\r\n        console.log(username, password)\r\n        API.loginUser({username, password})\r\n            //.then( resp => console.log(resp.username))\r\n            .then( resp => setToken('mr-token', resp.token))\r\n            .catch( error => console.log(error))     \r\n    }\r\n    const registerClicked = () =>  {\r\n        // checke if all the values correct\r\n        if (!validator.isEmail(username))\r\n            setErrorMessage('שם משתמש לא חוקי');\r\n        else if (password==\"\")    \r\n            setErrorMessage('הכנס סיסמא');\r\n        else if (firstName==\"\")   \r\n            setErrorMessage('הכנס שם פרטי');\r\n        else if (lastName==\"\")  \r\n            setErrorMessage('הכנס שם משפחה');\r\n        else{\r\n            setErrorMessage('');\r\n            registerUser();\r\n            \r\n            // createUserProfile()\r\n            // API.registerUser({username, password})\r\n            //     .then( resp => console.log(resp))\r\n            //     //.then( await createUserProfile(username))\r\n            //     .catch( error => console.log(error))\r\n            // await createUserProfile(username)\r\n        }    \r\n    }\r\n    function sleep(time){\r\n        return new Promise((resolve)=>setTimeout(resolve,time)\r\n      )\r\n  }\r\n    const registerUser = () =>  {\r\n        API.registerUser({username, password})\r\n                .then( resp => console.log(resp))\r\n                .then(createUserProfile)\r\n                .then( setUserRegistered(true))\r\n                .catch( error => console.log(error))\r\n                //setUserRegistered(true)     \r\n    }\r\n    const createUserProfile =  () => {       \r\n        console.log(\"gfhfghghf\")\r\n        sleep(100).then(()=>{\r\n        API.registerUserProfile(username, firstName, lastName)\r\n            .then( resp => console.log(resp))                \r\n            .catch( error => console.log(error)) \r\n        })\r\n    }\r\n\r\n    return (\r\n          <div className=\"App\">\r\n             {isLoginView ?  <h1>!התחבר</h1> : <h1>!הירשם</h1>}\r\n             <p style={{color : \"red\"}}>{errorMessage}</p>\r\n             <label htmlFor=\"username\">Username</label><br/>\r\n             <input id=\"username\" type=\"text\" placeholder=\"username\" value={username}\r\n                     onChange={ evt=> setUsername(evt.target.value)}   \r\n              /><br/>\r\n             <label htmlFor=\"password\">Password</label><br/>\r\n              <input id=\"password\" type=\"password\" placeholder=\"password\" value={password}\r\n                     onChange={ evt=> setPassword(evt.target.value)}/><br/>\r\n\r\n            {isLoginView ? \" \": <label htmlFor=\"firstName\">שם פרטי</label>}\r\n            {isLoginView ? \" \":<br/>}\r\n            {isLoginView ? \" \": <input id=\"firstName\" type=\"text\" placeholder=\" \" value={firstName}\r\n                     onChange={ evt=> setFirstName(evt.target.value)}   \r\n              />}\r\n              {isLoginView ? \" \": <br/>}\r\n              {isLoginView ? \" \":<label htmlFor=\"lastName\">שם משפחה</label>}\r\n              {isLoginView ? \" \":<br/>}\r\n              {isLoginView ? \" \":<input id=\"lastName\" type=\"text\" placeholder=\" \" value={lastName}\r\n                     onChange={ evt=> setLastaName(evt.target.value)}/>}\r\n                   {isLoginView ? \" \":  <br/>}  \r\n    \r\n             {isLoginView ?  \r\n                <button onClick={loginClicked}>התחבר</button>:\r\n                \r\n                <button onClick={registerClicked}>הירשם</button>}\r\n                {isLoginView ? \r\n                  <p onClick={() => setIsLoginView(false)}> אם אינך רשום לאתר - הירשם כאן</p>: \r\n                  <p onClick={() => setIsLoginView(true)}>  אם הינך רשום לאתר - התחבר כאן</p>\r\n                }\r\n{/* <button onClick={() => createUserProfile(username)}>לחץ כאן</button> */}\r\n            </div>\r\n    \r\n      )\r\n\r\n}\r\nexport default Signin;\r\n\r\n","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\HomepageScreen.js",[],"C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\ProfileScreen.js",["98","99","100","101","102","103","104","105","106","107","108","109","110","111"],"import React, {useEffect, useState} from 'react';\r\nimport { Container,Row,Col,Form ,Button} from 'react-bootstrap';\r\nimport { useCookies } from 'react-cookie';\r\nimport { API } from '../api-service';\r\nimport Signin from '../pages/Signin'; \r\nimport { useHistory } from \"react-router-dom\";\r\nimport Popup from '../components/Popup';\r\nimport '../index.css';\r\nimport UpdateUserDetails from '../components/UpdateUserDetails'\r\nconst axios = require('axios');\r\n\r\n\r\nconst ProfileScreen = () => {\r\n    const history = useHistory();\r\n    const handleRoute = () =>{ \r\n        history.push(\"/UpdateUserDetails\");\r\n      }\r\n    const [token] = useCookies(['mr-token']);\r\n\r\n    const [user,setUser] = useState([]);\r\n    const [courses,setCourses] = useState([]);\r\n    const [userCourses, setUserCourses] = useState([]);\r\n    const [updateDetailsPopup, setUpdateDetailsPopup] = useState(false);\r\n    const[newFirstname, setNewFirstName ] = useState();\r\n    const[newLastName, setNewLastName ] = useState();\r\n    const[newAboutMe, setNewAboutMe ] = useState();\r\n    const[newHobbies, setNewHobbies ] = useState();\r\n    const[newMyGoal, setNewMyGoal ] = useState();\r\n\r\n    //   test\r\n    const [studentsInClass, setsStudentsInClass] = useState([]);\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        if(!token['mr-token']) window.location.href = '/Signin';\r\n        //var username = Signin.username\r\n        //console.log(\"username is:\",username)\r\n        API.getUserDetails(token['mr-token'])\r\n            //.then(resp => console.log(\"resp is:\", resp.results))\r\n         .then(resp => setUser(resp.results))\r\n         .then(resp => console.log(resp.results))\r\n        //  .then(setDetails())  \r\n         .catch( error => console.log(error)) \r\n        API.getAllUserCourses(token['mr-token'])\r\n            .then(resp => getCourseName(resp.results)) \r\n            //.then(resp => console.log(\"resp is:\", resp.results))\r\n            // .then(resp => setCourses(resp.results))  \r\n            .catch( error => console.log(error))\r\n      \r\n        \r\n\r\n    //         /////todo - add int value\r\n    //         API.getClassStudentsByID(2)\r\n    //         .then(resp => setsStudentsInClass(resp.results)) \r\n    //         .catch( error => console.log(error))\r\n    }, [])\r\n\r\n    const getCourseName = (courses) =>{\r\n        console.log(\"in fun\",courses)\r\n        courses.map(course => { \r\n            API.getCourses(course.course) \r\n                 .then(resp => setUserCourses((userCourses) => [...userCourses, resp]))\r\n     })     \r\n    }\r\n    const setDetails= () =>  {\r\n      console.log(\"inside setDetails\", user)  \r\n      console.log(\"time passed: \", user)\r\n      setNewFirstName(user.firstName)\r\n      setNewLastName(user.lastName)\r\n      setNewAboutMe(user.aboutMe)\r\n      setNewHobbies(user.hobbies)\r\n      setNewMyGoal(user.myGoal)\r\n    \r\n      }\r\n\r\n    const updateDetails= () =>  {\r\n      setDetails()\r\n      setUpdateDetailsPopup(true)\r\n      }\r\n\r\n      const updateNewDetails= () =>  {      \r\n         API.updateUserDetails(token['mr-token'], newFirstname, newLastName, newAboutMe, newHobbies, newMyGoal)\r\n         setUpdateDetailsPopup(false)\r\n         sleep(100).then(()=>{\r\n          API.getUserDetails(token['mr-token'])     \r\n            .then(resp => setUser(resp.results))\r\n            .then(resp => console.log(resp.results)) \r\n            .catch(error => console.log(error)) \r\n           })\r\n        }\r\n\r\n      function sleep(time){\r\n        return new Promise((resolve)=>setTimeout(resolve,time)\r\n      )\r\n  }\r\n    return(\r\n        <div className=\"App\">\r\n        <header className=\"Header\"> הדף של {user.firstName}  {user.lastName}</header>\r\n        <div className=\"profile\">\r\n          \r\n      \r\n            <div>\r\n        <h4>שם משתמש:</h4>\r\n         <p>{user.username}</p>\r\n\r\n         {/* test */}\r\n         {/* {console.log(\"user class is: \",user.studentClasses && user.studentClasses[0].className)}\r\n         {console.log(\"the students in class number 2 are: \",studentsInClass)} */}\r\n        \r\n         <br/>\r\n\r\n         <h4>שם פרטי: </h4>\r\n         <p>{user.firstName}</p>\r\n         <br/>\r\n\r\n       <h4>שם משפחה:</h4>\r\n       <p>{user.lastName}</p>\r\n      \r\n       </div>\r\n        <div>\r\n        {/* <h4>דואר אלקטרוני:</h4>\r\n       <p>{user.email}</p> */}\r\n         \r\n       <h4>קצת עליי..</h4>\r\n       <p>{user.aboutMe}</p>\r\n       \r\n       <h4>הקורסים שלי:</h4>\r\n\r\n        { userCourses.map(course => { \r\n                return <p>           \r\n                  <p>\r\n                  {course.name} </p>                             \r\n            </p> \r\n               \r\n          })}\r\n   <h4>הכיתות שלי:</h4>\r\n{ user.studentClasses && user.studentClasses.map(userClass => { \r\n                return <p>              \r\n                  <p>\r\n                  {userClass.className} </p>                             \r\n             </p>                \r\n          })}\r\n      \r\n\r\n\r\n\r\n      \r\n       </div>\r\n       <div>\r\n       <h4>תחביבים:</h4>\r\n       <p>{user.hobbies}</p>\r\n      \r\n       <br/>\r\n       <h4>הבאדג'ים שלך:</h4>\r\n         <p>{user.badges}</p>\r\n        \r\n         <br/>\r\n         <h4>המטרה שלי:</h4>\r\n         <p>{user.myGoal}</p>\r\n         \r\n       </div>\r\n       </div>\r\n        <button onClick={handleRoute}>עדכון פרטים</button>\r\n        <button onClick={updateDetails}> עדכון פרטים חדש</button>\r\n\r\n        <Popup trigger={updateDetailsPopup} setTrigger={setUpdateDetailsPopup}>\r\n  <h4>עדכון פרטים</h4>\r\n  {/* <input type = \"text\" onChange={e => setUserToSearch(e.target.value) + setAddedSuccesfullyMessage('')}></input> */}\r\n{console.log(\"in popup \", user)}\r\n\r\n  <input type = \"text\" value={newFirstname} \r\n  onChange={e => setNewFirstName(e.target.value)}></input>\r\n  <h7> שם פרטי</h7><br/>\r\n  <input type = \"text\" value={newLastName} \r\n  onChange={e => setNewLastName(e.target.value)}></input>\r\n   <h7> שם משפחה</h7><br/>\r\n    <input type = \"text\" value={newAboutMe} \r\n  onChange={e => setNewAboutMe(e.target.value)}></input>\r\n  <h7> קצת עלי</h7><br/>\r\n    <input type = \"text\" value={newHobbies} \r\n  onChange={e => setNewHobbies(e.target.value)}></input>\r\n  <h7> תחביבים</h7><br/>\r\n    <input type = \"text\" value={newMyGoal} \r\n  onChange={e => setNewMyGoal(e.target.value)}></input>\r\n <h7> המטרה שלי</h7><br/>\r\n    <button onClick={updateNewDetails}>עדכן פרטים</button>\r\n    {/* {console.log(\"users are: \",userToAdd.id)}\r\n    <h5>{userToAdd!=\"null\"?  userToAdd.username: \" לא נמצא שם משתמש\"}</h5>\r\n    {<button  style={{display : userToAdd!=\"null\"  ? \"none\": \"\"}} onClick={() => goToSignIn(userToSearch)}>רשום משתמש</button>}\r\n    <p>{userToAdd && userToAdd.firstName}</p>\r\n    <p>{userToAdd && userToAdd.lastName}</p>\r\n    {<button  style={{display : userToAdd.id  ? \"\": \"none\"}} onClick={() => addUser(userToAdd.username)}>הוסף</button>}\r\n    <p>{addedSuccesfullyMessage}</p>     */}\r\n\r\n</Popup> \r\n\r\n        </div>\r\n    )    \r\n}\r\n        \r\n\r\n\r\n\r\n//         <div className=\"App\">\r\n//         <header className=\"Header\">דף פרופייל</header>\r\n//         <div className=\"profile\">\r\n//          {user.username}: שם משתמש \r\n//         </div>\r\n//         <div>\r\n//        :שם פרטי \r\n//         </div>\r\n//         <div>\r\n//         : שם משפחה\r\n//         </div>\r\n//         <div>\r\n//         : דואר אלקטרוני \r\n//         </div>\r\n//         <div>\r\n//        : גיל\r\n//         </div>\r\n//         <div>\r\n//        : תחביבים\r\n//         </div>\r\n//         <button onClick={UpdateUserDetails}>עדכון פרטים</button>\r\n//         </div>\r\n//     )\r\n// }\r\n /*\r\nclass ProfileScreen extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            user_id:this.props.user_id,\r\n            username:this.props.username,\r\n            email:this.props.email,\r\n            profileImage:this.props.profileImage,\r\n            msg:this.props.msg,\r\n            uploadedFile:null\r\n        }\r\n    }\r\n    fetchUserDetails=(user_id)=>{\r\n        //console.log(user_id);\r\n        axios.get(\"http://127.0.0.1:8000/main/users/\"+user_id,{\r\n            headers: {\r\n                \"content-type\": \"application/json\"\r\n              } \r\n        }).then(res=>{\r\n            console.log(res);\r\n            this.setState({email:res.data.results[0].email});\r\n            this.setState({profileImage:res.data.results[0].profileImage})\r\n        })\r\n        .catch(err=>console.log(err))\r\n    }\r\n    render(){\r\n        return (\r\n            <Container>\r\n            <Row>\r\n           \r\n            <Col>\r\n                <h1>User Profile</h1>\r\n                <Form className=\"form\">     \r\n        <p>{this.state.msg}</p>\r\n      <Form.Group controlId=\"formCategory1\">\r\n        <Form.Label>Username:</Form.Label>\r\n        <Form.Control type=\"text\" defaultValue={this.state.username}/>     \r\n      </Form.Group>\r\n      <Form.Group controlId=\"formCategory2\">\r\n        <Form.Label>Email:</Form.Label>\r\n        <Form.Control type=\"email\" defaultValue={this.state.email} />     \r\n      </Form.Group>\r\n      <Form.Group controlId=\"formCategory3\">\r\n        <Form.Label>First Name:</Form.Label>\r\n        <Form.Control type=\"text\" name=\"firstname\" onChange={this.changefirstname}/>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formCategory4\">\r\n        <Form.Label>Last Name:</Form.Label>\r\n        <Form.Control type=\"text\" name=\"lastname\" onChange={this.changelastname}/>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formCategory5\">\r\n        <Form.Label>Skills:</Form.Label>\r\n        <Form.Control type=\"text\" name=\"skills\" onChange={this.changeskills}/>\r\n        </Form.Group>\r\n      <Button variant=\"primary\" onClick={this.UpdateProfileHandler}>Update Profile</Button>\r\n      </Form>\r\n       </Col>\r\n    \r\n           </Row>\r\n            </Container>\r\n        )\r\n    }\r\n    \r\n}\r\n*/\r\nexport default ProfileScreen;","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\CoursesScreen.js",["112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134"],"C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\CoursesMainScreen.js",[],"C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\ProjectsScreen.js",[],"C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\api-service.js",["135","136","137","138","139","140","141","142","143","144"],"import React from \"react\"\r\nconst BASE_URL = 'https://yarintz.pythonanywhere.com';\r\nconst LOCAL_URL = 'http://127.0.0.1:8000';\r\nexport class API extends React.Component{\r\n/*\r\nstatic DisplayUser(body){ \r\n        console.log(body)\r\n        return fetch(`${LOCAL_URL}/main/users/21/`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify( body )\r\n        }).then( resp => resp.json())\r\n        }\r\n       */\r\n       /*\r\nstatic DisplayUserInfo(token, id, data){\r\n    return fetch(`${LOCAL_URL}/main/users/${id}/`),{\r\n        method: 'POST',\r\n        headers:{\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Token ${token}`\r\n        },\r\n        body: JSON.stringify( data )\r\n    }).then( resp => resp.json())  \r\n}*/\r\n// static getUserDetails(id){\r\n\r\n//     return fetch(`${LOCAL_URL}/main/users/${id}`,{\r\n//         method: 'GET',\r\n//         headers: {  \r\n//             'Content-Type':'application/json',\r\n           \r\n//         }\r\n//     }).then( resp => resp.json())\r\n//     //.then( res => props.UpdateUser(res))\r\n//     //.catch( error => console.log(error))\r\n// } \r\nstatic getUserDetails(token){\r\n\r\n    return fetch(`${BASE_URL}/main/userProfile/1/getUserDetails/`,{\r\n        method: 'POST',\r\n        headers: {  \r\n            'Content-Type':'application/json',\r\n            'Authorization': `Token ${token}` \r\n        }\r\n    })\r\n    //.then(resp => console.log(resp))\r\n     .then( resp => resp.json())\r\n    //.then( res => props.UpdateUser(res))\r\n    //.catch( error => console.log(error))\r\n} \r\n\r\nstatic getUserDetails(token){\r\n\r\n    return fetch(`${BASE_URL}/main/userProfile/1/getUserDetails/`,{\r\n        method: 'POST',\r\n        headers: {  \r\n            'Content-Type':'application/json',\r\n            'Authorization': `Token ${token}` \r\n        }\r\n    })\r\n    //.then(resp => console.log(resp))\r\n     .then( resp => resp.json())\r\n    //.then( res => props.UpdateUser(res))\r\n    //.catch( error => console.log(error))\r\n} \r\nstatic getUserDetails(token){\r\n\r\n    return fetch(`${LOCAL_URL}/main/userProfile/1/getUserDetails/`,{\r\n        method: 'POST',\r\n        headers: {  \r\n            'Content-Type':'application/json',\r\n            'Authorization': `Token ${token}` \r\n        }\r\n    })\r\n    //.then(resp => console.log(resp))\r\n     .then( resp => resp.json())\r\n    //.then( res => props.UpdateUser(res))\r\n    //.catch( error => console.log(error))\r\n}\r\n\r\n//samir\r\n// static UpdateUserDetails(token){\r\n\r\n//     return fetch(`${LOCAL_URL}/main/userProfile/1/UpdateUserDetails/`,{\r\n//         method: 'POST',\r\n//         headers: {  \r\n//             'Content-Type':'application/json',\r\n//             'Authorization': `Token ${token}` \r\n//         }\r\n//     })\r\n//     //.then(resp => console.log(resp))\r\n//      .then( resp => resp.json())\r\n//     //.then( res => props.UpdateUser(res))\r\n//     //.catch( error => console.log(error))\r\n// }  \r\nstatic loginUser(body){ \r\n    return fetch(`${BASE_URL}/auth/`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify( body )\r\n        }).then( resp => resp.json())\r\n    }\r\nstatic registerUser(body){ \r\n    console.log(body)\r\n        return fetch(`${BASE_URL}/main/users/`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify( body )\r\n            }).then( resp => resp.json())\r\n        }\r\n        // static registerUserProfile(username){ \r\n        //     return fetch(`${LOCAL_URL}/main/userProfile/1/createUserProfile/`, {\r\n        //         method: 'POST',\r\n        //         headers: {\r\n                \r\n        //           'Content-Type': 'application/json',\r\n        //           //'Authorization': `Token ${token}` \r\n        //              },\r\n        //              body: JSON.stringify({'username' : username})  \r\n                        \r\n        //         })\r\n        //           .then( resp => resp.json())\r\n                \r\n        //        } \r\n        static registerUserProfile(username, firstName, lastName){ \r\n            return fetch(`${LOCAL_URL}/main/userProfile/1/createUserProfile/`, {\r\n                method: 'POST',\r\n                headers: {\r\n                \r\n                  'Content-Type': 'application/json',\r\n                  //'Authorization': `Token ${token}` \r\n                     },\r\n                     body: JSON.stringify({'username' : username, 'firstName' : firstName,'lastName' : lastName} )  \r\n                        \r\n                })\r\n                  .then( resp => resp.json())\r\n                \r\n               }   \r\n\r\n        static displayCourses(){ \r\n                console.log(\"inside displayCourses fun\")\r\n                return fetch(`${BASE_URL}/main/courses/`, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                     },\r\n                    //body: JSON.stringify( body )\r\n                }).then( resp => resp.json())\r\n                // .then( resp => console.log(resp))\r\n                }           \r\n        static getLessons(){ \r\n                console.log(\"inside getLessons fun\")\r\n                // return fetch(`http://127.0.0.1:8000/main/courses/1/`, {\r\n                return fetch(`${BASE_URL}/admin/main/course/1/`, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                        },\r\n                    //body: JSON.stringify( body )\r\n                })\r\n                .then( resp => resp.json())\r\n                // .then( resp => console.log(resp))\r\n                \r\n                      \r\n                }  \r\n                static getNextLesson(num){ \r\n                    console.log(\"inside getNextLesson fun\")\r\n                    return fetch(`${BASE_URL}/main/lessons/${num}/`, {\r\n                        method: 'GET',\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                            },\r\n                        //body: JSON.stringify( body )\r\n                    })\r\n                    .then( resp => resp.json())\r\n                    // .then( resp => console.log(resp)) \r\n                }\r\n                static getPreviousLesson(num){ \r\n                    console.log(\"inside getPreviousLesson fun\")\r\n                    console.log(num)\r\n                    return fetch(`${BASE_URL}/main/lessons/${num}/`, {\r\n                        method: 'GET',\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                            },                       \r\n                    })\r\n                    .then( resp => resp.json())\r\n                }\r\n\r\n                static getCurrentCourse(numOfCourse){ \r\n                    console.log(\"inside displayCourses fun\")\r\n                    return fetch(`${BASE_URL}/main/courses/${numOfCourse}/`, {\r\n                        method: 'GET',\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                         },\r\n                        //body: JSON.stringify( body )\r\n                    }).then( resp => resp.json())\r\n                    // .then( resp => console.log(resp))\r\n                    }   \r\n               \r\n                    static loginUser(body){ \r\n                        return fetch(`${LOCAL_URL}/auth/`, {\r\n                            method: 'POST',\r\n                            headers: {\r\n                                'Content-Type': 'application/json'\r\n                            },\r\n                            body: JSON.stringify( body )\r\n                        }).then( resp => resp.json())\r\n                        }\r\n\r\n\r\n                        static registerUser(body){ \r\n                            console.log(body)\r\n                            return fetch(`${LOCAL_URL}/main/users/`, {\r\n                                method: 'POST',\r\n                                headers: {\r\n                                    'Content-Type': 'application/json'\r\n                                },\r\n                                body: JSON.stringify( body )\r\n                            }).then( resp => resp.json())\r\n                            }\r\n                        static displayCourses(){ \r\n                                console.log(\"inside displayCourses fun\")\r\n                                return fetch(`${LOCAL_URL}/main/courses/`, {\r\n                                    method: 'GET',\r\n                                    headers: {\r\n                                        'Content-Type': 'application/json'\r\n                                     },\r\n                                    //body: JSON.stringify( body )\r\n                                }).then( resp => resp.json())\r\n                                // .then( resp => console.log(resp))\r\n                                }  \r\n                                static getCourses(num){ \r\n                                    return fetch(`${BASE_URL}/main/courses/${num}`, {\r\n                                        method: 'GET',\r\n                                        headers: {\r\n                                            'Content-Type': 'application/json'\r\n                                         },\r\n                                    }).then( resp => resp.json())\r\n                                    }  \r\n\r\n                                    static getCourses(num){ \r\n                                        return fetch(`${LOCAL_URL}/main/courses/${num}`, {\r\n                                            method: 'GET',\r\n                                            headers: {\r\n                                                'Content-Type': 'application/json'\r\n                                             },\r\n                                        }).then( resp => resp.json())\r\n                                        } \r\n\r\n                        static getLessons(){ \r\n                                console.log(\"inside getLessons fun\")\r\n                                // return fetch(`http://127.0.0.1:8000/main/courses/1/`, {\r\n                                return fetch(`${LOCAL_URL}/admin/main/course/1/`, {\r\n                                    method: 'GET',\r\n                                    headers: {\r\n                                        'Content-Type': 'application/json'\r\n                                        },\r\n                                    //body: JSON.stringify( body )\r\n                                })\r\n                                .then( resp => resp.json())\r\n                                // .then( resp => console.log(resp))\r\n                                \r\n                                      \r\n                                }  \r\n                                static getNextLesson(num){ \r\n                                    console.log(\"inside getNextLesson fun\")\r\n                                    return fetch(`${LOCAL_URL}/main/lessons/${num}/`, {\r\n                                        method: 'GET',\r\n                                        headers: {\r\n                                            'Content-Type': 'application/json'\r\n                                            },\r\n                                        //body: JSON.stringify( body )\r\n                                    })\r\n                                    .then( resp => resp.json())\r\n                                    // .then( resp => console.log(resp)) \r\n                                }\r\n                                static getPreviousLesson(num){ \r\n                                    console.log(\"inside getPreviousLesson fun\")\r\n                                    console.log(num)\r\n                                    return fetch(`${LOCAL_URL}/main/lessons/${num}/`, {\r\n                                        method: 'GET',\r\n                                        headers: {\r\n                                            'Content-Type': 'application/json'\r\n                                            },                       \r\n                                    })\r\n                                    .then( resp => resp.json())\r\n                                }\r\n                \r\n                                static getCurrentCourse(numOfCourse){ \r\n                                    console.log(\"inside displayCourses fun\")\r\n                                    return fetch(`${LOCAL_URL}/main/courses/${numOfCourse}/`, {\r\n                                        method: 'GET',\r\n                                        headers: {\r\n                                            'Content-Type': 'application/json'\r\n                                         },\r\n                                        //body: JSON.stringify( body )\r\n                                    }).then( resp => resp.json())\r\n                                    // .then( resp => console.log(resp))\r\n                                    }\r\n                                static getUserLessons(){ \r\n                                        console.log(\"inside getUserLessons fun\")                           \r\n                                        return fetch(`${LOCAL_URL}/main/userLessons/`, {\r\n                                            method: 'GET',\r\n                                            headers: {\r\n                                                'Content-Type': 'application/json'\r\n                                                },\r\n                                            //body: JSON.stringify( body )\r\n                                        }).then( resp => resp.json())\r\n                                        //.then( resp => console.log(resp))\r\n                                        \r\n                                              \r\n                                        }  \r\n                static getUserNotes(token, data){ \r\n                    console.log(\"im in getUserNotes\")\r\n                  //  http://127.0.0.1:8000/main/userLessons/1/getUserLessons/                             \r\n                    return fetch(`${LOCAL_URL}/main/userLessons/1/getUserLessons/`, {\r\n                        method: 'POST',\r\n                        headers: {\r\n                        //   'Accept': 'application/json',\r\n                          'Content-Type': 'application/json',\r\n                          'Authorization': `Token ${token}` \r\n                             },\r\n                             body: JSON.stringify({'lesson' : data})  \r\n                            // body: JSON.stringify({data})  \r\n                            // params: {\r\n                            //     'lesson': '4'\r\n                            //   }                 \r\n                        })\r\n                          .then( resp => resp.json())\r\n                        //.then( resp => console.log(\"eewrwerrewreerwewfaj\"))\r\n                       }  \r\n                       static getUserAnswersById(userId, lessonID){                     \r\n                        return fetch(`${LOCAL_URL}/main/userLessons/1/getUserAnswers/`, {\r\n                            method: 'POST',\r\n                            headers: {\r\n                              'Content-Type': 'application/json'\r\n                                 },\r\n                                 body: JSON.stringify({'userId' : userId, 'lessonId' : lessonID})  \r\n                     \r\n                            })\r\n                              .then( resp => resp.json())\r\n                     \r\n                           }\r\n                       static updateUserNotes(token, data, numOfLesson){ \r\n                         return fetch(`${LOCAL_URL}/main/userLessons/${numOfLesson}/addUserLessons/`, {\r\n                            method: 'POST',\r\n                            headers: {\r\n                            \r\n                            //   'Content-Type': 'application/json',\r\n                              'Authorization': `Token ${token}` \r\n                                 },\r\n                                 body: JSON.stringify({'notes' : data})  \r\n                                    \r\n                            })\r\n                               .then( resp => resp.json())\r\n                           }  \r\n\r\n                           static getUserAnswer(token, data){ \r\n                            console.log(\"im in getUserAnswer\")                         \r\n                            return fetch(`${LOCAL_URL}/main/userLessons/1/getUserLessons/`, {\r\n                                method: 'POST',\r\n                                headers: {\r\n                                  'Content-Type': 'application/json',\r\n                                  'Authorization': `Token ${token}` \r\n                                     },\r\n                                     body: JSON.stringify({'lesson' : data})  \r\n              \r\n                                })\r\n                                  //.then( resp => console.log(resp))\r\n                                  .then( resp => resp.json())\r\n                            \r\n                               }  \r\n                            //    static updateUserAnswer(token, answer,link, image, numOfLesson){                             \r\n                            //     return fetch(`${LOCAL_URL}/main/userLessons/${numOfLesson}/addUserLessons/`, {\r\n                            //         method: 'POST',\r\n                            //         //format: 'multipart',\r\n                            //         headers: {\r\n                            //         //   'Accept': 'application/json, text/plain',\r\n                            //         //   'Content-Type': 'application/json',\r\n                            //           'Authorization': `Token ${token}` \r\n                            //              },\r\n                            //             //  body: JSON.stringify({'answer' : answer, 'link' : link, 'image' : image})  \r\n                            //             // body: JSON.stringify({'answer' : answer, 'link' : link}), 'image' : image\r\n                            //             body: {'answer' : answer, 'link' : link, 'image' : image}\r\n                            //         })\r\n                            //           //.then( resp => resp.json())\r\n                            //        }\r\n\r\n                            static updateUserAnswer(token, uploadData, numOfLesson){                             \r\n                                return fetch(`${LOCAL_URL}/main/userLessons/${numOfLesson}/addUserLessons/`, {\r\n                                    method: 'POST',\r\n                                    //format: 'multipart',\r\n                                    headers: {\r\n                                    //   'Accept': 'application/json, text/plain',\r\n                                    //   'Content-Type': 'application/json',\r\n                                      'Authorization': `Token ${token}` \r\n                                         },\r\n                                        //  body: JSON.stringify({'answer' : answer, 'link' : link, 'image' : image})  \r\n                                        // body: JSON.stringify({'answer' : answer, 'link' : link}), 'image' : image\r\n                                        body: uploadData\r\n                                    })\r\n                                      //.then( resp => resp.json())\r\n                                   }\r\n                                   \r\n                                   static getUserLastLesson(token, numOfCourse){                                                       \r\n                                    return fetch(`${LOCAL_URL}/main/userCourses/${numOfCourse}/getUserCourses/`, {\r\n                                        method: 'POST',\r\n                                        headers: {\r\n                                          'Content-Type': 'application/json',\r\n                                          'Authorization': `Token ${token}` \r\n                                             },\r\n                                            //  body: JSON.stringify({'course' : data})  \r\n                      \r\n                                        })\r\n                                          //.then( resp => console.log(resp))\r\n                                          .then( resp => resp.json())\r\n                                    \r\n                                       } \r\n                                       static getAllUserCourses(token){                                                        \r\n                                        return fetch(`${LOCAL_URL}/main/userCourses/1/getAllUserCourses/`, {\r\n                                            method: 'GET',\r\n                                            headers: {\r\n                                              'Content-Type': 'application/json',\r\n                                              'Authorization': `Token ${token}` \r\n                                                 },                         \r\n                                            })                                    \r\n                                              .then( resp => resp.json())                                       \r\n                                           }\r\n                                        //    static getAllUserCourses(token){                                                       \r\n                                        //     return fetch(`${BASE_URL}/main/userCourses/1/getAllUserCourses/`, {\r\n                                        //         method: 'GET',\r\n                                        //         headers: {\r\n                                        //           'Content-Type': 'application/json',\r\n                                        //           'Authorization': `Token ${token}` \r\n                                        //              },                         \r\n                                        //         })                                    \r\n                                        //           .then( resp => resp.json())                                       \r\n                                        //        }  \r\n                                               static getAllCoursesByUserId(id){  \r\n                                                console.log(\"id is: \" ,id)                                                     \r\n                                                return fetch(`${LOCAL_URL}/main/userCourses/${id}/getAllCoursesByUserId/`, {\r\n                                                    method: 'GET',\r\n                                                    headers: {\r\n                                                      'Content-Type': 'application/json',                                                     \r\n                                                         },                         \r\n                                                    }).then( resp => resp.json())\r\n                                                     //.then( resp => console.log(\"in API \", resp))                                       \r\n                                                   }\r\n                                                //    static getAllCoursesByUserId(id){ \r\n                                                //     console.log(\"im here in base\")                                                      \r\n                                                //     return fetch(`${BASE_URL}/main/userCourses/${id}/getAllCoursesByUserId/`, {\r\n                                                //         method: 'GET',\r\n                                                //         headers: {\r\n                                                //           'Content-Type': 'application/json',                                                       \r\n                                                //              },                         \r\n                                                //         })                                    \r\n                                                //           .then( resp => resp.json())                                       \r\n                                                //        }  \r\n                                       \r\n                                       static updateUserCourse(token, data, numOfCourse){                             \r\n                                        return fetch(`${LOCAL_URL}/main/userCourses/${numOfCourse}/addUserCourses/`, {\r\n                                            method: 'POST',\r\n                                            headers: {\r\n                                            \r\n                                              'Content-Type': 'application/json',\r\n                                              'Authorization': `Token ${token}` \r\n                                                 },\r\n                                                 body: JSON.stringify({'lesson' : data})  \r\n                                                    \r\n                                            })\r\n                                              .then( resp => resp.json())\r\n                                           }\r\n                                           static getClassStudentsByID(classId){                                                                                  \r\n                                                return fetch(`${LOCAL_URL}/main/class/${classId}/getClassStudents/`, {\r\n                                                     method: 'POST',\r\n                                                     headers: {\r\n                                                        'Content-Type': 'application/json'\r\n                                                     },                                           \r\n                                              })\r\n                                             .then( resp => resp.json())                                                                                                                               \r\n                                             }  \r\n                                             static getClassTeacherssByID(classId){                                                                                  \r\n                                                return fetch(`${LOCAL_URL}/main/class/${classId}/getClassTeachers/`, {\r\n                                                     method: 'POST',\r\n                                                     headers: {\r\n                                                        'Content-Type': 'application/json'\r\n                                                     },                                           \r\n                                              })\r\n                                             .then( resp => resp.json())                                                                                                                               \r\n                                             }  \r\n                                             static getClassCoordinatorsByID(classId){                                                                                  \r\n                                                return fetch(`${LOCAL_URL}/main/class/${classId}/getClassCoordinators/`, {\r\n                                                     method: 'POST',\r\n                                                     headers: {\r\n                                                        'Content-Type': 'application/json'\r\n                                                     },                                           \r\n                                              })\r\n                                             .then( resp => resp.json())                                                                                                                               \r\n                                             }  \r\n                                             static getUserProfileById(id){                                     \r\n                                                return fetch(`${LOCAL_URL}/main/userProfile/${id}/`, {\r\n                                                    method: 'GET',\r\n                                                    headers: {\r\n                                                        'Content-Type': 'application/json'\r\n                                                        },                       \r\n                                                })\r\n                                                .then( resp => resp.json())\r\n                                            }\r\n                                            static getUserByUsername(username){  \r\n                                                console.log(\"im here\");                                                                                \r\n                                                return fetch(`${LOCAL_URL}/main/userProfile/1/getUserByUsername/`, {\r\n                                                     method: 'POST',\r\n                                                     headers: {\r\n                                                        'Content-Type': 'application/json'\r\n                                                     }, \r\n                                                     body: JSON.stringify({'username' : username})\r\n                                                                                    \r\n                                              })\r\n                                              .then( resp => resp.json())  \r\n                                            //   .then( resp => resp.json()) \r\n                                            }\r\n                                            static addStudentToClass(classId, username){                             \r\n                                                return fetch(`${LOCAL_URL}/main/class/${classId}/addUserToClass/`, {\r\n                                                    method: 'POST',\r\n                                                    headers: {\r\n                                                    \r\n                                                      'Content-Type': 'application/json',\r\n                                                    //   'Authorization': `Token ${token}` \r\n                                                         },\r\n                                                         body: JSON.stringify({'student' : username})  \r\n                                                            \r\n                                                    })\r\n                                                      .then( resp => resp.json())\r\n                                                   }\r\n\r\n                                                   static removeStudentFromClass(classId, username){ \r\n                                                    console.log(\"qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq\");                            \r\n                                                    return fetch(`${LOCAL_URL}/main/class/${classId}/removeUserFromClass/`, {\r\n                                                        method: 'POST',\r\n                                                        headers: {\r\n                                                        \r\n                                                          'Content-Type': 'application/json',\r\n                                                        //   'Authorization': `Token ${token}` \r\n                                                             },\r\n                                                             body: JSON.stringify({'student' : username})  \r\n                                                                \r\n                                                        })\r\n                                                          .then( resp => resp.json())\r\n                                                       }\r\n\r\n\r\n                                                       static updateUserDetails(token, firstName, lastName, aboutMe, hobbies, myGoal ){ \r\n                                                        return fetch(`${LOCAL_URL}/main/userProfile/1/UpdateUserDetails/`, {\r\n                                                           method: 'POST',\r\n                                                           headers: {\r\n                                                           \r\n                                                             'Content-Type': 'application/json',\r\n                                                             'Authorization': `Token ${token}` \r\n                                                                },\r\n                                                                body: JSON.stringify({'firstName' : firstName, 'lastName' : lastName,'aboutMe' : aboutMe,\r\n                                                                'hobbies' : hobbies,'myGoal' : myGoal,\r\n                                                            })  \r\n                                                                   \r\n                                                           })\r\n                                                             .then( resp => resp.json())\r\n                                                          }  \r\n                                                    //    static removeStudentFromClass(classId, username){                             \r\n                                                    //     return fetch(`${BASE}/main/class/${classId}/removeUserFromClass/`, {\r\n                                                    //         method: 'POST',\r\n                                                    //         headers: {\r\n                                                            \r\n                                                    //           'Content-Type': 'application/json',\r\n                                                    //         //   'Authorization': `Token ${token}` \r\n                                                    //              },\r\n                                                    //              body: JSON.stringify({'student' : username})  \r\n                                                                    \r\n                                                    //         })\r\n                                                    //           .then( resp => resp.json())\r\n                                                    //        }\r\n    }","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\components\\Navbar\\index.js",["145","146","147","148","149"],"import React, { useEffect, useState } from \"react\";\nimport { useCookies } from 'react-cookie';\n\nimport {\n  Nav,\n  NavLogo,\n  NavLink,\n  Bars,\n  NavMenu,\n  NavBtn,\n  NavBtnLink,\n} from \"./NavbarElements\";\n\n\nconst Navbar = () => {\n    \n    const[token, setToken, deleteToken] = useCookies(['mr-token']);\n\n\nconst logoutUser = () => {\n      console.log(\"inside logoutUser\");\n      console.log(token);\n      deleteToken(['mr-token']);\n      console.log(token);\n}\n  \n    return (\n        <>\n           <Nav>\n            <NavLogo to=\"/\">\n                Logo\n            </NavLogo>\n            <Bars />\n            <NavMenu>\n            <NavLink to=\"/AboutusScreen\" activeStyle>\n                    עלינו\n                </NavLink>\n            <NavLink to=\"/TeachersScreen\" activeStyle>\n                    הדרכה\n                </NavLink>\n            <NavLink to=\"/ProfileScreen\" activeStyle>\n                    פרופייל\n                </NavLink>\n            <NavLink to=\"/ProjectsScreen\" activeStyle>\n                    פרויקטים\n                </NavLink> \n                <NavLink to=\"/CoursesMainScreen\" activeStyle>\n                    למידה\n                </NavLink>\n                <NavLink to=\"/HomeScreen\" activeStyle>\n                    דף הבית\n                </NavLink>\n               \n\n                {token['mr-token'] && token['mr-token']!='undefined' ? (<NavBtn onClick={logoutUser} activeStyle>\n                    התנתק\n                </NavBtn> ) : <NavLink  to=\"/Signin\" activeStyle>\n                    התחבר\n                </NavLink>}\n\n                \n            </NavMenu> \n           </Nav> \n        </>\n    );\n};\nexport default Navbar;","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\components\\Popup.js",[],"C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\components\\Navbar\\NavbarElements.js",[],"C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\AboutusScreen.js",[],"C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\TeachersScreen.js",["150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165"],"import Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\nimport React, {useEffect, useState} from 'react';\r\nimport { useCookies } from 'react-cookie';\r\nimport { API } from '../api-service';\r\nimport '../index.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport Popup from '../components/Popup';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst TeachersScreen = () => {\r\n  const[token] = useCookies(['mr-token']);\r\n  const [user,setUser] = useState([]);\r\n  const [selectedClass, setSelectedClass] = useState();\r\n  const [studentInClass, setsStudentsInClass] = useState([]);\r\n  const [teachersInClass, setsTeachersInClass] = useState([]);\r\n  const [coordinatorsInClass, setsCoordinatorsInClass] = useState([]);\r\n  const [addStudentPopup, setAddStudentPopup] = useState(false);\r\n  const [removeStudentPopup, setRemoveStudentPopup] = useState(false);\r\n  const [userToSearch, setUserToSearch] = useState();\r\n  const [userToRemove, setUserToRemove] = useState([]);\r\n  const [userToAdd, setUserToAdd] = useState([]);\r\n  const [addedSuccesfullyMessage, setAddedSuccesfullyMessage] = useState('');\r\n  const search = window.location.search; // returns the URL query String\r\n  const params = new URLSearchParams(search); \r\n  const IdClassFromURL = params.get('class');\r\n\r\n  const options=[];\r\n  const defaultOption = '';\r\n  \r\n\r\n  useEffect(() =>{\r\n    if(!token['mr-token']) window.location.href = '/Signin';\r\n    console.log(\"idfromurl is: \", IdClassFromURL)\r\n    API.getUserDetails(token['mr-token'])\r\n      .then(resp => setUser(resp.results))  \r\n      .catch( error => console.log(error))\r\n   \r\n    sleep(1000).then(()=>{\r\n      console.log(\"type of user is: \", user)\r\n      if(user.userType == \"1\") window.location.href = '/Signin';\r\n      })\r\n    \r\n    }, [])\r\n\r\n    //try\r\n    useEffect(() =>{\r\n      addClasses();\r\n      }, [user])\r\n\r\n      function sleep(time){\r\n        return new Promise((resolve)=>setTimeout(resolve,time)\r\n      )\r\n  }\r\n\r\n    const getDataOfClass= (numOfClass) =>  { \r\n      console.log(\"2- class is: \", selectedClass)\r\n      API.getClassStudentsByID(numOfClass)\r\n      .then(resp => setsStudentsInClass(resp.results)) \r\n      .catch( error => console.log(error))\r\n      API.getClassTeacherssByID(numOfClass)\r\n      .then(resp => setsTeachersInClass(resp.results)) \r\n      .catch( error => console.log(error))\r\n      API.getClassCoordinatorsByID(numOfClass)\r\n      .then(resp => setsCoordinatorsInClass(resp.results)) \r\n      .catch( error => console.log(error))\r\n      }\r\n\r\n    function handleChange(event) {\r\n      console.log(\"event is: \",event);\r\n      \r\n      for (var i = 0; i < options.length; i++) {\r\n        if(options[i].value == event.value ){\r\n          console.log(options[i].key);\r\n          setSelectedClass(options[i].key);\r\n          console.log(\"class is: \", selectedClass)\r\n          getDataOfClass(options[i].key)\r\n          break;\r\n        }\r\n    } \r\n     \r\n     \r\n    }\r\n\r\n    function setGivenClass() {\r\n        console.log(\"im hereeeee\")\r\n        console.log( options.length)\r\n      for (var i = 0; i < options.length; i++) {\r\n         console.log(options[i].key, \" \",options[i].value )\r\n        if(options[i].key == IdClassFromURL ){\r\n          console.log(\"we are inide if \", options[i].key);\r\n          setSelectedClass(options[i].key);\r\n          console.log(\"class is: \", selectedClass)\r\n          getDataOfClass(options[i].key)\r\n          break;\r\n        }\r\n    }    \r\n    }\r\n\r\n\r\n    const viewProfile = (user) =>{\r\n      console.log(\"id must be 20: \", user.id)\r\n      window.location.href ='/UserProfile?id=' + user.id+ \"&idUser=\" + user.user+\"&idClass=\" + selectedClass; \r\n    }\r\n    const goToSignIn = (username) =>{\r\n      console.log(\"user to regiser: \",username)\r\n      window.location.href ='/UserRegistration?username=' + username+\"&idClass=\" + selectedClass; \r\n    }\r\n    const addUser = (username) =>{\r\n      //console.log(\"details\", username, \" \", selectedClass)\r\n      API.addStudentToClass(selectedClass, username);\r\n      // setUserToAdd('');\r\n      setAddedSuccesfullyMessage(\"התלמיד נוסף בהצלחה\");\r\n      getDataOfClass(selectedClass);\r\n      sleep(100).then(()=>{\r\n      API.getClassStudentsByID(selectedClass)\r\n        .then(resp => setsStudentsInClass(resp.results)) \r\n        .catch( error => console.log(error))\r\n      \r\n      console.log(\"studentInClass: \", studentInClass)\r\n      // setsStudentsInClass((studentInClass) => [...studentInClass, userToAdd])\r\n      setsStudentsInClass(() => [...studentInClass, userToAdd])\r\n      setUserToAdd('');\r\n      })\r\n    }\r\n    \r\n    const addStudent= () =>  {\r\n      setAddStudentPopup(true)\r\n      }\r\n\r\n    const candidateToRemove= (userToRemove) =>  {\r\n      console.log(\"candidate: \", userToRemove.username)\r\n      setUserToRemove(userToRemove)\r\n      setRemoveStudentPopup(true)\r\n      }\r\n\r\n      const removeStudent= (userToRemove) =>  {\r\n        console.log(\"user to remove: \",userToRemove, selectedClass)\r\n        API.removeStudentFromClass(selectedClass, userToRemove);\r\n        sleep(100).then(()=>{\r\n          API.getClassStudentsByID(selectedClass)\r\n            .then(resp => setsStudentsInClass(resp.results)) \r\n            .catch( error => console.log(error))  \r\n        setUserToRemove('')\r\n        setRemoveStudentPopup(false)\r\n        })\r\n        }\r\n\r\n      const searchUser= () =>  { \r\n        setUserToAdd('null');\r\n        console.log(\"user to add is: \", userToSearch)\r\n        API.getUserByUsername(userToSearch) \r\n        //  .then(resp => console.log(\"user: \",resp.results))  \r\n          .then(resp => setUserToAdd(resp.results))  \r\n          .catch( error => console.log(error))  \r\n        }\r\n        //uplaod the data of the class after return to this page from userProfile\r\n        const addClasses= () =>  { \r\n          if(IdClassFromURL==null){\r\n            console.log(\"IdClassFromURL is null\")\r\n            return \r\n          }\r\n          console.log(\"im in addClasses\")\r\n          user.teacherClasses && user.teacherClasses.map(teacherclass => { \r\n            console.log(\"inside map\")     \r\n            options.push({key:teacherclass.id,value:teacherclass.className})\r\n          })\r\n          setGivenClass();\r\n        }\r\n    return (   \r\n    \r\n    <div className=\"App\">\r\n       {console.log(\"in return type of user is: \", user.userType)}\r\n       { user.userType==\"1\"? window.location.href = '/Homepagescreen': \" \"}\r\n      {/* <FontAwesomeIcon icon={faTimesCircle} />   */}\r\n      <h1>הדרכה</h1>\r\n      {/* insert to options all the classes guided by this user.\r\n      insert the class id as a key and the class name as the value.\r\n      the value will be shown in the dropdown */}\r\n      {user.teacherClasses && user.teacherClasses.map(Teacherclass => {\r\n                  {options.push({key:Teacherclass.id,value:Teacherclass.className})}       \r\n          })}\r\n    \r\n    {/* the dropdown will hold the classes of the user and will display them by their names*/}\r\n    <Dropdown className='dropdown' options={options} value={defaultOption} label={defaultOption.key} onChange={handleChange}  placeholder=\"בחר כיתה\" />\r\n    <div className=\"profile\">\r\n      <div>\r\n      <h3>תלמידים:</h3>\r\n      {/*add the usernames of all the students of the selected class */}\r\n    {studentInClass.map(student => { \r\n      {console.log(\"inside map\")}\r\n                    return <p>\r\n                        {/* <FontAwesomeIcon className='username' icon={faTimesCircle} data-tip={\"הסר\"} onClick={() => removeStudent(student.username)}/> */}\r\n                        <FontAwesomeIcon className='username' icon={faTimesCircle} data-tip={\"הסר\"} onClick={() => candidateToRemove(student)}/>\r\n                         <ReactTooltip />\r\n                         &nbsp;\r\n                         {/* working example with tooltip */}\r\n                        {/* <span className='username' data-tip={student.firstName+ \" \"+ student.lastName}  onClick={() => viewProfile(student)} >\r\n                        {student.firstName+ \" \"+ student.lastName}\r\n                        </span> \r\n                      \r\n                         <ReactTooltip /> */}\r\n                         <span className='username'   onClick={() => viewProfile(student)} >\r\n                        {student.firstName+ \" \"+ student.lastName}\r\n                        </span> \r\n                      \r\n                         \r\n                         {/* <button onClick={() => removeStudent(student.username)}>הסר</button>  */}\r\n                         \r\n                         {/* <FontAwesomeIcon icon={faTimesCircle} data-tip={\"הסר\"} onClick={() => removeStudent(student.username)}/>\r\n                         <ReactTooltip /> */}\r\n                         <br/></p> \r\n                        {/* <p className='username' data-tip={student.username} data-for=\"registerTip\" onClick={() => viewProfile(student)} >\r\n                        {student.username}\r\n                         </p> <br/> */}\r\n      {/* <ReactTooltip id=\"registerTip\" place=\"top\" effect=\"solid\">\r\n        {student.username}\r\n        {/* {student.firstName+ \" \"+ student.lastName} */}\r\n      {/* </ReactTooltip> */} \r\n               \r\n                      \r\n              })}\r\n      {/* <ReactTooltip id=\"registerTip\" place=\"top\" effect=\"solid\">\r\n        {student.firstName+ \" \"+ student.lastName}\r\n      </ReactTooltip> */}\r\n               <Button style={{display : selectedClass  ? \"\": \"none\"}} onClick={addStudent}>הוסף תלמיד</Button> \r\n</div>\r\n<div>\r\n<h3>מטצים:</h3>\r\n    {teachersInClass.map(teacher => { \r\n                    return <p>\r\n                      \r\n                      <p className='username' onClick={() => viewProfile(teacher)}>\r\n                      {teacher.firstName+ \" \"+ teacher.lastName} </p> <br/>\r\n                     \r\n                </p>                  \r\n              })}\r\n             \r\n  </div>\r\n  <div>\r\n<h3>רכזים:</h3>\r\n    {coordinatorsInClass.map(coordinator => { \r\n                    return <p>\r\n                      \r\n                      <p className='username' onClick={() => viewProfile(coordinator)}> \r\n                      {coordinator.firstName+ \" \"+ coordinator.lastName} </p> <br/>\r\n                      {/* <ReactTooltip /> */}\r\n                </p>                  \r\n              })}\r\n              </div>\r\n    </div>\r\n    <Popup trigger={addStudentPopup} setTrigger={setAddStudentPopup}>\r\n     <h4>חפש שם משתמש של תלמיד</h4>\r\n     <input type = \"text\" onChange={e => setUserToSearch(e.target.value) + setAddedSuccesfullyMessage('')}></input>\r\n         \r\n     \r\n         <button onClick={searchUser}>חפש</button>\r\n         {console.log(\"users are: \",userToAdd.id)}\r\n         <h5>{userToAdd!=\"null\"?  userToAdd.username: \" לא נמצא שם משתמש\"}</h5>\r\n         {<button  style={{display : userToAdd!=\"null\"  ? \"none\": \"\"}} onClick={() => goToSignIn(userToSearch)}>רשום משתמש</button>}\r\n         <p>{userToAdd.id && userToAdd.firstName + \" \"+ userToAdd.lastName}</p>\r\n         {/* <p>{userToAdd && userToAdd.lastName}</p> */}\r\n         {<button  style={{display : userToAdd.id  ? \"\": \"none\"}} onClick={() => addUser(userToAdd.username)}>הוסף</button>}\r\n         <p>{addedSuccesfullyMessage}</p>    \r\n\r\n   </Popup> \r\n   <Popup trigger={removeStudentPopup} setTrigger={setRemoveStudentPopup}>\r\n   <h4> ?מהכיתה {userToRemove.username} האם אתה בטוח שברצונך להסיר את </h4> \r\n   \r\n        {/* <h4> ?{userToRemove[0].username} האם אתה בטוח שברצונך להסיר את </h4>  */}\r\n        {/* <button onClick={removeStudent(userToRemove)}>הסר</button> */}\r\n        {<button  style={{display : userToRemove.id  ? \"\": \"none\"}} onClick={() => removeStudent(userToRemove.username)}>הסר</button>}\r\n   </Popup>     \r\n   \r\n    </div>\r\n     \r\n   \r\n   \r\n   \r\n  );\r\n  \r\n};\r\n\r\nexport default TeachersScreen;","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\components\\UpdateUserDetails.js",["166","167","168","169","170","171","172","173","174","175","176"],"import React, {useEffect, useState} from 'react';\r\nimport { Container,Row,Col,Form ,Button} from 'react-bootstrap';\r\nimport { useCookies } from 'react-cookie';\r\nimport { API } from '../api-service';\r\nimport Signin from '../pages/Signin'; \r\nimport '../index.css';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Popup from './Popup';\r\n//import UpdateUserDetails from '../components/UpdateUserDetails'\r\nconst axios = require('axios');\r\n\r\n\r\nconst UpdateUserDetails = () => {\r\n  const history = useHistory();\r\n  const handleRoute = () =>{ \r\n      history.push(\"/ProfileScreen\");\r\n    }\r\n      \r\n    const [token, setToken, deleteToken] = useCookies(['mr-token']);\r\n    const [user,setUser] = useState([]);\r\n    const[popup, setPopup ] = useState();\r\n    const [UpdateUserfirstnamePopUp, setUpdateUserfirstnamePopUp ] = useState(false);\r\n    const [UpdateUserlastnamePopUp, setUpdateUserlastnamePopUp ] = useState(false);\r\n    const [UpdateUseremailPopUp, setUpdateUseremailPopUp ] = useState(false);\r\n    const [UpdateUseraboutmePopUp, setUpdateUseraboutmePopUp ] = useState(false);\r\n    const [UpdateUserhobbiesPopUp, setUpdateUserhobbiesPopUp ] = useState(false);\r\n    useEffect(()=>{\r\n        //var username = Signin.username\r\n        //console.log(\"username is:\",username)\r\n        API.getUserDetails(token['mr-token'])\r\n         //.then(resp => console.log(\"resp is:\", resp.results))\r\n         .then(resp => setUser(resp.results))  \r\n         .catch( error => console.log(error)) \r\n    }, [])\r\n    const openPopup = () =>{\r\n      //if(this.user === undefined) {return}\r\n      console.log('inside open Popup');\r\n      setPopup('');\r\n      console.log(\"user name \",user.firstName)\r\n      \r\n      setUpdateUserfirstnamePopUp(true);\r\n    } \r\n    const openlastnamePopup = () =>{\r\n      console.log('inside open last name Popup');\r\n      setPopup('');\r\n      console.log(\"user name \",user.firstName)\r\n      \r\n      setUpdateUserlastnamePopUp(true);\r\n    }\r\n    const openemailPopup = () =>{\r\n      console.log('inside open email Popup');\r\n      setPopup('');\r\n      console.log(\"user name \",user.firstName)\r\n      \r\n      setUpdateUseremailPopUp(true);\r\n    }\r\n    const openaboutmePopup = () =>{\r\n      console.log('inside open about me Popup');\r\n      setPopup('');\r\n      console.log(\"user name \",user.firstName)\r\n      \r\n      setUpdateUseraboutmePopUp(true);\r\n    }\r\n    const openhobbiesPopup = () =>{\r\n      console.log('inside open hobbies Popup');\r\n      setPopup('');\r\n      console.log(\"user name \",user.firstName)\r\n      \r\n      setUpdateUserhobbiesPopUp(true);\r\n    }\r\n    /*\r\n    const savechanges= () =>  { \r\n      if(currentLesson.id)\r\n        API.updateUserNotes(token['mr-token'], notes, currentLesson.id)\r\n      else\r\n        API.updateUserNotes(token['mr-token'], notes, params.get('firstLessonId'))\r\n       setNotePopup(false)\r\n      }\r\n      */\r\n    return(\r\n        <div className=\"App\">\r\n        <header className=\"Header\">דף שינוי פרטים</header>\r\n        <div className=\"updateProfile\">\r\n        <div>\r\n        <h4>שם משתמש:</h4>\r\n         <p>{user.username}</p>\r\n         <h4>שם פרטי: </h4><button onClick={openPopup}>עריכה</button>\r\n         <p>{user.firstName}</p>\r\n          <h4>שם משפחה:</h4><button onClick={openlastnamePopup}>עריכה</button>\r\n          <p>{user.lastName}</p>\r\n       </div>\r\n        <div>\r\n        <h4>דואר אלקטרוני:</h4><button onClick={openemailPopup}>עריכה</button>\r\n       <p>{user.email}</p>\r\n       <h4>קצת עליי..</h4><button onClick={openaboutmePopup}>עריכה</button>\r\n       <p>{user.aboutMe}</p>\r\n       </div>\r\n       <div>\r\n       <h4>תחביבים:</h4><button onClick={openhobbiesPopup}>עריכה</button>\r\n       <p>{user.hobbies}</p>\r\n       </div>\r\n       </div>\r\n        <button onClick={handleRoute}>חזרה</button>\r\n        <Popup trigger={UpdateUserfirstnamePopUp} setTrigger={setUpdateUserfirstnamePopUp}>\r\n          <h3>שם פרטי:</h3>\r\n          {console.log(\"first name popup message test\")}\r\n          <textarea>{user.firstName}</textarea>\r\n        <br/>\r\n        <button >שמור</button>\r\n        </Popup>\r\n        <Popup trigger={UpdateUserlastnamePopUp} setTrigger={setUpdateUserlastnamePopUp}>\r\n          <h3>שם משפחה:</h3>\r\n          {console.log(\"last name popup message test\")}\r\n          <textarea>{user.lastName}</textarea>\r\n        <br/>\r\n        <button >שמור</button>\r\n        </Popup>\r\n        <Popup trigger={UpdateUseremailPopUp} setTrigger={setUpdateUseremailPopUp}>\r\n          <h3>דואר אלקטרוני:</h3>\r\n          {console.log(\"mail popup message test\")}\r\n          <textarea>{user.email}</textarea>\r\n        <br/>\r\n        <button >שמור</button>\r\n        </Popup>\r\n        <Popup trigger={UpdateUseraboutmePopUp} setTrigger={setUpdateUseraboutmePopUp}>\r\n          <h3>קצת עליי..:</h3>\r\n          {console.log(\"about me popup message test\")}\r\n          <textarea>{user.aboutMe}</textarea>\r\n        <br/>\r\n        <button >שמור</button>\r\n        </Popup>\r\n        <Popup trigger={UpdateUserhobbiesPopUp} setTrigger={setUpdateUserhobbiesPopUp}>\r\n          <h3>תחביבים:</h3>\r\n          {console.log(\"hobbies popup message test\")}\r\n          <textarea>{user.hobbies}</textarea>\r\n        <br/>\r\n        <button >שמור</button>\r\n        </Popup>\r\n        </div>\r\n    )\r\n};\r\n\r\n           \r\nexport default UpdateUserDetails;","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\UserProfile.js",["177","178","179","180","181","182","183","184","185","186","187","188"],"import React, {useEffect, useState} from 'react';\r\nimport { Container,Row,Col,Form ,Button} from 'react-bootstrap';\r\nimport { useCookies } from 'react-cookie';\r\nimport { API } from '../api-service';\r\nimport Signin from './Signin'; \r\nimport { useHistory } from \"react-router-dom\";\r\nimport Popup from '../components/Popup';\r\nimport '../index.css';\r\nimport UpdateUserDetails from '../components/UpdateUserDetails'\r\nconst axios = require('axios');\r\n\r\n\r\nconst UserProfile = () => {\r\n    console.log(\"hiiiiiiiiii\");\r\n    // const history = useHistory();\r\n    // const handleRoute = () =>{ \r\n    //     history.push(\"/UpdateUserDetails\");\r\n    //   }\r\n    const [token] = useCookies(['mr-token']);\r\n    const search = window.location.search; // returns the URL query String\r\n    const params = new URLSearchParams(search); \r\n    const IdFromURL = params.get('id');\r\n    const IdUserFromURL = params.get('idUser');\r\n    const IdClassFromURL = params.get('idClass');\r\n    const [user,setUser] = useState([]);\r\n   // const [courses,setCourses] = useState([]);\r\n    const [userCourses, setUserCourses] = useState([]);\r\n    const [actionsPopup, setActionsPopup] = useState(false);\r\n    //   test\r\n    //const [studentsInClass, setsStudentsInClass] = useState([]);\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        console.log(\"id from url is: \", IdFromURL)\r\n        API.getUserProfileById(IdFromURL)\r\n         .then(resp => setUser(resp))  \r\n         .catch( error => console.log(error)) \r\n      //  if(!token['mr-token']) window.location.href = '/Signin';\r\n \r\n        // API.getUserDetails(token['mr-token'])\r\n\r\n        //  .then(resp => setUser(resp.results))  \r\n        //  .catch( error => console.log(error)) \r\n        // API.getAllUserCourses(token['mr-token'])\r\n        //     .then(resp => getCourseName(resp.results)) \r\n\r\n        //     .catch( error => console.log(error))\r\n\r\n\r\n            /////todo - add int value\r\n          // API.getClassStudentsByID(2)\r\n          //   .then(resp => setsStudentsInClass(resp.results)) \r\n          //   .catch( error => console.log(error))\r\n\r\n          //get all the courses of the selected user  \r\n          API.getAllCoursesByUserId(IdUserFromURL)\r\n            //.then(resp => console.log(\"resppppppppppppppp\", resp)) \r\n            .then(resp => getCourseName(resp.results)) \r\n            .catch( error => console.log(error))\r\n    }, [])\r\n\r\n    const getCourseName = (courses) =>{\r\n      console.log(\"in fun\",courses)\r\n      courses.map(course => { \r\n          API.getCourses(course.course) \r\n               .then(resp => setUserCourses((userCourses) => [...userCourses, resp]))\r\n   })     \r\n  }\r\n    // const getCourseName = (courses) =>{\r\n    //     console.log(\"in fun\",courses)\r\n    //     courses.map(course => { \r\n\r\n    //         API.getCourses(course.course) \r\n\r\n    //              .then(resp => setUserCourses((userCourses) => [...userCourses, resp]))\r\n\r\n    //  }) \r\n    \r\n    // }\r\n    \r\n    const backToClass= () =>  {\r\n      window.location.href ='/TeachersScreen?class=' + IdClassFromURL;\r\n      }\r\n      const actions= () =>  {\r\n        setActionsPopup(true)\r\n        }\r\n        const checkAssignments= () =>  {\r\n          window.location.href ='/CheckUserAssignments?id=' + IdUserFromURL;\r\n          }\r\n\r\n\r\n    return(\r\n        <div className=\"App\">\r\n        <header className=\"Header\"> הדף של {user.firstName}  {user.lastName}</header>\r\n        <div className=\"profile\">\r\n            <div>\r\n        <h4>שם משתמש:</h4>\r\n         <p>{user.username}</p>\r\n         {console.log(\"user data: \",user)}\r\n\r\n         {/* test */}\r\n         {/* {console.log(\"user class is: \",user.studentClasses && user.studentClasses[0].className)}\r\n         {console.log(\"the students in class number 2 are: \",studentsInClass)} */}\r\n        \r\n         <br/>\r\n\r\n         <h4>שם פרטי: </h4>\r\n         <p>{user.firstName}</p>\r\n         <br/>\r\n\r\n       <h4>שם משפחה:</h4>\r\n       <p>{user.lastName}</p>\r\n       </div>\r\n        <div>\r\n        {/* <h4>דואר אלקטרוני:</h4>\r\n       <p>{user.email}</p> */}\r\n         \r\n       <h4>קצת עליי..</h4>\r\n       <p>{user.aboutMe}</p>\r\n\r\n       <h4>הקורסים שלי:</h4>\r\n        { userCourses.map(course => { \r\n                return <p>                \r\n                  <p>\r\n                  {course.name} </p>                           \r\n            </p>                \r\n          })}\r\n      \r\n      <h4>הכיתות שלי:</h4>\r\n      { user.studentClasses && user.studentClasses.map(userClass => { \r\n                return <p>              \r\n                  <p>\r\n                  {userClass.className} </p>                             \r\n             </p>                \r\n          })} \r\n\r\n\r\n      \r\n       </div>\r\n       <div>\r\n       <h4>תחביבים:</h4>\r\n       <p>{user.hobbies}</p>\r\n       <br/>\r\n       <h4>הבאדג'ים שלך:</h4>\r\n         <p>{user.badges}</p>\r\n        \r\n         <br/>\r\n         <h4>המטרה שלי:</h4>\r\n         <p>{user.myGoal}</p>\r\n       </div>\r\n       </div>\r\n       <button onClick={actions}>פעולות</button><br/>\r\n        <button onClick={backToClass}>חזרה לכיתה</button>\r\n        <Popup trigger={actionsPopup} setTrigger={setActionsPopup}>\r\n  {<button onClick={() => checkAssignments()}>בדוק מטלות</button>}<br/>\r\n  {<button onClick={() => backToClass()}>הוסף לתת קבוצה</button>}<br/>\r\n  {<button onClick={() => backToClass()}>הענק תג</button>}\r\n</Popup>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default UserProfile;","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\UserRegistration.js",["189","190","191","192","193","194"],"import React, {useEffect, useState} from 'react';\r\nimport { API } from '../api-service';\r\nimport { useCookies } from 'react-cookie';\r\nimport validator from 'validator'\r\n\r\nfunction UserRegistration(){\r\n    \r\n    const[username, setUsername ] = useState('');\r\n    const[password, setPassword ] = useState('');\r\n    const[firstName, setFirstName ] = useState('');\r\n    const[lastName, setLastaName ] = useState('');\r\n    const[errorMessage, setErrorMessage ] = useState('');\r\n    const[token, setToken] = useCookies(['mr-token']);\r\n    const search = window.location.search; // returns the URL query String\r\n    const params = new URLSearchParams(search); \r\n    const IdFromURL = params.get('username');\r\n    const IdClassFromURL = params.get('idClass');\r\n    const [checked, setChecked] = React.useState(false);\r\n\r\n    const handleChange = () => {\r\n      setChecked(!checked);\r\n    };\r\n   \r\n    useEffect( () =>{\r\n        setUsername(IdFromURL);\r\n      }, [])\r\n\r\n      function sleep(time){\r\n        return new Promise((resolve)=>setTimeout(resolve,time)\r\n      )\r\n  }\r\n\r\n      const backToClass= () =>  {\r\n        window.location.href ='/TeachersScreen?class=' + IdClassFromURL;\r\n        }\r\n\r\n    const registerClicked = () =>  {\r\n         // checke if all the values correct\r\n        if (!validator.isEmail(username))\r\n            setErrorMessage('שם משתמש לא חוקי');\r\n        else if (password==\"\")   \r\n            setErrorMessage('הכנס סיסמא');\r\n        else if (firstName==\"\")   \r\n            setErrorMessage('הכנס שם פרטי');\r\n        else if (lastName==\"\")  \r\n            setErrorMessage('הכנס שם משפחה');\r\n        else{\r\n            setErrorMessage('');\r\n            API.registerUser({username, password})\r\n                .then( resp => console.log(resp))\r\n                .then(createUserProfile)\r\n                .then(setUsername(''))\r\n                .then(setPassword(''))\r\n                .then(setErrorMessage(` ${firstName} נרשם בהצלחה `))\r\n                .then(setFirstName(''))\r\n                .then(setLastaName(''))               \r\n                .catch( error => console.log(error)) \r\n            if (checked)\r\n            {\r\n                sleep(1000).then(()=>{\r\n                console.log(\"checked!\",IdClassFromURL+ \" \"+ username )\r\n                API.addStudentToClass(IdClassFromURL, username);\r\n                })\r\n            }\r\n        }    \r\n    }\r\n    const createUserProfile =  () => {       \r\n        sleep(100).then(()=>{\r\n        API.registerUserProfile(username, firstName, lastName)\r\n            .then( resp => console.log(resp))                \r\n            .catch( error => console.log(error)) \r\n        })\r\n    }\r\n\r\n    return (\r\n          <div className=\"App\">\r\n           <h1>הרשמת משתמשים</h1>\r\n             <p style={{color : errorMessage.includes(\"נרשם בהצלחה\") ? \"green\" : \"red\"}}>{errorMessage}</p>\r\n             <label htmlFor=\"username\">Username</label><br/>\r\n             <input id=\"username\" type=\"text\" placeholder=\"username\" value={username}\r\n                     onChange={ evt=> setUsername(evt.target.value)}   \r\n              /><br/>\r\n             <label htmlFor=\"password\">Password</label><br/>\r\n              <input id=\"password\" type=\"password\" placeholder=\"password\" value={password}\r\n                     onChange={ evt=> setPassword(evt.target.value)}/><br/>\r\n             <label htmlFor=\"firstName\">שם פרטי</label><br/>\r\n             <input id=\"firstName\" type=\"text\" placeholder=\" \" value={firstName}\r\n                     onChange={ evt=> setFirstName(evt.target.value)}   \r\n              /><br/>\r\n             <label htmlFor=\"lastName\">שם משפחה</label><br/>\r\n              <input id=\"lastName\" type=\"text\" placeholder=\" \" value={lastName}\r\n                     onChange={ evt=> setLastaName(evt.target.value)}/><br/>\r\n              <br/>\r\n              <label>\r\n              <input type=\"checkbox\"  checked={checked}\r\n               onChange={handleChange}/>\r\n               שייך לכיתה\r\n              </label><br/>\r\n                <button onClick={registerClicked}>רשום משתמש</button><br/><br/>\r\n                <button onClick={backToClass}>חזרה לכיתה</button>\r\n\r\n            </div>\r\n    \r\n      )\r\n\r\n}\r\nexport default UserRegistration;\r\n\r\n","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\CheckUserAssignments.js",["195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222"],{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","severity":1,"message":"228","line":2,"column":16,"nodeType":"229","messageId":"230","endLine":2,"endColumn":25},{"ruleId":"227","severity":1,"message":"231","line":22,"column":10,"nodeType":"229","messageId":"230","endLine":22,"endColumn":15},{"ruleId":"227","severity":1,"message":"232","line":22,"column":17,"nodeType":"229","messageId":"230","endLine":22,"endColumn":25},{"ruleId":"227","severity":1,"message":"233","line":22,"column":27,"nodeType":"229","messageId":"230","endLine":22,"endColumn":38},{"ruleId":"227","severity":1,"message":"234","line":15,"column":11,"nodeType":"229","messageId":"230","endLine":15,"endColumn":25},{"ruleId":"235","severity":1,"message":"236","line":50,"column":26,"nodeType":"237","messageId":"238","endLine":50,"endColumn":28},{"ruleId":"235","severity":1,"message":"236","line":52,"column":27,"nodeType":"237","messageId":"238","endLine":52,"endColumn":29},{"ruleId":"235","severity":1,"message":"236","line":54,"column":26,"nodeType":"237","messageId":"238","endLine":54,"endColumn":28},{"ruleId":"227","severity":1,"message":"239","line":2,"column":10,"nodeType":"229","messageId":"230","endLine":2,"endColumn":19},{"ruleId":"227","severity":1,"message":"240","line":2,"column":20,"nodeType":"229","messageId":"230","endLine":2,"endColumn":23},{"ruleId":"227","severity":1,"message":"241","line":2,"column":24,"nodeType":"229","messageId":"230","endLine":2,"endColumn":27},{"ruleId":"227","severity":1,"message":"242","line":2,"column":28,"nodeType":"229","messageId":"230","endLine":2,"endColumn":32},{"ruleId":"227","severity":1,"message":"243","line":2,"column":34,"nodeType":"229","messageId":"230","endLine":2,"endColumn":40},{"ruleId":"227","severity":1,"message":"244","line":5,"column":8,"nodeType":"229","messageId":"230","endLine":5,"endColumn":14},{"ruleId":"227","severity":1,"message":"245","line":9,"column":8,"nodeType":"229","messageId":"230","endLine":9,"endColumn":25},{"ruleId":"227","severity":1,"message":"246","line":10,"column":7,"nodeType":"229","messageId":"230","endLine":10,"endColumn":12},{"ruleId":"227","severity":1,"message":"247","line":21,"column":12,"nodeType":"229","messageId":"230","endLine":21,"endColumn":19},{"ruleId":"227","severity":1,"message":"248","line":21,"column":20,"nodeType":"229","messageId":"230","endLine":21,"endColumn":30},{"ruleId":"227","severity":1,"message":"249","line":31,"column":12,"nodeType":"229","messageId":"230","endLine":31,"endColumn":27},{"ruleId":"227","severity":1,"message":"250","line":31,"column":29,"nodeType":"229","messageId":"230","endLine":31,"endColumn":48},{"ruleId":"251","severity":1,"message":"252","line":57,"column":8,"nodeType":"253","endLine":57,"endColumn":10,"suggestions":"254"},{"ruleId":"255","severity":1,"message":"256","line":61,"column":28,"nodeType":"257","messageId":"258","endLine":61,"endColumn":30},{"ruleId":"227","severity":1,"message":"259","line":40,"column":8,"nodeType":"229","messageId":"230","endLine":40,"endColumn":15},{"ruleId":"251","severity":1,"message":"260","line":79,"column":4,"nodeType":"253","endLine":79,"endColumn":6,"suggestions":"261"},{"ruleId":"262","severity":1,"message":"263","line":158,"column":2,"nodeType":"264","messageId":"265","endLine":158,"endColumn":118},{"ruleId":"235","severity":1,"message":"266","line":166,"column":50,"nodeType":"237","messageId":"238","endLine":166,"endColumn":52},{"ruleId":"235","severity":1,"message":"236","line":197,"column":22,"nodeType":"237","messageId":"238","endLine":197,"endColumn":24},{"ruleId":"262","severity":1,"message":"263","line":201,"column":5,"nodeType":"264","messageId":"265","endLine":207,"endColumn":8},{"ruleId":"262","severity":1,"message":"263","line":202,"column":7,"nodeType":"264","messageId":"265","endLine":202,"endColumn":42},{"ruleId":"262","severity":1,"message":"263","line":203,"column":7,"nodeType":"264","messageId":"265","endLine":203,"endColumn":42},{"ruleId":"267","severity":1,"message":"268","line":204,"column":47,"nodeType":"269","messageId":"270","endLine":204,"endColumn":48},{"ruleId":"227","severity":1,"message":"271","line":216,"column":10,"nodeType":"229","messageId":"230","endLine":216,"endColumn":15},{"ruleId":"262","severity":1,"message":"263","line":236,"column":3,"nodeType":"264","messageId":"265","endLine":239,"endColumn":6},{"ruleId":"267","severity":1,"message":"268","line":237,"column":47,"nodeType":"269","messageId":"270","endLine":237,"endColumn":48},{"ruleId":"235","severity":1,"message":"236","line":252,"column":20,"nodeType":"237","messageId":"238","endLine":252,"endColumn":22},{"ruleId":"262","severity":1,"message":"263","line":270,"column":3,"nodeType":"264","messageId":"265","endLine":272,"endColumn":6},{"ruleId":"267","severity":1,"message":"268","line":271,"column":45,"nodeType":"269","messageId":"270","endLine":271,"endColumn":46},{"ruleId":"255","severity":1,"message":"272","line":330,"column":39,"nodeType":"257","messageId":"273","endLine":330,"endColumn":41},{"ruleId":"235","severity":1,"message":"236","line":331,"column":32,"nodeType":"237","messageId":"238","endLine":331,"endColumn":34},{"ruleId":"255","severity":1,"message":"272","line":367,"column":32,"nodeType":"257","messageId":"273","endLine":367,"endColumn":34},{"ruleId":"235","severity":1,"message":"236","line":368,"column":27,"nodeType":"237","messageId":"238","endLine":368,"endColumn":29},{"ruleId":"262","severity":1,"message":"263","line":370,"column":17,"nodeType":"264","messageId":"265","endLine":370,"endColumn":66},{"ruleId":"262","severity":1,"message":"263","line":371,"column":17,"nodeType":"264","messageId":"265","endLine":371,"endColumn":51},{"ruleId":"235","severity":1,"message":"236","line":374,"column":102,"nodeType":"237","messageId":"238","endLine":374,"endColumn":104},{"ruleId":"274","severity":1,"message":"275","line":478,"column":51,"nodeType":"276","endLine":479,"endColumn":15},{"ruleId":"277","severity":1,"message":"278","line":55,"column":1,"nodeType":"279","messageId":"238","endLine":68,"endColumn":2},{"ruleId":"277","severity":1,"message":"278","line":69,"column":1,"nodeType":"279","messageId":"238","endLine":82,"endColumn":2},{"ruleId":"277","severity":1,"message":"280","line":209,"column":21,"nodeType":"279","messageId":"238","endLine":217,"endColumn":26},{"ruleId":"277","severity":1,"message":"281","line":220,"column":25,"nodeType":"279","messageId":"238","endLine":229,"endColumn":30},{"ruleId":"277","severity":1,"message":"282","line":230,"column":25,"nodeType":"279","messageId":"238","endLine":240,"endColumn":34},{"ruleId":"277","severity":1,"message":"283","line":250,"column":37,"nodeType":"279","messageId":"238","endLine":257,"endColumn":42},{"ruleId":"277","severity":1,"message":"284","line":259,"column":25,"nodeType":"279","messageId":"238","endLine":273,"endColumn":34},{"ruleId":"277","severity":1,"message":"285","line":274,"column":33,"nodeType":"279","messageId":"238","endLine":285,"endColumn":34},{"ruleId":"277","severity":1,"message":"286","line":286,"column":33,"nodeType":"279","messageId":"238","endLine":296,"endColumn":34},{"ruleId":"277","severity":1,"message":"287","line":298,"column":33,"nodeType":"279","messageId":"238","endLine":308,"endColumn":38},{"ruleId":"227","severity":1,"message":"228","line":1,"column":17,"nodeType":"229","messageId":"230","endLine":1,"endColumn":26},{"ruleId":"227","severity":1,"message":"288","line":1,"column":28,"nodeType":"229","messageId":"230","endLine":1,"endColumn":36},{"ruleId":"227","severity":1,"message":"289","line":11,"column":3,"nodeType":"229","messageId":"230","endLine":11,"endColumn":13},{"ruleId":"227","severity":1,"message":"232","line":17,"column":18,"nodeType":"229","messageId":"230","endLine":17,"endColumn":26},{"ruleId":"235","severity":1,"message":"266","line":55,"column":56,"nodeType":"237","messageId":"238","endLine":55,"endColumn":58},{"ruleId":"235","severity":1,"message":"236","line":43,"column":24,"nodeType":"237","messageId":"238","endLine":43,"endColumn":26},{"ruleId":"251","severity":1,"message":"290","line":46,"column":8,"nodeType":"253","endLine":46,"endColumn":10,"suggestions":"291"},{"ruleId":"251","severity":1,"message":"292","line":51,"column":10,"nodeType":"253","endLine":51,"endColumn":16,"suggestions":"293"},{"ruleId":"235","severity":1,"message":"236","line":75,"column":29,"nodeType":"237","messageId":"238","endLine":75,"endColumn":31},{"ruleId":"235","severity":1,"message":"236","line":92,"column":27,"nodeType":"237","messageId":"238","endLine":92,"endColumn":29},{"ruleId":"255","severity":1,"message":"256","line":166,"column":71,"nodeType":"257","messageId":"258","endLine":166,"endColumn":73},{"ruleId":"235","severity":1,"message":"236","line":176,"column":23,"nodeType":"237","messageId":"238","endLine":176,"endColumn":25},{"ruleId":"255","severity":1,"message":"256","line":182,"column":68,"nodeType":"257","messageId":"258","endLine":182,"endColumn":70},{"ruleId":"262","severity":1,"message":"263","line":183,"column":19,"nodeType":"264","messageId":"265","endLine":183,"endColumn":85},{"ruleId":"262","severity":1,"message":"263","line":193,"column":7,"nodeType":"264","messageId":"265","endLine":193,"endColumn":34},{"ruleId":"262","severity":1,"message":"263","line":215,"column":25,"nodeType":"264","messageId":"265","endLine":217,"endColumn":40},{"ruleId":"294","severity":1,"message":"295","line":215,"column":25,"nodeType":"264","messageId":"296","endLine":221,"endColumn":30},{"ruleId":"262","severity":1,"message":"263","line":218,"column":7,"nodeType":"264","messageId":"265","endLine":220,"endColumn":59},{"ruleId":"262","severity":1,"message":"263","line":221,"column":7,"nodeType":"264","messageId":"265","endLine":221,"endColumn":30},{"ruleId":"235","severity":1,"message":"266","line":261,"column":24,"nodeType":"237","messageId":"238","endLine":261,"endColumn":26},{"ruleId":"235","severity":1,"message":"266","line":262,"column":47,"nodeType":"237","messageId":"238","endLine":262,"endColumn":49},{"ruleId":"227","severity":1,"message":"239","line":2,"column":10,"nodeType":"229","messageId":"230","endLine":2,"endColumn":19},{"ruleId":"227","severity":1,"message":"240","line":2,"column":20,"nodeType":"229","messageId":"230","endLine":2,"endColumn":23},{"ruleId":"227","severity":1,"message":"241","line":2,"column":24,"nodeType":"229","messageId":"230","endLine":2,"endColumn":27},{"ruleId":"227","severity":1,"message":"242","line":2,"column":28,"nodeType":"229","messageId":"230","endLine":2,"endColumn":32},{"ruleId":"227","severity":1,"message":"243","line":2,"column":34,"nodeType":"229","messageId":"230","endLine":2,"endColumn":40},{"ruleId":"227","severity":1,"message":"244","line":5,"column":8,"nodeType":"229","messageId":"230","endLine":5,"endColumn":14},{"ruleId":"227","severity":1,"message":"246","line":10,"column":7,"nodeType":"229","messageId":"230","endLine":10,"endColumn":12},{"ruleId":"227","severity":1,"message":"232","line":19,"column":19,"nodeType":"229","messageId":"230","endLine":19,"endColumn":27},{"ruleId":"227","severity":1,"message":"233","line":19,"column":29,"nodeType":"229","messageId":"230","endLine":19,"endColumn":40},{"ruleId":"227","severity":1,"message":"297","line":21,"column":11,"nodeType":"229","messageId":"230","endLine":21,"endColumn":16},{"ruleId":"251","severity":1,"message":"252","line":34,"column":8,"nodeType":"253","endLine":34,"endColumn":10,"suggestions":"298"},{"ruleId":"227","severity":1,"message":"239","line":2,"column":10,"nodeType":"229","messageId":"230","endLine":2,"endColumn":19},{"ruleId":"227","severity":1,"message":"240","line":2,"column":20,"nodeType":"229","messageId":"230","endLine":2,"endColumn":23},{"ruleId":"227","severity":1,"message":"241","line":2,"column":24,"nodeType":"229","messageId":"230","endLine":2,"endColumn":27},{"ruleId":"227","severity":1,"message":"242","line":2,"column":28,"nodeType":"229","messageId":"230","endLine":2,"endColumn":32},{"ruleId":"227","severity":1,"message":"243","line":2,"column":34,"nodeType":"229","messageId":"230","endLine":2,"endColumn":40},{"ruleId":"227","severity":1,"message":"244","line":5,"column":8,"nodeType":"229","messageId":"230","endLine":5,"endColumn":14},{"ruleId":"227","severity":1,"message":"299","line":6,"column":10,"nodeType":"229","messageId":"230","endLine":6,"endColumn":20},{"ruleId":"227","severity":1,"message":"245","line":9,"column":8,"nodeType":"229","messageId":"230","endLine":9,"endColumn":25},{"ruleId":"227","severity":1,"message":"246","line":10,"column":7,"nodeType":"229","messageId":"230","endLine":10,"endColumn":12},{"ruleId":"227","severity":1,"message":"231","line":19,"column":12,"nodeType":"229","messageId":"230","endLine":19,"endColumn":17},{"ruleId":"251","severity":1,"message":"300","line":61,"column":8,"nodeType":"253","endLine":61,"endColumn":10,"suggestions":"301"},{"ruleId":"255","severity":1,"message":"256","line":65,"column":26,"nodeType":"257","messageId":"258","endLine":65,"endColumn":28},{"ruleId":"227","severity":1,"message":"231","line":13,"column":11,"nodeType":"229","messageId":"230","endLine":13,"endColumn":16},{"ruleId":"227","severity":1,"message":"232","line":13,"column":18,"nodeType":"229","messageId":"230","endLine":13,"endColumn":26},{"ruleId":"251","severity":1,"message":"302","line":26,"column":10,"nodeType":"253","endLine":26,"endColumn":12,"suggestions":"303"},{"ruleId":"235","severity":1,"message":"236","line":41,"column":26,"nodeType":"237","messageId":"238","endLine":41,"endColumn":28},{"ruleId":"235","severity":1,"message":"236","line":43,"column":27,"nodeType":"237","messageId":"238","endLine":43,"endColumn":29},{"ruleId":"235","severity":1,"message":"236","line":45,"column":26,"nodeType":"237","messageId":"238","endLine":45,"endColumn":28},{"ruleId":"227","severity":1,"message":"243","line":7,"column":10,"nodeType":"229","messageId":"230","endLine":7,"endColumn":16},{"ruleId":"227","severity":1,"message":"304","line":9,"column":8,"nodeType":"229","messageId":"230","endLine":9,"endColumn":20},{"ruleId":"227","severity":1,"message":"305","line":10,"column":10,"nodeType":"229","messageId":"230","endLine":10,"endColumn":25},{"ruleId":"227","severity":1,"message":"306","line":11,"column":10,"nodeType":"229","messageId":"230","endLine":11,"endColumn":23},{"ruleId":"227","severity":1,"message":"307","line":12,"column":8,"nodeType":"229","messageId":"230","endLine":12,"endColumn":22},{"ruleId":"227","severity":1,"message":"308","line":16,"column":11,"nodeType":"229","messageId":"230","endLine":16,"endColumn":15},{"ruleId":"227","severity":1,"message":"309","line":20,"column":11,"nodeType":"229","messageId":"230","endLine":20,"endColumn":25},{"ruleId":"227","severity":1,"message":"250","line":20,"column":27,"nodeType":"229","messageId":"230","endLine":20,"endColumn":46},{"ruleId":"227","severity":1,"message":"310","line":21,"column":11,"nodeType":"229","messageId":"230","endLine":21,"endColumn":26},{"ruleId":"227","severity":1,"message":"311","line":21,"column":28,"nodeType":"229","messageId":"230","endLine":21,"endColumn":47},{"ruleId":"227","severity":1,"message":"312","line":22,"column":11,"nodeType":"229","messageId":"230","endLine":22,"endColumn":30},{"ruleId":"227","severity":1,"message":"313","line":22,"column":32,"nodeType":"229","messageId":"230","endLine":22,"endColumn":55},{"ruleId":"251","severity":1,"message":"314","line":47,"column":8,"nodeType":"253","endLine":47,"endColumn":10,"suggestions":"315"},{"ruleId":"255","severity":1,"message":"256","line":50,"column":28,"nodeType":"257","messageId":"258","endLine":50,"endColumn":30},{"ruleId":"235","severity":1,"message":"236","line":76,"column":29,"nodeType":"237","messageId":"238","endLine":76,"endColumn":31},{"ruleId":"255","severity":1,"message":"256","line":104,"column":32,"nodeType":"257","messageId":"258","endLine":104,"endColumn":34},{"ruleId":"262","severity":1,"message":"263","line":106,"column":11,"nodeType":"264","messageId":"265","endLine":106,"endColumn":46},{"ruleId":"262","severity":1,"message":"263","line":107,"column":19,"nodeType":"264","messageId":"265","endLine":107,"endColumn":68},{"ruleId":"255","severity":1,"message":"272","line":118,"column":32,"nodeType":"257","messageId":"273","endLine":118,"endColumn":34},{"ruleId":"262","severity":1,"message":"263","line":121,"column":17,"nodeType":"264","messageId":"265","endLine":121,"endColumn":51},{"ruleId":"255","severity":1,"message":"272","line":176,"column":32,"nodeType":"257","messageId":"273","endLine":176,"endColumn":34},{"ruleId":"262","severity":1,"message":"263","line":178,"column":17,"nodeType":"264","messageId":"265","endLine":178,"endColumn":51},{"ruleId":"255","severity":1,"message":"272","line":179,"column":56,"nodeType":"257","messageId":"273","endLine":179,"endColumn":58},{"ruleId":"262","severity":1,"message":"263","line":182,"column":19,"nodeType":"264","messageId":"265","endLine":182,"endColumn":51},{"ruleId":"262","severity":1,"message":"263","line":183,"column":19,"nodeType":"264","messageId":"265","endLine":183,"endColumn":43},{"ruleId":"262","severity":1,"message":"263","line":184,"column":19,"nodeType":"264","messageId":"265","endLine":184,"endColumn":51},{"ruleId":"235","severity":1,"message":"236","line":188,"column":52,"nodeType":"237","messageId":"238","endLine":188,"endColumn":54},{"ruleId":"274","severity":1,"message":"275","line":204,"column":16,"nodeType":"276","endLine":205,"endColumn":30},"no-native-reassign",["316"],"no-negated-in-lhs",["317"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","'setToken' is assigned a value but never used.","'deleteToken' is assigned a value but never used.","'userRegistered' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'Signin' is defined but never used.","'UpdateUserDetails' is defined but never used.","'axios' is assigned a value but never used.","'courses' is assigned a value but never used.","'setCourses' is assigned a value but never used.","'studentsInClass' is assigned a value but never used.","'setsStudentsInClass' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["318"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'lessons' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'IdFromURL' and 'token'. Either include them or remove the dependency array.",["319"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","Expected '!==' and instead saw '!='.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'sleep' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-dupe-class-members","Duplicate name 'getUserDetails'.","MethodDefinition","Duplicate name 'loginUser'.","Duplicate name 'registerUser'.","Duplicate name 'displayCourses'.","Duplicate name 'getCourses'.","Duplicate name 'getLessons'.","Duplicate name 'getNextLesson'.","Duplicate name 'getPreviousLesson'.","Duplicate name 'getCurrentCourse'.","'useState' is defined but never used.","'NavBtnLink' is defined but never used.","React Hook useEffect has missing dependencies: 'IdClassFromURL', 'token', and 'user'. Either include them or remove the dependency array.",["320"],"React Hook useEffect has a missing dependency: 'addClasses'. Either include it or remove the dependency array.",["321"],"no-unreachable","Unreachable code.","unreachableCode","'popup' is assigned a value but never used.",["322"],"'useHistory' is defined but never used.","React Hook useEffect has missing dependencies: 'IdFromURL' and 'IdUserFromURL'. Either include them or remove the dependency array.",["323"],"React Hook useEffect has a missing dependency: 'IdFromURL'. Either include it or remove the dependency array.",["324"],"'ReactTooltip' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faTimesCircle' is defined but never used.","'HomepageScreen' is defined but never used.","'user' is assigned a value but never used.","'studentInClass' is assigned a value but never used.","'teachersInClass' is assigned a value but never used.","'setsTeachersInClass' is assigned a value but never used.","'coordinatorsInClass' is assigned a value but never used.","'setsCoordinatorsInClass' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'IdUserFromURL' and 'token'. Either include them or remove the dependency array.",["325"],"no-global-assign","no-unsafe-negation",{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"326","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},"Update the dependencies array to be: [token]",{"range":"341","text":"342"},"Update the dependencies array to be: [IdFromURL, token]",{"range":"343","text":"344"},"Update the dependencies array to be: [IdClassFromURL, token, user]",{"range":"345","text":"346"},"Update the dependencies array to be: [addClasses, user]",{"range":"347","text":"348"},{"range":"349","text":"342"},"Update the dependencies array to be: [IdFromURL, IdUserFromURL]",{"range":"350","text":"351"},"Update the dependencies array to be: [IdFromURL]",{"range":"352","text":"353"},"Update the dependencies array to be: [IdUserFromURL, token]",{"range":"354","text":"355"},[2225,2227],"[token]",[2675,2677],"[IdFromURL, token]",[1910,1912],"[IdClassFromURL, token, user]",[1980,1986],"[addClasses, user]",[1498,1500],[2357,2359],"[IdFromURL, IdUserFromURL]",[954,956],"[IdFromURL]",[1942,1944],"[IdUserFromURL, token]"]