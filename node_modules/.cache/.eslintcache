[{"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/index.js":"1","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/App.js":"2","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/reportWebVitals.js":"3","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/Signin.js":"4","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/ProfileScreen.js":"5","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/ProjectsScreen.js":"6","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/HomepageScreen.js":"7","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/CoursesScreen.js":"8","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/CoursesMainScreen.js":"9","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/AboutusScreen.js":"10","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/TeachersScreen.js":"11","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/components/UpdateUserDetails.js":"12","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/api-service.js":"13","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/components/Navbar/index.js":"14","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/components/Popup.js":"15","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/components/Navbar/NavbarElements.js":"16","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/UserProfile.js":"17"},{"size":953,"mtime":1641132603000,"results":"18","hashOfConfig":"19"},{"size":1618,"mtime":1641132603000,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1641132603000,"results":"21","hashOfConfig":"19"},{"size":2060,"mtime":1641132603000,"results":"22","hashOfConfig":"19"},{"size":7246,"mtime":1641376598999,"results":"23","hashOfConfig":"19"},{"size":158,"mtime":1641132603000,"results":"24","hashOfConfig":"19"},{"size":240,"mtime":1641132603000,"results":"25","hashOfConfig":"19"},{"size":16627,"mtime":1641132603000,"results":"26","hashOfConfig":"19"},{"size":2405,"mtime":1641132603000,"results":"27","hashOfConfig":"19"},{"size":238,"mtime":1641132603000,"results":"28","hashOfConfig":"19"},{"size":5978,"mtime":1641132603000,"results":"29","hashOfConfig":"19"},{"size":5373,"mtime":1641329944826,"results":"30","hashOfConfig":"19"},{"size":24537,"mtime":1641330853235,"results":"31","hashOfConfig":"19"},{"size":1675,"mtime":1641132603000,"results":"32","hashOfConfig":"19"},{"size":2310,"mtime":1641132603000,"results":"33","hashOfConfig":"19"},{"size":1664,"mtime":1641132603000,"results":"34","hashOfConfig":"19"},{"size":3551,"mtime":1641132603000,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"3jat24",{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"38"},"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/index.js",[],["77","78"],"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/App.js",["79","80","81","82"],"import './App.css';\nimport React, {useEffect} from 'react';\nimport Navbar from \"./components/Navbar\";\nimport HomepageScreen from './pages/HomepageScreen';\nimport CoursesScreen from './pages/CoursesScreen';\nimport ProjectsScreen from './pages/ProjectsScreen';\nimport ProfileScreen from './pages/ProfileScreen';\nimport CoursesMainScreen from './pages/CoursesMainScreen';\nimport TeachersScreen from './pages/TeachersScreen';\nimport AboutusScreen from './pages/AboutusScreen';\nimport UpdateUserDetails from './components/UpdateUserDetails';\nimport Signin from './pages/Signin'; \nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { useCookies } from 'react-cookie';\n\n\n\nfunction App() {\n  const [token, setToken, deleteToken] = useCookies(['mr-token']);\n\n\n  return (\n\n    <Router>\n     \n      <Navbar />\n      <Switch>\n        <Route path=\"/HomepageScreen\" exact component={HomepageScreen} />\n        <Route path=\"/CoursesScreen\" component={CoursesScreen} />\n        <Route path=\"/ProjectsScreen\" component={ProjectsScreen} />\n        <Route path=\"/ProfileScreen\" component={ProfileScreen} />\n        <Route path=\"/TeachersScreen\" component={TeachersScreen} />\n        <Route path=\"/AboutusScreen\" component={AboutusScreen} />\n        <Route path=\"/Signin\" component={Signin} />\n        <Route path=\"/CoursesMainScreen\" component={CoursesMainScreen} />\n        <Route path=\"/UpdateUserDetails\" component={UpdateUserDetails}/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/reportWebVitals.js",[],"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/Signin.js",[],"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/ProfileScreen.js",["83","84","85","86","87","88","89","90","91","92","93","94"],"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/ProjectsScreen.js",[],"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/HomepageScreen.js",[],"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/CoursesScreen.js",["95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117"],"import React, {useEffect, useState} from 'react';\nimport ReactPlayer from 'react-player';\nimport '../Courses.css';\nimport { API } from '../api-service';\n//import {token} from '/Signin'; \n// import ReactDom from 'react-dom';\n//import Popup from 'react-popup';\nimport Popup from '../components/Popup';\nimport { useCookies } from 'react-cookie';\nimport Signin from '../pages/Signin'; \n\n\n\nconst CoursesScreen = () => {\n  const [token, setToken, deleteToken] = useCookies(['mr-token']);\n  console.log(\"token is: \", token['mr-token'])\n  // const user = parseJwt(token['mr-token']);\n\n    \n\n  \n//   render() \n//     const { state } = this.props.location\n//     return (\n//       console.log(state)\n//     )\n  \nconst search = window.location.search; // returns the URL query String\nconst params = new URLSearchParams(search); \nconst IdFromURL = params.get('id');\nconst linkFromURL = params.get('link');\n// const courseFromUrl = params.get('course');   \nconsole.log(\"now\"); \nconsole.log(IdFromURL);\nconsole.log(linkFromURL);\n\n// console.log(courseFromUrl); \nconst [courses, setCourses] = useState([]);\nconst [userLessons, setUserLessons] = useState([]);\nconst [lessons, setLessons] = useState([]);\nconst [lessonNumber, setLessonsNumber] = useState([1]);\nconst [currentLesson, setCurrentLesson] = useState([]);\n//the url from youtube for every lesson. changed when the user choose another lesson. the default is for the first lesson. \nconst[url, setUrl ] = useState(linkFromURL);  \nconst[buttonPopup, setButtonPopup ] = useState(false); \nconst[notePopup, setNotePopup ] = useState(false);\nconst[notes, setNotes ] = useState();\nconst[answer, setAnswer ] = useState();\nconst[userLastLesson, setUserLastLesson ] = useState(1);\nconst lessonsList =[];\nvar numOfLessons = 0;\n\n//const [playing, setPlaying] = useState()\n\n\n\n\n//const displayCourses = () =>  {\n  useEffect(() =>{\n  var username = Signin.username\n  console.log(\"username is:\",username)\n  setLessonsNumber(1) \n  API.displayCourses()\n      .then( resp => setCourses(resp))\n      //.then( resp => setCurrentLesson(resp[0].lessons[0]))\n      .catch( error => console.log(error)) \n  API.getLessons()\n      .then( resp => setLessons(resp))\n      .catch( error => console.log(error)) \n  API.getUserLessons()\n    .then( resp => setUserLessons(resp))\n    .catch( error => console.log(error)) \n  API.getUserLastLesson(token['mr-token'],IdFromURL)\n    .then( resp => setUserLastLesson(resp.results[0].numOfLesson))\n    .catch( error => console.log(error))\n\n}, [])\n\n\n\n//console.log(parseJwt('eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c'))\n// const setFirstUrl= () =>  {\n//   console.log(\"courses[0]\")\n//   console.log(courses[0])\n//   //setUrl(courses[0].lessons[0].link)  .lessons[0].link\n// }\n// useEffect(() =>{ \n//   console.log(\"please work: \")\n//   console.log(courses[0].lessons[0].link)  \n// }, [courses.length > 1])\n\n// const getFirstLesson = (courses) =>{\n//   console.log(\"in first lesson\")\n//   var firstLesson = courses[0].lessons[0]\n//   console.log(\"the first lesson is: \",firstLesson)\n// }\n\nconst displayLessons = (lesson) =>{\n  if(lesson.numOfLesson<=userLastLesson){\n    console.log(\"in display lesson: \")\n    console.log(\"last lesson is: \",userLastLesson)\n    console.log(lesson)\n    //console.log(parseJwt(token['mr-token']))\n    console.log(userLessons)\n    //console.log(token.User)\n    //console.log(token['mr-token'].User)\n    setUrl(lesson.link)\n    console.log(\"lesson number is: \", lessonNumber)\n    console.log(\"lesson id is: \",lesson.id)\n    setLessonsNumber(lesson.numOfLesson)\n    //works for python course -> setLessonsNumber(lesson.id === 1? 1:lesson.id-1)\n    setCurrentLesson(lesson)\n    console.log(\"after: lesson number is: \", lessonNumber)\n  }\n}\n\n\n\n\nconst playNextLesson= () =>  {\n  console.log(\"in next lesoon fun. next lesson number is: \", lessonNumber+1);\n  console.log(\"lesson number is: \", lessonNumber);\n  console.log(lessonsList)\n  // console.log(\"courses[0]\")\n  // console.log(courses[0].lessons[0])\n//   var len = 2;\n//  lessonsList.map(id => {return len=len+1} )\n\n  console.log(\"lesson list.length is:\", lessonsList[0].length);\n {lessonsList[0]  ?  lessonNumber ===  lessonsList[0].length  ?console.log(\"1\") :console.log(\"2\") :console.log(\"3\") }\n  //if there is ann assignmnent for these lesson - display it on a popup message. if there is no assignment - proceed to next lesson\n    // if (currentLesson.assignment != \"null\"){\n    // {lessonsList.map(lesson =>{\n      // var first = lessonsList[0].name;\n      // console.log(first);\n      // console.log(\"first\");\n      //if there is an assignment for this lesson\n    if(lessonsList[0][lessonNumber-1].assignment !=\"null\"){\n      console.log(\"need to be here\");\n      console.log(currentLesson.assignment);\n      console.log(\"lesson number is: \", lessonNumber);\n      setAnswer('')\n\n      if(currentLesson.id){\n        API.getUserAnswer(token['mr-token'], currentLesson.id)\n        //.then( resp => console.log(resp))\n        .then( resp => setAnswer(resp.results[0].answer))\n        .catch( error => console.log(error))\n      }\n      else{\n        console.log(\"im in else\")\n        API.getUserAnswer(token['mr-token'], params.get('firstLessonId'))\n        //.then( resp => console.log(resp))\n        .then( resp => setAnswer(resp.results[0].answer))\n        .catch( error => console.log(error))\n      }\n       \n      setButtonPopup(true);\n  }\n  else{\n    if(userLastLesson==lessonNumber){\n      API.updateUserCourse(token['mr-token'], userLastLesson+1, IdFromURL)\n      setUserLastLesson(userLastLesson+1)\n      }\n    {lessonsList.map(lesson => {\n      {console.log(\"inside next lesson\")}\n      {console.log(lesson[lessonNumber])}\n      return setUrl(lesson[lessonNumber].link), setCurrentLesson(lesson[lessonNumber])\n      \n      // console.log(lesson[4].link);\n    })}\n    setLessonsNumber(lessonNumber+1)\n    \n  // console.log(lessonsList[3]);\n // console.log(lessonsList[4].url);\n  //setLessonsNumber(lessonNumber+1)\n  \n  }\n}\n\n\n\nconst playPreviousLesson= () =>  {\n  console.log(\"in previous. next lesson number is:\", lessonNumber-1);\n  console.log(\"lesson number is: \", lessonNumber);\n  {lessonsList.map(lesson => {\n    return setUrl(lesson[lessonNumber-2].link), setCurrentLesson(lesson[lessonNumber-2])\n    // console.log(lesson[4].link);\n  })}\n  setLessonsNumber(lessonNumber-1)\n  \n  // console.log(lessonNumber)\n  // API.getPreviousLesson(lessonNumber-1)\n  //     .then( resp => setCurrentLesson(resp))\n  //     .then(console.log(currentLesson))\n  //     .catch( error => console.log(error)) \n  // setUrl(currentLesson.link)\n  // setLessonsNumber(currentLesson.id)  \n}\n//proceed to the next lesson of the course after the popup message\nconst proceedToNextLesson= () =>  {\n  if(userLastLesson==lessonNumber){\n    API.updateUserCourse(token['mr-token'], userLastLesson+1, IdFromURL)\n    setUserLastLesson(userLastLesson+1)\n    }\n  console.log(\" inside fun proceed\");\n  if(currentLesson.id)\n    API.updateUserAnswer(token['mr-token'], answer, currentLesson.id)\n  else\n    API.updateUserAnswer(token['mr-token'], answer, params.get('firstLessonId'))\n  {lessonsList.map(lesson => {\n    return setUrl(lesson[lessonNumber].link), setCurrentLesson(lesson[lessonNumber])\n  })}\n  setLessonsNumber(lessonNumber+1)\n  setButtonPopup(false)\n}\n// console.log(\"lessonNumber+2\")\n// API.getNextLesson(lessonNumber+1)\n//     .then( resp => setCurrentLesson(resp))\n//     .then(console.log(currentLesson))\n//     .catch( error => console.log(error)) \n//     console.log(\"the current lesson is:\")\n//     console.log(currentLesson.name)\n// setUrl(currentLesson.link)\n// setLessonsNumber(currentLesson.id)\n// \nconst openNotes= () =>  {\n  //{setPlaying(false)}\n  console.log(\" inside openNotes\");\n  setNotes('')\n  console.log(\"lesson is:\",currentLesson.id)\n  console.log(\"maybe that: \",  params.get('firstLessonId'))\n  if(currentLesson.id){\n    API.getUserNotes(token['mr-token'],currentLesson.id)\n      // .then( console.log(\"resp.results[0].notes\"))\n      // .then( resp => console.log(resp))\n      .then( resp => setNotes(resp.results[0].notes))\n      .catch( error => console.log(error))\n  }\n  else{\n    console.log(\"im in else\")\n    API.getUserNotes(token['mr-token'],params.get('firstLessonId'))\n      .then( resp => setNotes(resp.results[0].notes))\n      .catch( error => console.log(error))\n  }\n  setNotePopup(true)\n}\nconst saveNotes= () =>  { \nif(currentLesson.id)\n  API.updateUserNotes(token['mr-token'], notes, currentLesson.id)\nelse\n  API.updateUserNotes(token['mr-token'], notes, params.get('firstLessonId'))\n setNotePopup(false)\n}\n// const ref = player => {\n//   player = player\n// }\n\n  return ( \n\n  \n    <div className=\"App\">\n      <header className=\"Header\">\n      \n     \n      {/* <h1>{currentLesson.assignment}</h1> */}\n        {/* {courses.map(lesson => {\n             if(lesson.id == IdFromURL) \n                 return <h2>{lesson.name}}</h2>} */}\n\n\n                 { courses.map(lesson => { \n                  if(lesson.id == IdFromURL) \n                      return <h1>{lesson.name}</h1>\n                    //  return <h1>{currentLesson.id}</h1>\n                     \n               })}\n\n\n      </header> \n      <button onClick={openNotes}>הערות</button>\n      <div className=\"lessons\">\n      <div>\n        {/* //working */}\n      {/* {  courses.map( course => {\n            return <button onClick={() => test(course)}>{course.name}</button>\n          })}  */}\n      {/* {  courses.map( course => {\n            return <h2>{course.name}</h2>\n          })}  */}\n      {/* { courses.map(lesson => {\n            return <h2>{lesson.lessons.map((name) => \n              <li >{name.name} </li>\n              //<button onClick={displayLessons(name.name)}>{name.name} </button>\n            )}</h2>\n        })} */}\n      </div>\n      <div>\n      {/* { courses.map( lesson => {         &nbsp;&nbsp;&nbsp;\n          lesson.lessons.map(nam =>{\n            return <h2>{nam.name}</h2>\n        })\n          })} */}\n        </div>\n       \n        <div>\n\n           {/*  display the lessons for the chosen course */ }\n          { courses.map(lesson => { \n             if(lesson.id == IdFromURL){\n                numOfLessons=lesson.lessons.length;\n                {console.log(\"num of lesson is: \",numOfLessons )}\n                {lessonsList.push(lesson.lessons)}\n                // {setsSelectedCourse(lesson)}\n                return <h2>{lesson.lessons.map((name) =>\n                  <ul class={name.numOfLesson>userLastLesson? \"coursesListBlocked\" :name.numOfLesson == currentLesson.numOfLesson ? \"currentList\": \"lessonsList\"}>\n                  <li onClick={() => displayLessons(name)}>\n                  {name.numOfLesson>userLastLesson?   name.name + \" (נעול)\":name.name } </li> </ul>\n                // <ul class={name.numOfLesson == currentLesson.numOfLesson ? \"currentList\": \"lessonsList\"}> <li onClick={() =>  displayLessons(name)}>{  name.numOfLesson>userLastLesson? name.name + \" (נעול)\"}b:name.name } </li> </ul>\n             //}\n             )}</h2> \n                } \n          })}\n        \n</div>\n              \n\n        <div>\n\n          <ReactPlayer trigger={url} controls url={url} width='70%'\n          height='220%'/><br/>\n          {console.log(\"lessonsList\")}\n          {console.log(lessonsList)}\n          {/* {numOfLessons = lessonsList.length > 0 ? lessonsList[0].length: '0'} */}\n          {/* <div className=\"prevAndNext\"> */}\n            {/* <button className=\"prevAndNext\" onClick={playNextLesson} >השיעור הבא</button> */}\n            {/*lessonsList[0] &&    lessonsList[0].length*/}\n            \n              \n           \n            {/* <button className=\"prevAndNext\" style={{display : lessonNumber ===  lessonsList[0].length  ? \"\": \"none\"}}  onClick={playNextLesson} >השיעור הבא</button>  */}\n            <button className=\"prevAndNext\" style={{display : lessonNumber ===  numOfLessons  ? \"none\": \"\"}}  onClick={playNextLesson} >השיעור הבא</button> \n            {/* <button className=\"prevAndNext\" style={{display : lessonsList[0]!=null  &&  lessonNumber ===  lessonsList[0].length  ? \"none\": \"\"}}  onClick={playNextLesson} >השיעור הבא</button>  */}\n            <button className=\"prevAndNext\" style={{display : lessonNumber ===  1  ? \"none\": \"\"}} onClick={playPreviousLesson}>השיעור הקודם</button><br/>\n     \n        </div>\n\n          {/* display as buttons all the lessons of the selected course  */}\n        {/* { courses.map(lesson => {\n            return <h2>{lesson.lessons.map((name) => \n             <ul class=\"lessonsList\"> <li onClick={() => displayLessons(name)}>{name.name} </li> </ul>\n              //<button onClick={displayLessons(name.name)}>{name.name} </button>\n            )}</h2>\n        })} */}\n        \n\n\n           {/* <button onClick={() => setUrl('https://youtu.be/i9-HWYsrh_k')} >שיעור 1</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/OWuRhPUP31s')}>שיעור 2</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/Ew_JiqX1EO0')} >שיעור 3</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/6XI_0ORZsao')}>שיעור 4</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/iDu4PuKNXpc')} >שיעור 5</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/VIAgn7_zPvU')}>שיעור 6</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/yPdMrpmLZ1o')} >שיעור 7</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/2SYkSp8bHkQ')}>שיעור 8</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/djYyAngqOHA')} >שיעור 9</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/F6OD_OCSDrQ')}>שיעור 10</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/hsdPUQ94TFQ')} >שיעור 11</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/iIFS059A1oM')}>שיעור 12</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/HD2s_BTtVBo')} >שיעור 13</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/zACdpNyH3_M')}>שיעור 14</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/Xn9_B_oQcC4')} >שיעור 15</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/K2eQyBepFoQ')}>שיעור 16</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/GSQEc4BxrhE')}>שיעור 17</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/uzZFDPQ_jyI')} >שיעור 18</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/Q-vWAl6AdsE')}>שיעור 19</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/z5zA9wMjwmQ')} >שיעור 20</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/HfyV9IzyaJQ')}>שיעור 21</button><br/> */}\n        \n        {/* <div>\n          \n          { courses.map( course => {\n            return <h2>{course.name}</h2>\n          })}\n        </div> */}\n          {/* course = this.props.data.map(function (co)){\n          return(\n          <div>\n          <h2>{course.name}</h2>\n          </div>\n          );\n      });\n    } */}\n    </div>\n    \n    <Popup trigger={buttonPopup} setTrigger={setButtonPopup}>\n      <h3>לפני שעוברים לשיעור הבא יש לבצע מטלה</h3>\n          {console.log(\"popup message\")}\n          {console.log(currentLesson.assignment)}\n          <p>{currentLesson.assignment}</p>\n          {console.log(\"answer is: \",answer)}\n          <button onClick={proceedToNextLesson}>שמור והמשך לשיעור הבא</button>\n          <input type = \"text\" value={answer} \n          onChange={e => setAnswer(e.target.value)}\n          ></input>\n    </Popup>\n    <Popup trigger={notePopup} setTrigger={setNotePopup}>\n    \n    {/* {console.log(this.player.getCurrentTime())} */}\n      <h3>אלו ההערות שלך עבור שיעור זה</h3>\n          {console.log(\"popup message 2\")}\n          {console.log(notes)}\n          {/* {console.log(notes.results && notes.results.notes)} */}\n          {console.log(\"end of popup message 2\")}\n          {/* <p>{notes}</p> */}\n        \n          <textarea\n          name = \"notesTA\"\n          value={notes}\n          onChange={e => setNotes(e.target.value)}\n          rows={5}\n          cols={50}\n        />\n        <br/>\n        <button onClick={saveNotes}>שמור</button>\n        \n    </Popup>\n   \n    </div>  \n\n  );\n};\n\n\n\nexport default CoursesScreen;\n","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/CoursesMainScreen.js",[],"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/AboutusScreen.js",[],"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/TeachersScreen.js",[],"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/components/UpdateUserDetails.js",["118","119","120","121","122","123","124","125","126","127","128"],"import React, {useEffect, useState} from 'react';\nimport { Container,Row,Col,Form ,Button} from 'react-bootstrap';\nimport { useCookies } from 'react-cookie';\nimport { API } from '../api-service';\nimport Signin from '../pages/Signin'; \nimport '../index.css';\nimport { useHistory } from \"react-router-dom\";\nimport Popup from './Popup';\n//import UpdateUserDetails from '../components/UpdateUserDetails'\nconst axios = require('axios');\n\n\nconst UpdateUserDetails = () => {\n  const history = useHistory();\n  const handleRoute = () =>{ \n      history.push(\"/ProfileScreen\");\n    }\n      \n    const [token, setToken, deleteToken] = useCookies(['mr-token']);\n    const [user,setUser] = useState([]);\n    const [firstName,setfirstName] = useState([]);\n    const[popup, setPopup ] = useState();\n    const [UpdateUserfirstnamePopUp, setUpdateUserfirstnamePopUp ] = useState(false);\n    const [UpdateUserlastnamePopUp, setUpdateUserlastnamePopUp ] = useState(false);\n    const [UpdateUseremailPopUp, setUpdateUseremailPopUp ] = useState(false);\n    const [UpdateUseraboutmePopUp, setUpdateUseraboutmePopUp ] = useState(false);\n    const [UpdateUserhobbiesPopUp, setUpdateUserhobbiesPopUp ] = useState(false);\n    useEffect(()=>{\n        //var username = Signin.username\n        //console.log(\"username is:\",username)\n        API.getUserDetails(token['mr-token'])\n         //.then(resp => console.log(\"resp is:\", resp.results))\n         .then(resp => setUser(resp.results))  \n         .catch( error => console.log(error)) \n    }, [])\n    const openPopup = () =>{\n      //if(this.user === undefined) {return}\n      console.log('inside open Popup');\n      setPopup('');\n      console.log(\"user name \",user.firstName)\n      \n      setUpdateUserfirstnamePopUp(true);\n    } \n    const openlastnamePopup = () =>{\n      console.log('inside open last name Popup');\n      setPopup('');\n      console.log(\"user name \",user.firstName)\n      \n      setUpdateUserlastnamePopUp(true);\n    }\n    const openemailPopup = () =>{\n      console.log('inside open email Popup');\n      setPopup('');\n      console.log(\"user name \",user.firstName)\n      \n      setUpdateUseremailPopUp(true);\n    }\n    const openaboutmePopup = () =>{\n      console.log('inside open about me Popup');\n      setPopup('');\n      console.log(\"user name \",user.firstName)\n      \n      setUpdateUseraboutmePopUp(true);\n    }\n    const openhobbiesPopup = () =>{\n      console.log('inside open hobbies Popup');\n      setPopup('');\n      console.log(\"user name \",user.firstName)\n      \n      setUpdateUserhobbiesPopUp(true);\n    }\n    \n    const savechangesfirstname= () =>  { \n      if(user.id)\n        API.UpdateUserDetails(token['mr-token'], firstName, user.id)\n       setUpdateUserfirstnamePopUp(false)\n      }\n      \n    return(\n        <div className=\"App\">\n        <header className=\"Header\">דף שינוי פרטים</header>\n        <div className=\"updateProfile\">\n        <div>\n        <h4>שם משתמש:</h4>\n         <p>{user.username}</p>\n         <h4>שם פרטי: </h4><button onClick={openPopup}>עריכה</button>\n         <p>{user.firstName}</p>\n          <h4>שם משפחה:</h4><button onClick={openlastnamePopup}>עריכה</button>\n          <p>{user.lastName}</p>\n       </div>\n        <div>\n        <h4>דואר אלקטרוני:</h4><button onClick={openemailPopup}>עריכה</button>\n       <p>{user.email}</p>\n       <h4>קצת עליי..</h4><button onClick={openaboutmePopup}>עריכה</button>\n       <p>{user.aboutMe}</p>\n       </div>\n       <div>\n       <h4>תחביבים:</h4><button onClick={openhobbiesPopup}>עריכה</button>\n       <p>{user.hobbies}</p>\n       </div>\n       </div>\n        <button onClick={handleRoute}>חזרה</button>\n        <Popup trigger={UpdateUserfirstnamePopUp} setTrigger={setUpdateUserfirstnamePopUp}>\n          <h3>שם פרטי:</h3>\n          {console.log(\"first name popup message test\")}\n          <textarea name = \"firstNameTA\" value={firstName} onChange={e => setfirstName(e.target.value) }>{user.firstName}</textarea>\n        <br/>\n        <button onClick={savechangesfirstname}>שמור</button>\n        </Popup>\n        <Popup trigger={UpdateUserlastnamePopUp} setTrigger={setUpdateUserlastnamePopUp}>\n          <h3>שם משפחה:</h3>\n          {console.log(\"last name popup message test\")}\n          <textarea>{user.lastName}</textarea>\n        <br/>\n        <button >שמור</button>\n        </Popup>\n        <Popup trigger={UpdateUseremailPopUp} setTrigger={setUpdateUseremailPopUp}>\n          <h3>דואר אלקטרוני:</h3>\n          {console.log(\"mail popup message test\")}\n          <textarea>{user.email}</textarea>\n        <br/>\n        <button >שמור</button>\n        </Popup>\n        <Popup trigger={UpdateUseraboutmePopUp} setTrigger={setUpdateUseraboutmePopUp}>\n          <h3>קצת עליי..:</h3>\n          {console.log(\"about me popup message test\")}\n          <textarea>{user.aboutMe}</textarea>\n        <br/>\n        <button >שמור</button>\n        </Popup>\n        <Popup trigger={UpdateUserhobbiesPopUp} setTrigger={setUpdateUserhobbiesPopUp}>\n          <h3>תחביבים:</h3>\n          {console.log(\"hobbies popup message test\")}\n          <textarea>{user.hobbies}</textarea>\n        <br/>\n        <button >שמור</button>\n        </Popup>\n        </div>\n    )\n};\n\n           \nexport default UpdateUserDetails;","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/api-service.js",["129","130","131","132","133","134","135","136","137","138"],"import React from \"react\"\nconst BASE_URL = 'https://yarintz.pythonanywhere.com';\nconst LOCAL_URL = 'http://127.0.0.1:8000';\nexport class API extends React.Component{\nstatic UpdateUserDetails(token, data){\n\n        return fetch(`${LOCAL_URL}/main/userProfile/2/`,{\n            method: 'PUT',\n            headers: {  \n                'Content-Type':'application/json',\n                'Authorization': `Token ${token}` \n            },\n            body: JSON.stringify({'firstname' : data})\n        })\n        //.then(resp => console.log(resp))\n         .then( resp => resp.json())\n        //.then( res => props.UpdateUser(res))\n        //.catch( error => console.log(error))\n    }  \n/*\nstatic DisplayUser(body){ \n        console.log(body)\n        return fetch(`${LOCAL_URL}/main/users/21/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify( body )\n        }).then( resp => resp.json())\n        }\n       */\n       /*\nstatic DisplayUserInfo(token, id, data){\n    return fetch(`${LOCAL_URL}/main/users/${id}/`),{\n        method: 'POST',\n        headers:{\n            'Content-Type': 'application/json',\n            'Authorization': `Token ${token}`\n        },\n        body: JSON.stringify( data )\n    }).then( resp => resp.json())  \n}*/\n// static getUserDetails(id){\n\n//     return fetch(`${LOCAL_URL}/main/users/${id}`,{\n//         method: 'GET',\n//         headers: {  \n//             'Content-Type':'application/json',\n           \n//         }\n//     }).then( resp => resp.json())\n//     //.then( res => props.UpdateUser(res))\n//     //.catch( error => console.log(error))\n// } \nstatic getUserDetails(token){\n\n    return fetch(`${BASE_URL}/main/userProfile/1/getUserDetails/`,{\n        method: 'POST',\n        headers: {  \n            'Content-Type':'application/json',\n            'Authorization': `Token ${token}` \n        }\n    })\n    //.then(resp => console.log(resp))\n     .then( resp => resp.json())\n    //.then( res => props.UpdateUser(res))\n    //.catch( error => console.log(error))\n} \n\nstatic getUserDetails(token){\n\n    return fetch(`${BASE_URL}/main/userProfile/1/getUserDetails/`,{\n        method: 'POST',\n        headers: {  \n            'Content-Type':'application/json',\n            'Authorization': `Token ${token}` \n        }\n    })\n    //.then(resp => console.log(resp))\n     .then( resp => resp.json())\n    //.then( res => props.UpdateUser(res))\n    //.catch( error => console.log(error))\n} \nstatic getUserDetails(token){\n\n    return fetch(`${LOCAL_URL}/main/userProfile/1/getUserDetails/`,{\n        method: 'POST',\n        headers: {  \n            'Content-Type':'application/json',\n            'Authorization': `Token ${token}` \n        }\n    })\n    //.then(resp => console.log(resp))\n     .then( resp => resp.json())\n    //.then( res => props.UpdateUser(res))\n    //.catch( error => console.log(error))\n}\n \nstatic loginUser(body){ \n    return fetch(`${BASE_URL}/auth/`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify( body )\n        }).then( resp => resp.json())\n    }\nstatic registerUser(body){ \n    console.log(body)\n        return fetch(`${BASE_URL}/main/users/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify( body )\n            }).then( resp => resp.json())\n        }\n        static displayCourses(){ \n                console.log(\"inside displayCourses fun\")\n                return fetch(`${BASE_URL}/main/courses/`, {\n                    method: 'GET',\n                    headers: {\n                        'Content-Type': 'application/json'\n                     },\n                    //body: JSON.stringify( body )\n                }).then( resp => resp.json())\n                // .then( resp => console.log(resp))\n                }           \n        static getLessons(){ \n                console.log(\"inside getLessons fun\")\n                // return fetch(`http://127.0.0.1:8000/main/courses/1/`, {\n                return fetch(`${BASE_URL}/admin/main/course/1/`, {\n                    method: 'GET',\n                    headers: {\n                        'Content-Type': 'application/json'\n                        },\n                    //body: JSON.stringify( body )\n                })\n                .then( resp => resp.json())\n                // .then( resp => console.log(resp))\n                \n                      \n                }  \n                static getNextLesson(num){ \n                    console.log(\"inside getNextLesson fun\")\n                    return fetch(`${BASE_URL}/main/lessons/${num}/`, {\n                        method: 'GET',\n                        headers: {\n                            'Content-Type': 'application/json'\n                            },\n                        //body: JSON.stringify( body )\n                    })\n                    .then( resp => resp.json())\n                    // .then( resp => console.log(resp)) \n                }\n                static getPreviousLesson(num){ \n                    console.log(\"inside getPreviousLesson fun\")\n                    console.log(num)\n                    return fetch(`${BASE_URL}/main/lessons/${num}/`, {\n                        method: 'GET',\n                        headers: {\n                            'Content-Type': 'application/json'\n                            },                       \n                    })\n                    .then( resp => resp.json())\n                }\n\n                static getCurrentCourse(numOfCourse){ \n                    console.log(\"inside displayCourses fun\")\n                    return fetch(`${BASE_URL}/main/courses/${numOfCourse}/`, {\n                        method: 'GET',\n                        headers: {\n                            'Content-Type': 'application/json'\n                         },\n                        //body: JSON.stringify( body )\n                    }).then( resp => resp.json())\n                    // .then( resp => console.log(resp))\n                    }   \n               \n                    static loginUser(body){ \n                        return fetch(`${LOCAL_URL}/auth/`, {\n                            method: 'POST',\n                            headers: {\n                                'Content-Type': 'application/json'\n                            },\n                            body: JSON.stringify( body )\n                        }).then( resp => resp.json())\n                        }\n\n\n                        static registerUser(body){ \n                            console.log(body)\n                            return fetch(`${LOCAL_URL}/main/users/`, {\n                                method: 'POST',\n                                headers: {\n                                    'Content-Type': 'application/json'\n                                },\n                                body: JSON.stringify( body )\n                            }).then( resp => resp.json())\n                            }\n                        static displayCourses(){ \n                                console.log(\"inside displayCourses fun\")\n                                return fetch(`${LOCAL_URL}/main/courses/`, {\n                                    method: 'GET',\n                                    headers: {\n                                        'Content-Type': 'application/json'\n                                     },\n                                    //body: JSON.stringify( body )\n                                }).then( resp => resp.json())\n                                // .then( resp => console.log(resp))\n                                }  \n                                static getCourses(num){ \n                                    return fetch(`${BASE_URL}/main/courses/${num}`, {\n                                        method: 'GET',\n                                        headers: {\n                                            'Content-Type': 'application/json'\n                                         },\n                                    }).then( resp => resp.json())\n                                    }  \n\n                                    static getCourses(num){ \n                                        return fetch(`${LOCAL_URL}/main/courses/${num}`, {\n                                            method: 'GET',\n                                            headers: {\n                                                'Content-Type': 'application/json'\n                                             },\n                                        }).then( resp => resp.json())\n                                        } \n\n                        static getLessons(){ \n                                console.log(\"inside getLessons fun\")\n                                // return fetch(`http://127.0.0.1:8000/main/courses/1/`, {\n                                return fetch(`${LOCAL_URL}/admin/main/course/1/`, {\n                                    method: 'GET',\n                                    headers: {\n                                        'Content-Type': 'application/json'\n                                        },\n                                    //body: JSON.stringify( body )\n                                })\n                                .then( resp => resp.json())\n                                // .then( resp => console.log(resp))\n                                \n                                      \n                                }  \n                                static getNextLesson(num){ \n                                    console.log(\"inside getNextLesson fun\")\n                                    return fetch(`${LOCAL_URL}/main/lessons/${num}/`, {\n                                        method: 'GET',\n                                        headers: {\n                                            'Content-Type': 'application/json'\n                                            },\n                                        //body: JSON.stringify( body )\n                                    })\n                                    .then( resp => resp.json())\n                                    // .then( resp => console.log(resp)) \n                                }\n                                static getPreviousLesson(num){ \n                                    console.log(\"inside getPreviousLesson fun\")\n                                    console.log(num)\n                                    return fetch(`${LOCAL_URL}/main/lessons/${num}/`, {\n                                        method: 'GET',\n                                        headers: {\n                                            'Content-Type': 'application/json'\n                                            },                       \n                                    })\n                                    .then( resp => resp.json())\n                                }\n                \n                                static getCurrentCourse(numOfCourse){ \n                                    console.log(\"inside displayCourses fun\")\n                                    return fetch(`${LOCAL_URL}/main/courses/${numOfCourse}/`, {\n                                        method: 'GET',\n                                        headers: {\n                                            'Content-Type': 'application/json'\n                                         },\n                                        //body: JSON.stringify( body )\n                                    }).then( resp => resp.json())\n                                    // .then( resp => console.log(resp))\n                                    }\n                                static getUserLessons(){ \n                                        console.log(\"inside getUserLessons fun\")                           \n                                        return fetch(`${LOCAL_URL}/main/userLessons/`, {\n                                            method: 'GET',\n                                            headers: {\n                                                'Content-Type': 'application/json'\n                                                },\n                                            //body: JSON.stringify( body )\n                                        }).then( resp => resp.json())\n                                        //.then( resp => console.log(resp))\n                                        \n                                              \n                                        }  \n                static getUserNotes(token, data){ \n                    console.log(\"im in getUserNotes\")\n                  //  http://127.0.0.1:8000/main/userLessons/1/getUserLessons/                             \n                    return fetch(`${LOCAL_URL}/main/userLessons/1/getUserLessons/`, {\n                        method: 'POST',\n                        headers: {\n                        //   'Accept': 'application/json',\n                          'Content-Type': 'application/json',\n                          'Authorization': `Token ${token}` \n                             },\n                             body: JSON.stringify({'lesson' : data})  \n                            // body: JSON.stringify({data})  \n                            // params: {\n                            //     'lesson': '4'\n                            //   }                 \n                        })\n                          .then( resp => resp.json())\n                        //.then( resp => console.log(\"eewrwerrewreerwewfaj\"))\n                       }  \n                       static updateUserNotes(token, data, numOfLesson){ \n                        console.log(\"im in getUserNotes\")\n                      //  http://127.0.0.1:8000/main/userLessons/1/getUserLessons/                             \n                         return fetch(`${LOCAL_URL}/main/userLessons/${numOfLesson}/addUserLessons/`, {\n                            method: 'POST',\n                            headers: {\n                            \n                              'Content-Type': 'application/json',\n                              'Authorization': `Token ${token}` \n                                 },\n                                 body: JSON.stringify({'notes' : data})  \n                                    \n                            })\n                              .then( resp => resp.json())\n                            //.then( resp => console.log(\"eewrwerrewreerwewfaj\"))\n                           }  \n\n                           static getUserAnswer(token, data){ \n                            console.log(\"im in getUserAnswer\")                         \n                            return fetch(`${LOCAL_URL}/main/userLessons/1/getUserLessons/`, {\n                                method: 'POST',\n                                headers: {\n                                  'Content-Type': 'application/json',\n                                  'Authorization': `Token ${token}` \n                                     },\n                                     body: JSON.stringify({'lesson' : data})  \n              \n                                })\n                                  //.then( resp => console.log(resp))\n                                  .then( resp => resp.json())\n                            \n                               }  \n                               static updateUserAnswer(token, data, numOfLesson){                             \n                                return fetch(`${LOCAL_URL}/main/userLessons/${numOfLesson}/addUserLessons/`, {\n                                    method: 'POST',\n                                    headers: {\n                                    \n                                      'Content-Type': 'application/json',\n                                      'Authorization': `Token ${token}` \n                                         },\n                                         body: JSON.stringify({'answer' : data})  \n                                            \n                                    })\n                                      .then( resp => resp.json())\n                                   }\n                                   \n                                   static getUserLastLesson(token, numOfCourse){                                                       \n                                    return fetch(`${LOCAL_URL}/main/userCourses/${numOfCourse}/getUserCourses/`, {\n                                        method: 'POST',\n                                        headers: {\n                                          'Content-Type': 'application/json',\n                                          'Authorization': `Token ${token}` \n                                             },\n                                            //  body: JSON.stringify({'course' : data})  \n                      \n                                        })\n                                          //.then( resp => console.log(resp))\n                                          .then( resp => resp.json())\n                                    \n                                       } \n                                       static getAllUserCourses(token){                                                       \n                                        return fetch(`${LOCAL_URL}/main/userCourses/1/getAllUserCourses/`, {\n                                            method: 'GET',\n                                            headers: {\n                                              'Content-Type': 'application/json',\n                                              'Authorization': `Token ${token}` \n                                                 },                         \n                                            })                                    \n                                              .then( resp => resp.json())                                       \n                                           } \n\n                                       \n                                       static updateUserCourse(token, data, numOfCourse){                             \n                                        return fetch(`${LOCAL_URL}/main/userCourses/${numOfCourse}/addUserCourses/`, {\n                                            method: 'POST',\n                                            headers: {\n                                            \n                                              'Content-Type': 'application/json',\n                                              'Authorization': `Token ${token}` \n                                                 },\n                                                 body: JSON.stringify({'lesson' : data})  \n                                                    \n                                            })\n                                              .then( resp => resp.json())\n                                           }\n                                           static getClassStudentsByID(classId){                                                                                  \n                                                return fetch(`${LOCAL_URL}/main/class/${classId}/getClassStudents/`, {\n                                                     method: 'POST',\n                                                     headers: {\n                                                        'Content-Type': 'application/json'\n                                                     },                                           \n                                              })\n                                             .then( resp => resp.json())                                                                                                                               \n                                             }  \n                                             static getClassTeacherssByID(classId){                                                                                  \n                                                return fetch(`${LOCAL_URL}/main/class/${classId}/getClassTeachers/`, {\n                                                     method: 'POST',\n                                                     headers: {\n                                                        'Content-Type': 'application/json'\n                                                     },                                           \n                                              })\n                                             .then( resp => resp.json())                                                                                                                               \n                                             }  \n                                             static getClassCoordinatorsByID(classId){                                                                                  \n                                                return fetch(`${LOCAL_URL}/main/class/${classId}/getClassCoordinators/`, {\n                                                     method: 'POST',\n                                                     headers: {\n                                                        'Content-Type': 'application/json'\n                                                     },                                           \n                                              })\n                                             .then( resp => resp.json())                                                                                                                               \n                                             }  \n                                             static getUserProfileById(id){                                     \n                                                return fetch(`${LOCAL_URL}/main/userProfile/${id}/`, {\n                                                    method: 'GET',\n                                                    headers: {\n                                                        'Content-Type': 'application/json'\n                                                        },                       \n                                                })\n                                                .then( resp => resp.json())\n                                            }\n                                            static getUserByUsername(username){  \n                                                console.log(\"im here\");                                                                                \n                                                return fetch(`${LOCAL_URL}/main/userProfile/1/getUserByUsername/`, {\n                                                     method: 'POST',\n                                                     headers: {\n                                                        'Content-Type': 'application/json'\n                                                     }, \n                                                     body: JSON.stringify({'username' : username})\n                                                                                    \n                                              })\n                                              .then( resp => resp.json())  \n                                            //   .then( resp => resp.json()) \n                                            }\n                                            static addStudentToClass(classId, username){                             \n                                                return fetch(`${LOCAL_URL}/main/class/${classId}/addUserToClass/`, {\n                                                    method: 'POST',\n                                                    headers: {\n                                                    \n                                                      'Content-Type': 'application/json',\n                                                    //   'Authorization': `Token ${token}` \n                                                         },\n                                                         body: JSON.stringify({'student' : username})  \n                                                            \n                                                    })\n                                                      .then( resp => resp.json())\n                                                   }\n    }","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/components/Navbar/index.js",["139","140","141","142"],"import React, { useEffect, useState } from \"react\";\nimport { useCookies } from 'react-cookie';\n\nimport {\n  Nav,\n  NavLogo,\n  NavLink,\n  Bars,\n  NavMenu,\n  NavBtn,\n  NavBtnLink,\n} from \"./NavbarElements\";\n\n\nconst Navbar = () => {\n    \n    const[token, setToken, deleteToken] = useCookies(['mr-token']);\n\n\nconst logoutUser = () => {\n      console.log(\"inside logoutUser\");\n      console.log(token);\n      deleteToken(['mr-token']);\n      console.log(token);\n}\n  \n    return (\n        <>\n           <Nav>\n            <NavLogo to=\"/\">\n                Logo\n            </NavLogo>\n            <Bars />\n            <NavMenu>\n            <NavLink to=\"/AboutusScreen\" activeStyle>\n                    עלינו\n                </NavLink>\n            <NavLink to=\"/TeachersScreen\" activeStyle>\n                    הדרכה\n                </NavLink>\n            <NavLink to=\"/ProfileScreen\" activeStyle>\n                    פרופייל\n                </NavLink>\n            <NavLink to=\"/ProjectsScreen\" activeStyle>\n                    פרויקטים\n                </NavLink> \n                <NavLink to=\"/CoursesMainScreen\" activeStyle>\n                    לֹמידה\n                </NavLink>\n                <NavLink to=\"/HomeScreen\" activeStyle>\n                    דף הבית\n                </NavLink>\n               \n\n                {token['mr-token'] ? (<NavBtn onClick={logoutUser} activeStyle>\n                    התנתק\n                </NavBtn> ) : <NavLink  to=\"/Signin\" activeStyle>\n                    התחבר\n                </NavLink>}\n\n                \n            </NavMenu> \n           </Nav> \n        </>\n    );\n};\nexport default Navbar;","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/components/Popup.js",[],"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/components/Navbar/NavbarElements.js",[],"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/UserProfile.js",["143","144","145","146","147","148","149","150","151","152","153","154","155","156"],"import React, {useEffect, useState} from 'react';\nimport { Container,Row,Col,Form ,Button} from 'react-bootstrap';\nimport { useCookies } from 'react-cookie';\nimport { API } from '../api-service';\nimport Signin from './Signin'; \nimport { useHistory } from \"react-router-dom\";\n\nimport '../index.css';\nimport UpdateUserDetails from '../components/UpdateUserDetails'\nconst axios = require('axios');\n\n\nconst UserProfile = () => {\n    console.log(\"hiiiiiiiiii\");\n    // const history = useHistory();\n    // const handleRoute = () =>{ \n    //     history.push(\"/UpdateUserDetails\");\n    //   }\n    const [token] = useCookies(['mr-token']);\n    const search = window.location.search; // returns the URL query String\n    const params = new URLSearchParams(search); \n    const IdFromURL = params.get('id');\n\n    const [user,setUser] = useState([]);\n    const [courses,setCourses] = useState([]);\n    const [userCourses, setUserCourses] = useState([]);\n\n    //   test\n    const [studentsInClass, setsStudentsInClass] = useState([]);\n\n\n\n    useEffect(()=>{\n        \n        API.getUserProfileById(IdFromURL)\n         .then(resp => setUser(resp))  \n         .catch( error => console.log(error)) \n      //  if(!token['mr-token']) window.location.href = '/Signin';\n \n        // API.getUserDetails(token['mr-token'])\n\n        //  .then(resp => setUser(resp.results))  \n        //  .catch( error => console.log(error)) \n        // API.getAllUserCourses(token['mr-token'])\n        //     .then(resp => getCourseName(resp.results)) \n\n        //     .catch( error => console.log(error))\n\n\n            /////todo - add int value\n            API.getClassStudentsByID(2)\n            .then(resp => setsStudentsInClass(resp.results)) \n            .catch( error => console.log(error))\n    }, [])\n\n    // const getCourseName = (courses) =>{\n    //     console.log(\"in fun\",courses)\n    //     courses.map(course => { \n\n    //         API.getCourses(course.course) \n\n    //              .then(resp => setUserCourses((userCourses) => [...userCourses, resp]))\n\n    //  }) \n    \n    // }\n    \n    return(\n        <div className=\"App\">\n        <header className=\"Header\"> הדף של {user.firstName}  {user.lastName}</header>\n        <div className=\"profile\">\n            <div>\n        <h4>שם משתמש:</h4>\n         <p>{user.username}</p>\n\n         {/* test */}\n         {console.log(\"user class is: \",user.studentClasses && user.studentClasses[0].className)}\n         {console.log(\"the students in class number 2 are: \",studentsInClass)}\n        \n         <br/>\n\n         <h4>שם פרטי: </h4>\n         <p>{user.firstName}</p>\n         <br/>\n\n       <h4>שם משפחה:</h4>\n       <p>{user.lastName}</p>\n       </div>\n        <div>\n        <h4>דואר אלקטרוני:</h4>\n       <p>{user.email}</p>\n         \n       <h4>קצת עליי..</h4>\n       <p>{user.aboutMe}</p>\n\n       <h4>הקורסים שלי:</h4>\n\n        { userCourses.map(course => { \n                return <p>\n                 \n                  <p>\n                  {course.name} </p> \n              \n            \n            </p> \n               \n          })}\n      \n\n\n\n      \n       </div>\n       <div>\n       <h4>תחביבים:</h4>\n       <p>{user.hobbies}</p>\n       <br/>\n       <h4>הבאדג'ים שלך:</h4>\n         <p>{user.badges}</p>\n        \n         <br/>\n         <h4>המטרה שלי:</h4>\n         <p>{user.myGoal}</p>\n       </div>\n       </div>\n        {/* <button onClick={handleRoute}>עדכון פרטים</button> */}\n        </div>\n    )\n}\n\nexport default UserProfile;",{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":2,"column":16,"nodeType":"163","messageId":"164","endLine":2,"endColumn":25},{"ruleId":"161","severity":1,"message":"165","line":19,"column":10,"nodeType":"163","messageId":"164","endLine":19,"endColumn":15},{"ruleId":"161","severity":1,"message":"166","line":19,"column":17,"nodeType":"163","messageId":"164","endLine":19,"endColumn":25},{"ruleId":"161","severity":1,"message":"167","line":19,"column":27,"nodeType":"163","messageId":"164","endLine":19,"endColumn":38},{"ruleId":"161","severity":1,"message":"168","line":2,"column":10,"nodeType":"163","messageId":"164","endLine":2,"endColumn":19},{"ruleId":"161","severity":1,"message":"169","line":2,"column":20,"nodeType":"163","messageId":"164","endLine":2,"endColumn":23},{"ruleId":"161","severity":1,"message":"170","line":2,"column":24,"nodeType":"163","messageId":"164","endLine":2,"endColumn":27},{"ruleId":"161","severity":1,"message":"171","line":2,"column":28,"nodeType":"163","messageId":"164","endLine":2,"endColumn":32},{"ruleId":"161","severity":1,"message":"172","line":2,"column":34,"nodeType":"163","messageId":"164","endLine":2,"endColumn":40},{"ruleId":"161","severity":1,"message":"173","line":5,"column":8,"nodeType":"163","messageId":"164","endLine":5,"endColumn":14},{"ruleId":"161","severity":1,"message":"174","line":9,"column":8,"nodeType":"163","messageId":"164","endLine":9,"endColumn":25},{"ruleId":"161","severity":1,"message":"175","line":10,"column":7,"nodeType":"163","messageId":"164","endLine":10,"endColumn":12},{"ruleId":"161","severity":1,"message":"176","line":21,"column":12,"nodeType":"163","messageId":"164","endLine":21,"endColumn":19},{"ruleId":"161","severity":1,"message":"177","line":21,"column":20,"nodeType":"163","messageId":"164","endLine":21,"endColumn":30},{"ruleId":"178","severity":1,"message":"179","line":48,"column":8,"nodeType":"180","endLine":48,"endColumn":10,"suggestions":"181"},{"ruleId":"182","severity":1,"message":"183","line":52,"column":28,"nodeType":"184","messageId":"185","endLine":52,"endColumn":30},{"ruleId":"161","severity":1,"message":"166","line":15,"column":17,"nodeType":"163","messageId":"164","endLine":15,"endColumn":25},{"ruleId":"161","severity":1,"message":"167","line":15,"column":27,"nodeType":"163","messageId":"164","endLine":15,"endColumn":38},{"ruleId":"161","severity":1,"message":"186","line":40,"column":8,"nodeType":"163","messageId":"164","endLine":40,"endColumn":15},{"ruleId":"178","severity":1,"message":"187","line":77,"column":4,"nodeType":"180","endLine":77,"endColumn":6,"suggestions":"188"},{"ruleId":"189","severity":1,"message":"190","line":130,"column":2,"nodeType":"191","messageId":"192","endLine":130,"endColumn":118},{"ruleId":"193","severity":1,"message":"194","line":138,"column":50,"nodeType":"195","messageId":"196","endLine":138,"endColumn":52},{"ruleId":"193","severity":1,"message":"197","line":161,"column":22,"nodeType":"195","messageId":"196","endLine":161,"endColumn":24},{"ruleId":"189","severity":1,"message":"190","line":165,"column":5,"nodeType":"191","messageId":"192","endLine":171,"endColumn":8},{"ruleId":"189","severity":1,"message":"190","line":166,"column":7,"nodeType":"191","messageId":"192","endLine":166,"endColumn":42},{"ruleId":"189","severity":1,"message":"190","line":167,"column":7,"nodeType":"191","messageId":"192","endLine":167,"endColumn":42},{"ruleId":"198","severity":1,"message":"199","line":168,"column":47,"nodeType":"200","messageId":"201","endLine":168,"endColumn":48},{"ruleId":"189","severity":1,"message":"190","line":186,"column":3,"nodeType":"191","messageId":"192","endLine":189,"endColumn":6},{"ruleId":"198","severity":1,"message":"199","line":187,"column":47,"nodeType":"200","messageId":"201","endLine":187,"endColumn":48},{"ruleId":"193","severity":1,"message":"197","line":202,"column":20,"nodeType":"195","messageId":"196","endLine":202,"endColumn":22},{"ruleId":"189","severity":1,"message":"190","line":211,"column":3,"nodeType":"191","messageId":"192","endLine":213,"endColumn":6},{"ruleId":"198","severity":1,"message":"199","line":212,"column":45,"nodeType":"200","messageId":"201","endLine":212,"endColumn":46},{"ruleId":"182","severity":1,"message":"202","line":272,"column":39,"nodeType":"184","messageId":"203","endLine":272,"endColumn":41},{"ruleId":"193","severity":1,"message":"197","line":273,"column":32,"nodeType":"195","messageId":"196","endLine":273,"endColumn":34},{"ruleId":"182","severity":1,"message":"202","line":309,"column":32,"nodeType":"184","messageId":"203","endLine":309,"endColumn":34},{"ruleId":"193","severity":1,"message":"197","line":310,"column":27,"nodeType":"195","messageId":"196","endLine":310,"endColumn":29},{"ruleId":"189","severity":1,"message":"190","line":312,"column":17,"nodeType":"191","messageId":"192","endLine":312,"endColumn":66},{"ruleId":"189","severity":1,"message":"190","line":313,"column":17,"nodeType":"191","messageId":"192","endLine":313,"endColumn":51},{"ruleId":"193","severity":1,"message":"197","line":316,"column":102,"nodeType":"195","messageId":"196","endLine":316,"endColumn":104},{"ruleId":"161","severity":1,"message":"168","line":2,"column":10,"nodeType":"163","messageId":"164","endLine":2,"endColumn":19},{"ruleId":"161","severity":1,"message":"169","line":2,"column":20,"nodeType":"163","messageId":"164","endLine":2,"endColumn":23},{"ruleId":"161","severity":1,"message":"170","line":2,"column":24,"nodeType":"163","messageId":"164","endLine":2,"endColumn":27},{"ruleId":"161","severity":1,"message":"171","line":2,"column":28,"nodeType":"163","messageId":"164","endLine":2,"endColumn":32},{"ruleId":"161","severity":1,"message":"172","line":2,"column":34,"nodeType":"163","messageId":"164","endLine":2,"endColumn":40},{"ruleId":"161","severity":1,"message":"173","line":5,"column":8,"nodeType":"163","messageId":"164","endLine":5,"endColumn":14},{"ruleId":"161","severity":1,"message":"175","line":10,"column":7,"nodeType":"163","messageId":"164","endLine":10,"endColumn":12},{"ruleId":"161","severity":1,"message":"166","line":19,"column":19,"nodeType":"163","messageId":"164","endLine":19,"endColumn":27},{"ruleId":"161","severity":1,"message":"167","line":19,"column":29,"nodeType":"163","messageId":"164","endLine":19,"endColumn":40},{"ruleId":"161","severity":1,"message":"204","line":22,"column":11,"nodeType":"163","messageId":"164","endLine":22,"endColumn":16},{"ruleId":"178","severity":1,"message":"179","line":35,"column":8,"nodeType":"180","endLine":35,"endColumn":10,"suggestions":"205"},{"ruleId":"206","severity":1,"message":"207","line":70,"column":1,"nodeType":"208","messageId":"196","endLine":83,"endColumn":2},{"ruleId":"206","severity":1,"message":"207","line":84,"column":1,"nodeType":"208","messageId":"196","endLine":97,"endColumn":2},{"ruleId":"206","severity":1,"message":"209","line":180,"column":21,"nodeType":"208","messageId":"196","endLine":188,"endColumn":26},{"ruleId":"206","severity":1,"message":"210","line":191,"column":25,"nodeType":"208","messageId":"196","endLine":200,"endColumn":30},{"ruleId":"206","severity":1,"message":"211","line":201,"column":25,"nodeType":"208","messageId":"196","endLine":211,"endColumn":34},{"ruleId":"206","severity":1,"message":"212","line":221,"column":37,"nodeType":"208","messageId":"196","endLine":228,"endColumn":42},{"ruleId":"206","severity":1,"message":"213","line":230,"column":25,"nodeType":"208","messageId":"196","endLine":244,"endColumn":34},{"ruleId":"206","severity":1,"message":"214","line":245,"column":33,"nodeType":"208","messageId":"196","endLine":256,"endColumn":34},{"ruleId":"206","severity":1,"message":"215","line":257,"column":33,"nodeType":"208","messageId":"196","endLine":267,"endColumn":34},{"ruleId":"206","severity":1,"message":"216","line":269,"column":33,"nodeType":"208","messageId":"196","endLine":279,"endColumn":38},{"ruleId":"161","severity":1,"message":"162","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":26},{"ruleId":"161","severity":1,"message":"217","line":1,"column":28,"nodeType":"163","messageId":"164","endLine":1,"endColumn":36},{"ruleId":"161","severity":1,"message":"218","line":11,"column":3,"nodeType":"163","messageId":"164","endLine":11,"endColumn":13},{"ruleId":"161","severity":1,"message":"166","line":17,"column":18,"nodeType":"163","messageId":"164","endLine":17,"endColumn":26},{"ruleId":"161","severity":1,"message":"168","line":2,"column":10,"nodeType":"163","messageId":"164","endLine":2,"endColumn":19},{"ruleId":"161","severity":1,"message":"169","line":2,"column":20,"nodeType":"163","messageId":"164","endLine":2,"endColumn":23},{"ruleId":"161","severity":1,"message":"170","line":2,"column":24,"nodeType":"163","messageId":"164","endLine":2,"endColumn":27},{"ruleId":"161","severity":1,"message":"171","line":2,"column":28,"nodeType":"163","messageId":"164","endLine":2,"endColumn":32},{"ruleId":"161","severity":1,"message":"172","line":2,"column":34,"nodeType":"163","messageId":"164","endLine":2,"endColumn":40},{"ruleId":"161","severity":1,"message":"173","line":5,"column":8,"nodeType":"163","messageId":"164","endLine":5,"endColumn":14},{"ruleId":"161","severity":1,"message":"219","line":6,"column":10,"nodeType":"163","messageId":"164","endLine":6,"endColumn":20},{"ruleId":"161","severity":1,"message":"174","line":9,"column":8,"nodeType":"163","messageId":"164","endLine":9,"endColumn":25},{"ruleId":"161","severity":1,"message":"175","line":10,"column":7,"nodeType":"163","messageId":"164","endLine":10,"endColumn":12},{"ruleId":"161","severity":1,"message":"165","line":19,"column":12,"nodeType":"163","messageId":"164","endLine":19,"endColumn":17},{"ruleId":"161","severity":1,"message":"176","line":25,"column":12,"nodeType":"163","messageId":"164","endLine":25,"endColumn":19},{"ruleId":"161","severity":1,"message":"177","line":25,"column":20,"nodeType":"163","messageId":"164","endLine":25,"endColumn":30},{"ruleId":"161","severity":1,"message":"220","line":26,"column":25,"nodeType":"163","messageId":"164","endLine":26,"endColumn":39},{"ruleId":"178","severity":1,"message":"221","line":54,"column":8,"nodeType":"180","endLine":54,"endColumn":10,"suggestions":"222"},"no-native-reassign",["223"],"no-negated-in-lhs",["224"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","'setToken' is assigned a value but never used.","'deleteToken' is assigned a value but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'Signin' is defined but never used.","'UpdateUserDetails' is defined but never used.","'axios' is assigned a value but never used.","'courses' is assigned a value but never used.","'setCourses' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["225"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'lessons' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'IdFromURL' and 'token'. Either include them or remove the dependency array.",["226"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'popup' is assigned a value but never used.",["227"],"no-dupe-class-members","Duplicate name 'getUserDetails'.","MethodDefinition","Duplicate name 'loginUser'.","Duplicate name 'registerUser'.","Duplicate name 'displayCourses'.","Duplicate name 'getCourses'.","Duplicate name 'getLessons'.","Duplicate name 'getNextLesson'.","Duplicate name 'getPreviousLesson'.","Duplicate name 'getCurrentCourse'.","'useState' is defined but never used.","'NavBtnLink' is defined but never used.","'useHistory' is defined but never used.","'setUserCourses' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'IdFromURL'. Either include it or remove the dependency array.",["228"],"no-global-assign","no-unsafe-negation",{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"229","fix":"233"},{"desc":"234","fix":"235"},"Update the dependencies array to be: [token]",{"range":"236","text":"237"},"Update the dependencies array to be: [IdFromURL, token]",{"range":"238","text":"239"},{"range":"240","text":"237"},"Update the dependencies array to be: [IdFromURL]",{"range":"241","text":"242"},[1683,1685],"[token]",[2494,2496],"[IdFromURL, token]",[1516,1518],[1765,1767],"[IdFromURL]"]