[{"C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\index.js":"1","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\App.js":"2","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\reportWebVitals.js":"3","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\Signin.js":"4","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\HomepageScreen.js":"5","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\ProfileScreen.js":"6","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\CoursesScreen.js":"7","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\CoursesMainScreen.js":"8","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\ProjectsScreen.js":"9","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\api-service.js":"10","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\components\\Navbar\\index.js":"11","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\components\\Popup.js":"12","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\components\\Navbar\\NavbarElements.js":"13","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\AboutusScreen.js":"14","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\TeachersScreen.js":"15","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\components\\UpdateUserDetails.js":"16","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\UserProfile.js":"17","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\UserRegistration.js":"18","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\CheckUserAssignments.js":"19","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\ClassReport.js":"20","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\ClassReportNew.js":"21","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\TeacherReport.js":"22"},{"size":953,"mtime":1636454510000,"results":"23","hashOfConfig":"24"},{"size":2235,"mtime":1651416413437,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1633425085070,"results":"26","hashOfConfig":"24"},{"size":5473,"mtime":1645455711218,"results":"27","hashOfConfig":"24"},{"size":240,"mtime":1636454510000,"results":"28","hashOfConfig":"24"},{"size":9980,"mtime":1644619832203,"results":"29","hashOfConfig":"24"},{"size":20892,"mtime":1648847932564,"results":"30","hashOfConfig":"24"},{"size":2465,"mtime":1640871680768,"results":"31","hashOfConfig":"24"},{"size":158,"mtime":1636454510000,"results":"32","hashOfConfig":"24"},{"size":38345,"mtime":1652182363427,"results":"33","hashOfConfig":"24"},{"size":1707,"mtime":1642800844769,"results":"34","hashOfConfig":"24"},{"size":2388,"mtime":1638458714563,"results":"35","hashOfConfig":"24"},{"size":1664,"mtime":1645981745314,"results":"36","hashOfConfig":"24"},{"size":248,"mtime":1639656124485,"results":"37","hashOfConfig":"24"},{"size":12482,"mtime":1652170222421,"results":"38","hashOfConfig":"24"},{"size":5436,"mtime":1640854434956,"results":"39","hashOfConfig":"24"},{"size":4854,"mtime":1651602909005,"results":"40","hashOfConfig":"24"},{"size":4329,"mtime":1645454933917,"results":"41","hashOfConfig":"24"},{"size":7235,"mtime":1647193785523,"results":"42","hashOfConfig":"24"},{"size":8048,"mtime":1648920005946,"results":"43","hashOfConfig":"24"},{"size":7910,"mtime":1649601008875,"results":"44","hashOfConfig":"24"},{"size":9677,"mtime":1652200103929,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"etbtul",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":45,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"48"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"48"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\index.js",[],["104","105"],"C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\App.js",["106","107","108","109"],"import './App.css';\nimport React, {useEffect} from 'react';\nimport Navbar from \"./components/Navbar\";\nimport HomepageScreen from './pages/HomepageScreen';\nimport CoursesScreen from './pages/CoursesScreen';\nimport ProjectsScreen from './pages/ProjectsScreen';\nimport ProfileScreen from './pages/ProfileScreen';\nimport CoursesMainScreen from './pages/CoursesMainScreen';\nimport TeachersScreen from './pages/TeachersScreen';\nimport AboutusScreen from './pages/AboutusScreen';\nimport UpdateUserDetails from './components/UpdateUserDetails';\nimport Signin from './pages/Signin'; \nimport UserProfile from './pages/UserProfile'; \nimport UserRegistration from './pages/UserRegistration'; \nimport CheckUserAssignments from './pages/CheckUserAssignments';\nimport ClassReport from './pages/ClassReport';\nimport ClassReportNew from './pages/ClassReportNew';\nimport TeacherReport from './pages/TeacherReport';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { useCookies } from 'react-cookie';\n\n\n\nfunction App() {\n  const [token, setToken, deleteToken] = useCookies(['mr-token']);\n\n\n  return (\n\n    <Router>\n     \n      <Navbar />\n      <Switch>\n        <Route path=\"/HomepageScreen\" exact component={HomepageScreen} />\n        <Route path=\"/CoursesScreen\" component={CoursesScreen} />\n        <Route path=\"/ProjectsScreen\" component={ProjectsScreen} />\n        <Route path=\"/ProfileScreen\" component={ProfileScreen} />\n        <Route path=\"/TeachersScreen\" component={TeachersScreen} />\n        <Route path=\"/AboutusScreen\" component={AboutusScreen} />\n        <Route path=\"/Signin\" component={Signin} />\n        <Route path=\"/CoursesMainScreen\" component={CoursesMainScreen} />\n        <Route path=\"/UpdateUserDetails\" component={UpdateUserDetails}/>\n        <Route path=\"/UserProfile\" component={UserProfile}/>\n        <Route path=\"/UserRegistration\" component={UserRegistration}/>\n        <Route path=\"/CheckUserAssignments\" component={CheckUserAssignments}/>\n        <Route path=\"/ClassReport\" component={ClassReport}/>\n        <Route path=\"/ClassReportNew\" component={ClassReportNew}/>\n        <Route path=\"/TeacherReport\" component={TeacherReport}/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\reportWebVitals.js",[],"C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\Signin.js",["110","111","112","113"],"import React, {useEffect, useState} from 'react';\r\nimport { API } from '../api-service';\r\nimport { useCookies } from 'react-cookie';\r\nimport validator from 'validator'\r\n\r\nfunction Signin(){\r\n    \r\n    const[username, setUsername ] = useState('');\r\n    const[password, setPassword ] = useState('');\r\n    const[firstName, setFirstName ] = useState('');\r\n    const[lastName, setLastaName ] = useState('');\r\n    const[errorMessage, setErrorMessage ] = useState('');\r\n    const[token, setToken] = useCookies(['mr-token']);\r\n    const[isLoginView, setIsLoginView ] = useState(true);\r\n    const[userRegistered, setUserRegistered ] = useState(false);\r\n \r\n    //const emailRegex = /^(([^<>()[]\\\\.,;:\\s@\\\"]+(\\.[^<>()[]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    useEffect( () =>{\r\n        console.log(token)\r\n         if(token['mr-token'] )  \r\n            if(token['mr-token'] === 'undefined' )\r\n            setErrorMessage('שם משתמש או סיסמא לא נכונים') \r\n            else\r\n                window.location.href ='/HomePageScreen'; \r\n      }, [token])\r\n\r\n    //   useEffect( () =>{\r\n    //     console.log(\"in use effect og registration\")\r\n    //     API.registerUserProfile(username)\r\n    //         .then( resp => console.log(resp))\r\n    //         //.then( resp => console.log(resp))                \r\n    //         .catch( error => console.log(error))\r\n    //     setUserRegistered(false);\r\n    //   }, [userRegistered])\r\n\r\n\r\n  \r\n\r\n    const loginClicked = () =>  {\r\n        console.log(username, password)\r\n        API.loginUser({username, password})\r\n            //.then( resp => console.log(resp.username))\r\n            .then( resp => setToken('mr-token', resp.token))\r\n            .catch( error => console.log(error))     \r\n    }\r\n    const registerClicked = () =>  {\r\n        // checke if all the values correct\r\n        if (!validator.isEmail(username))\r\n            setErrorMessage('שם משתמש לא חוקי');\r\n        else if (password==\"\")    \r\n            setErrorMessage('הכנס סיסמא');\r\n        else if (firstName==\"\")   \r\n            setErrorMessage('הכנס שם פרטי');\r\n        else if (lastName==\"\")  \r\n            setErrorMessage('הכנס שם משפחה');\r\n        else{\r\n            setErrorMessage('');\r\n            registerUser();\r\n            \r\n            // createUserProfile()\r\n            // API.registerUser({username, password})\r\n            //     .then( resp => console.log(resp))\r\n            //     //.then( await createUserProfile(username))\r\n            //     .catch( error => console.log(error))\r\n            // await createUserProfile(username)\r\n        }    \r\n    }\r\n    function sleep(time){\r\n        return new Promise((resolve)=>setTimeout(resolve,time)\r\n      )\r\n  }\r\n    const registerUser = () =>  {\r\n        API.registerUser({username, password})\r\n                .then( resp => console.log(resp))\r\n                .then(createUserProfile)\r\n                .then( setUserRegistered(true))\r\n                .catch( error => console.log(error))\r\n                //setUserRegistered(true)     \r\n    }\r\n    const createUserProfile =  () => {       \r\n        console.log(\"gfhfghghf\")\r\n        sleep(100).then(()=>{\r\n        API.registerUserProfile(username, firstName, lastName)\r\n            .then( resp => console.log(resp))                \r\n            .catch( error => console.log(error)) \r\n        })\r\n    }\r\n\r\n    return (\r\n          <div className=\"App\">\r\n             {isLoginView ?  <h1>!התחבר</h1> : <h1>!הירשם</h1>}\r\n             <p style={{color : \"red\"}}>{errorMessage}</p>\r\n             <label htmlFor=\"username\">Username</label><br/>\r\n             <input id=\"username\" type=\"text\" placeholder=\"username\" value={username}\r\n                     onChange={ evt=> setUsername(evt.target.value)}   \r\n              /><br/>\r\n             <label htmlFor=\"password\">Password</label><br/>\r\n              <input id=\"password\" type=\"password\" placeholder=\"password\" value={password}\r\n                     onChange={ evt=> setPassword(evt.target.value)}/><br/>\r\n\r\n            {isLoginView ? \" \": <label htmlFor=\"firstName\">שם פרטי</label>}\r\n            {isLoginView ? \" \":<br/>}\r\n            {isLoginView ? \" \": <input id=\"firstName\" type=\"text\" placeholder=\" \" value={firstName}\r\n                     onChange={ evt=> setFirstName(evt.target.value)}   \r\n              />}\r\n              {isLoginView ? \" \": <br/>}\r\n              {isLoginView ? \" \":<label htmlFor=\"lastName\">שם משפחה</label>}\r\n              {isLoginView ? \" \":<br/>}\r\n              {isLoginView ? \" \":<input id=\"lastName\" type=\"text\" placeholder=\" \" value={lastName}\r\n                     onChange={ evt=> setLastaName(evt.target.value)}/>}\r\n                   {isLoginView ? \" \":  <br/>}  \r\n    \r\n             {isLoginView ?  \r\n                <button onClick={loginClicked}>התחבר</button>:\r\n                \r\n                <button onClick={registerClicked}>הירשם</button>}\r\n                {isLoginView ? \r\n                  <p onClick={() => setIsLoginView(false)}> אם אינך רשום לאתר - הירשם כאן</p>: \r\n                  <p onClick={() => setIsLoginView(true)}>  אם הינך רשום לאתר - התחבר כאן</p>\r\n                }\r\n{/* <button onClick={() => createUserProfile(username)}>לחץ כאן</button> */}\r\n            </div>\r\n    \r\n      )\r\n\r\n}\r\nexport default Signin;\r\n\r\n","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\HomepageScreen.js",[],"C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\ProfileScreen.js",["114","115","116","117","118","119","120","121","122","123","124","125","126","127"],"import React, {useEffect, useState} from 'react';\r\nimport { Container,Row,Col,Form ,Button} from 'react-bootstrap';\r\nimport { useCookies } from 'react-cookie';\r\nimport { API } from '../api-service';\r\nimport Signin from '../pages/Signin'; \r\nimport { useHistory } from \"react-router-dom\";\r\nimport Popup from '../components/Popup';\r\nimport '../index.css';\r\nimport UpdateUserDetails from '../components/UpdateUserDetails'\r\nconst axios = require('axios');\r\n\r\n\r\nconst ProfileScreen = () => {\r\n    const history = useHistory();\r\n    const handleRoute = () =>{ \r\n        history.push(\"/UpdateUserDetails\");\r\n      }\r\n    const [token] = useCookies(['mr-token']);\r\n\r\n    const [user,setUser] = useState([]);\r\n    const [courses,setCourses] = useState([]);\r\n    const [userCourses, setUserCourses] = useState([]);\r\n    const [updateDetailsPopup, setUpdateDetailsPopup] = useState(false);\r\n    const[newFirstname, setNewFirstName ] = useState();\r\n    const[newLastName, setNewLastName ] = useState();\r\n    const[newAboutMe, setNewAboutMe ] = useState();\r\n    const[newHobbies, setNewHobbies ] = useState();\r\n    const[newMyGoal, setNewMyGoal ] = useState();\r\n\r\n    //   test\r\n    const [studentsInClass, setsStudentsInClass] = useState([]);\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        if(!token['mr-token']) window.location.href = '/Signin';\r\n        //var username = Signin.username\r\n        //console.log(\"username is:\",username)\r\n        API.getUserDetails(token['mr-token'])\r\n            //.then(resp => console.log(\"resp is:\", resp.results))\r\n         .then(resp => setUser(resp.results))\r\n         .then(resp => console.log(resp.results))\r\n        //  .then(setDetails())  \r\n         .catch( error => console.log(error)) \r\n        API.getAllUserCourses(token['mr-token'])\r\n            .then(resp => getCourseName(resp.results)) \r\n            //.then(resp => console.log(\"resp is:\", resp.results))\r\n            // .then(resp => setCourses(resp.results))  \r\n            .catch( error => console.log(error))\r\n      \r\n        \r\n\r\n    //         /////todo - add int value\r\n    //         API.getClassStudentsByID(2)\r\n    //         .then(resp => setsStudentsInClass(resp.results)) \r\n    //         .catch( error => console.log(error))\r\n    }, [])\r\n\r\n    const getCourseName = (courses) =>{\r\n        console.log(\"in fun\",courses)\r\n        courses.map(course => { \r\n            API.getCourses(course.course) \r\n                 .then(resp => setUserCourses((userCourses) => [...userCourses, resp]))\r\n     })     \r\n    }\r\n    const setDetails= () =>  {\r\n      console.log(\"inside setDetails\", user)  \r\n      console.log(\"time passed: \", user)\r\n      setNewFirstName(user.firstName)\r\n      setNewLastName(user.lastName)\r\n      setNewAboutMe(user.aboutMe)\r\n      setNewHobbies(user.hobbies)\r\n      setNewMyGoal(user.myGoal)\r\n    \r\n      }\r\n\r\n    const updateDetails= () =>  {\r\n      setDetails()\r\n      setUpdateDetailsPopup(true)\r\n      }\r\n\r\n      const updateNewDetails= () =>  {      \r\n         API.updateUserDetails(token['mr-token'], newFirstname, newLastName, newAboutMe, newHobbies, newMyGoal)\r\n         setUpdateDetailsPopup(false)\r\n         sleep(100).then(()=>{\r\n          API.getUserDetails(token['mr-token'])     \r\n            .then(resp => setUser(resp.results))\r\n            .then(resp => console.log(resp.results)) \r\n            .catch(error => console.log(error)) \r\n           })\r\n        }\r\n\r\n      function sleep(time){\r\n        return new Promise((resolve)=>setTimeout(resolve,time)\r\n      )\r\n  }\r\n    return(\r\n        <div className=\"App\">\r\n        <header className=\"Header\"> הדף של {user.firstName}  {user.lastName}</header>\r\n        <div className=\"profile\">\r\n          \r\n      \r\n            <div>\r\n        <h4>שם משתמש:</h4>\r\n         <p>{user.username}</p>\r\n\r\n         {/* test */}\r\n         {/* {console.log(\"user class is: \",user.studentClasses && user.studentClasses[0].className)}\r\n         {console.log(\"the students in class number 2 are: \",studentsInClass)} */}\r\n        \r\n         <br/>\r\n\r\n         <h4>שם פרטי: </h4>\r\n         <p>{user.firstName}</p>\r\n         <br/>\r\n\r\n       <h4>שם משפחה:</h4>\r\n       <p>{user.lastName}</p>\r\n      \r\n       </div>\r\n        <div>\r\n        {/* <h4>דואר אלקטרוני:</h4>\r\n       <p>{user.email}</p> */}\r\n         \r\n       <h4>קצת עליי..</h4>\r\n       <p>{user.aboutMe}</p>\r\n       \r\n       <h4>הקורסים שלי:</h4>\r\n\r\n        { userCourses.map(course => { \r\n                return <p>           \r\n                  <p>\r\n                  {course.name} </p>                             \r\n            </p> \r\n               \r\n          })}\r\n   <h4>הכיתות שלי:</h4>\r\n{ user.studentClasses && user.studentClasses.map(userClass => { \r\n                return <p>              \r\n                  <p>\r\n                  {userClass.className} </p>                             \r\n             </p>                \r\n          })}\r\n      \r\n\r\n\r\n\r\n      \r\n       </div>\r\n       <div>\r\n       <h4>תחביבים:</h4>\r\n       <p>{user.hobbies}</p>\r\n      \r\n       <br/>\r\n       <h4>הבאדג'ים שלך:</h4>\r\n         <p>{user.badges}</p>\r\n        \r\n         <br/>\r\n         <h4>המטרה שלי:</h4>\r\n         <p>{user.myGoal}</p>\r\n         \r\n       </div>\r\n       </div>\r\n        <button onClick={handleRoute}>עדכון פרטים</button>\r\n        <button onClick={updateDetails}> עדכון פרטים חדש</button>\r\n\r\n        <Popup trigger={updateDetailsPopup} setTrigger={setUpdateDetailsPopup}>\r\n  <h4>עדכון פרטים</h4>\r\n  {/* <input type = \"text\" onChange={e => setUserToSearch(e.target.value) + setAddedSuccesfullyMessage('')}></input> */}\r\n{console.log(\"in popup \", user)}\r\n\r\n  <input type = \"text\" value={newFirstname} \r\n  onChange={e => setNewFirstName(e.target.value)}></input>\r\n  <h7> שם פרטי</h7><br/>\r\n  <input type = \"text\" value={newLastName} \r\n  onChange={e => setNewLastName(e.target.value)}></input>\r\n   <h7> שם משפחה</h7><br/>\r\n    <input type = \"text\" value={newAboutMe} \r\n  onChange={e => setNewAboutMe(e.target.value)}></input>\r\n  <h7> קצת עלי</h7><br/>\r\n    <input type = \"text\" value={newHobbies} \r\n  onChange={e => setNewHobbies(e.target.value)}></input>\r\n  <h7> תחביבים</h7><br/>\r\n    <input type = \"text\" value={newMyGoal} \r\n  onChange={e => setNewMyGoal(e.target.value)}></input>\r\n <h7> המטרה שלי</h7><br/>\r\n    <button onClick={updateNewDetails}>עדכן פרטים</button>\r\n    {/* {console.log(\"users are: \",userToAdd.id)}\r\n    <h5>{userToAdd!=\"null\"?  userToAdd.username: \" לא נמצא שם משתמש\"}</h5>\r\n    {<button  style={{display : userToAdd!=\"null\"  ? \"none\": \"\"}} onClick={() => goToSignIn(userToSearch)}>רשום משתמש</button>}\r\n    <p>{userToAdd && userToAdd.firstName}</p>\r\n    <p>{userToAdd && userToAdd.lastName}</p>\r\n    {<button  style={{display : userToAdd.id  ? \"\": \"none\"}} onClick={() => addUser(userToAdd.username)}>הוסף</button>}\r\n    <p>{addedSuccesfullyMessage}</p>     */}\r\n\r\n</Popup> \r\n\r\n        </div>\r\n    )    \r\n}\r\n        \r\n\r\n\r\n\r\n//         <div className=\"App\">\r\n//         <header className=\"Header\">דף פרופייל</header>\r\n//         <div className=\"profile\">\r\n//          {user.username}: שם משתמש \r\n//         </div>\r\n//         <div>\r\n//        :שם פרטי \r\n//         </div>\r\n//         <div>\r\n//         : שם משפחה\r\n//         </div>\r\n//         <div>\r\n//         : דואר אלקטרוני \r\n//         </div>\r\n//         <div>\r\n//        : גיל\r\n//         </div>\r\n//         <div>\r\n//        : תחביבים\r\n//         </div>\r\n//         <button onClick={UpdateUserDetails}>עדכון פרטים</button>\r\n//         </div>\r\n//     )\r\n// }\r\n /*\r\nclass ProfileScreen extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            user_id:this.props.user_id,\r\n            username:this.props.username,\r\n            email:this.props.email,\r\n            profileImage:this.props.profileImage,\r\n            msg:this.props.msg,\r\n            uploadedFile:null\r\n        }\r\n    }\r\n    fetchUserDetails=(user_id)=>{\r\n        //console.log(user_id);\r\n        axios.get(\"http://127.0.0.1:8000/main/users/\"+user_id,{\r\n            headers: {\r\n                \"content-type\": \"application/json\"\r\n              } \r\n        }).then(res=>{\r\n            console.log(res);\r\n            this.setState({email:res.data.results[0].email});\r\n            this.setState({profileImage:res.data.results[0].profileImage})\r\n        })\r\n        .catch(err=>console.log(err))\r\n    }\r\n    render(){\r\n        return (\r\n            <Container>\r\n            <Row>\r\n           \r\n            <Col>\r\n                <h1>User Profile</h1>\r\n                <Form className=\"form\">     \r\n        <p>{this.state.msg}</p>\r\n      <Form.Group controlId=\"formCategory1\">\r\n        <Form.Label>Username:</Form.Label>\r\n        <Form.Control type=\"text\" defaultValue={this.state.username}/>     \r\n      </Form.Group>\r\n      <Form.Group controlId=\"formCategory2\">\r\n        <Form.Label>Email:</Form.Label>\r\n        <Form.Control type=\"email\" defaultValue={this.state.email} />     \r\n      </Form.Group>\r\n      <Form.Group controlId=\"formCategory3\">\r\n        <Form.Label>First Name:</Form.Label>\r\n        <Form.Control type=\"text\" name=\"firstname\" onChange={this.changefirstname}/>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formCategory4\">\r\n        <Form.Label>Last Name:</Form.Label>\r\n        <Form.Control type=\"text\" name=\"lastname\" onChange={this.changelastname}/>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formCategory5\">\r\n        <Form.Label>Skills:</Form.Label>\r\n        <Form.Control type=\"text\" name=\"skills\" onChange={this.changeskills}/>\r\n        </Form.Group>\r\n      <Button variant=\"primary\" onClick={this.UpdateProfileHandler}>Update Profile</Button>\r\n      </Form>\r\n       </Col>\r\n    \r\n           </Row>\r\n            </Container>\r\n        )\r\n    }\r\n    \r\n}\r\n*/\r\nexport default ProfileScreen;","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\CoursesScreen.js",["128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172"],"import React, {useEffect, useState} from 'react';\r\nimport ReactPlayer from 'react-player';\r\nimport '../Courses.css';\r\nimport { API } from '../api-service';\r\n//import {token} from '/Signin'; \r\n// import ReactDom from 'react-dom';\r\n//import Popup from 'react-popup';\r\nimport Popup from '../components/Popup';\r\nimport { useCookies } from 'react-cookie';\r\nimport Signin from '../pages/Signin'; \r\n\r\n\r\n\r\nconst CoursesScreen = () => {\r\n  const [token] = useCookies(['mr-token']);\r\n  console.log(\"token is: \", token['mr-token'])\r\n  \r\n  \r\nconst search = window.location.search; // returns the URL query String\r\nconst params = new URLSearchParams(search); \r\nconst IdFromURL = params.get('id');\r\nconst linkFromURL = params.get('link');\r\n// const courseFromUrl = params.get('course');   \r\nconsole.log(\"now\"); \r\nconsole.log(IdFromURL);\r\nconsole.log(linkFromURL);\r\n\r\n\r\nconst [courses, setCourses] = useState([]);\r\nconst [userLessons, setUserLessons] = useState([]);\r\nconst [lessons, setLessons] = useState([]);\r\nconst [lessonNumber, setLessonsNumber] = useState([1]);\r\nconst [currentLesson, setCurrentLesson] = useState([]);\r\n//the url from youtube for every lesson. changed when the user choose another lesson. the default is for the first lesson. \r\nconst[url, setUrl ] = useState(linkFromURL);  \r\nconst[buttonPopup, setButtonPopup ] = useState(false); \r\nconst[notePopup, setNotePopup ] = useState(false);\r\nconst[notes, setNotes ] = useState();\r\nconst[answer, setAnswer ] = useState();\r\nconst[link, setLink ] = useState();\r\nconst[userLastLesson, setUserLastLesson ] = useState(1);\r\nconst lessonsList =[];\r\nvar numOfLessons = 0;\r\nconst [file, setFile] = React.useState();\r\nconst[newImage, setNewImage] = useState(false); \r\nvar linkRegex = '(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})'\r\nvar imageRegex = '(/\\.(gif|jpe?g|tiff?|png|webp|bmp)$/i)' \r\n//const [playing, setPlaying] = useState()\r\n\r\n\r\n\r\n\r\n//const displayCourses = () =>  {\r\n  useEffect(() =>{\r\n  var username = Signin.username\r\n  console.log(\"username is:\",username)\r\n  setLessonsNumber(1) \r\n  API.displayCourses()\r\n      .then( resp => setCourses(resp))\r\n      //.then( resp => setCurrentLesson(resp[0].lessons[0]))\r\n      .catch( error => console.log(error)) \r\n  API.getLessons()\r\n      .then( resp => setLessons(resp))\r\n      .catch( error => console.log(error)) \r\n  API.getUserLessons()\r\n    .then( resp => setUserLessons(resp))\r\n    .catch( error => console.log(error)) \r\n  API.getUserLastLesson(token['mr-token'],IdFromURL)\r\n    .then( resp => setUserLastLesson(resp.results[0].numOfLesson))\r\n    .catch( error => console.log(error))\r\n\r\n}, [])\r\n\r\n\r\nfunction handleUpload(event) {\r\n  setFile(event.target.files[0]);\r\n  setNewImage(true)\r\n\r\n  // Add code here to upload file to server\r\n  // ...\r\n}\r\n//code from internet\r\n// var binaryData = [];\r\n// binaryData.push(data);\r\n// window.URL.createObjectURL(new Blob(binaryData, {type: \"application/zip\"}))\r\n\r\n//real code!!!!!\r\n// const ImageThumb = ({ image }) => {\r\n//   return <img src={image && URL.createObjectURL(image)}  width='100'\r\n//   height='100' alt={image.name} />;\r\n  \r\n// };\r\n//try\r\nconst ImageThumb = ({ image }) => {\r\n  var binaryData = [];\r\n  binaryData.push(image);\r\n  console.log(\"need to check the image: \", image)\r\n  return <img src={image && URL.createObjectURL(new Blob(binaryData))} width='100'\r\n  height='100' alt={image.name} />;\r\n  \r\n};\r\n//console.log(parseJwt('eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c'))\r\n// const setFirstUrl= () =>  {\r\n//   console.log(\"courses[0]\")\r\n//   console.log(courses[0])\r\n//   //setUrl(courses[0].lessons[0].link)  .lessons[0].link\r\n// }\r\n// useEffect(() =>{ \r\n//   console.log(\"please work: \")\r\n//   console.log(courses[0].lessons[0].link)  \r\n// }, [courses.length > 1])\r\n\r\n// const getFirstLesson = (courses) =>{\r\n//   console.log(\"in first lesson\")\r\n//   var firstLesson = courses[0].lessons[0]\r\n//   console.log(\"the first lesson is: \",firstLesson)\r\n// }\r\n\r\nconst displayLessons = (lesson) =>{\r\n  if(lesson.numOfLesson<=userLastLesson){\r\n    console.log(\"in display lesson: \")\r\n    console.log(\"last lesson is: \",userLastLesson)\r\n    console.log(lesson)\r\n    //console.log(parseJwt(token['mr-token']))\r\n    console.log(userLessons)\r\n    //console.log(token.User)\r\n    //console.log(token['mr-token'].User)\r\n    setUrl(lesson.link)\r\n    console.log(\"lesson number is: \", lessonNumber)\r\n    console.log(\"lesson id is: \",lesson.id)\r\n    setLessonsNumber(lesson.numOfLesson)\r\n    //works for python course -> setLessonsNumber(lesson.id === 1? 1:lesson.id-1)\r\n    setCurrentLesson(lesson)\r\n    console.log(\"after: lesson number is: \", lessonNumber)\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nconst playNextLesson= () =>  {\r\n  console.log(\"in next lesoon fun. next lesson number is: \", lessonNumber+1);\r\n  console.log(\"lesson number is: \", lessonNumber);\r\n  console.log(lessonsList)\r\n  // console.log(\"courses[0]\")\r\n  // console.log(courses[0].lessons[0])\r\n//   var len = 2;\r\n//  lessonsList.map(id => {return len=len+1} )\r\n\r\n  console.log(\"lesson list.length is:\", lessonsList[0].length);\r\n {lessonsList[0]  ?  lessonNumber ===  lessonsList[0].length  ?console.log(\"1\") :console.log(\"2\") :console.log(\"3\") }\r\n  //if there is ann assignmnent for these lesson - display it on a popup message. if there is no assignment - proceed to next lesson\r\n    // if (currentLesson.assignment != \"null\"){\r\n    // {lessonsList.map(lesson =>{\r\n      // var first = lessonsList[0].name;\r\n      // console.log(first);\r\n      // console.log(\"first\");\r\n      //if there is an assignment for this lesson\r\n    if(lessonsList[0][lessonNumber-1].assignment !=\"null\"){\r\n      console.log(\"need to be here\");\r\n      console.log(currentLesson.assignment);\r\n      console.log(\"lesson number is: \", lessonNumber);\r\n      setAnswer('')\r\n      setLink('')\r\n     // setFile('')\r\n\r\n      if(currentLesson.id){\r\n        API.getUserAnswer(token['mr-token'], currentLesson.id)\r\n        .then( resp => setLessonDetails(resp.results[0]))\r\n        //.then( resp => console.log(\"look here!!!\", resp.results[0]))\r\n        \r\n         //.then( resp => setAnswer(resp.results[0].answer))\r\n        // .then( resp => setLink(resp.results[0].link))\r\n        // .then( resp => setFile(resp.results[0].image))\r\n        .catch( error => console.log(error))\r\n      }\r\n      else{\r\n        console.log(\"im in else\")\r\n        API.getUserAnswer(token['mr-token'], params.get('firstLessonId'))\r\n        //.then( resp => console.log(\"look here!!!\", resp.results[0]))\r\n         .then( resp => setLessonDetails(resp.results[0]))\r\n        //  .then( resp => setLink(resp.results[0].link))\r\n        //  .then( resp => setFile(resp.results[0].image))\r\n        .catch( error => console.log(error))\r\n      }\r\n       \r\n      setButtonPopup(true);\r\n  }\r\n  else{\r\n    if(userLastLesson==lessonNumber){\r\n      API.updateUserCourse(token['mr-token'], userLastLesson+1, IdFromURL)\r\n      setUserLastLesson(userLastLesson+1)\r\n      }\r\n    {lessonsList.map(lesson => {\r\n      {console.log(\"inside next lesson\")}\r\n      {console.log(lesson[lessonNumber])}\r\n      return setUrl(lesson[lessonNumber].link), setCurrentLesson(lesson[lessonNumber])\r\n      \r\n      // console.log(lesson[4].link);\r\n    })}\r\n    setLessonsNumber(lessonNumber+1)\r\n    \r\n  // console.log(lessonsList[3]);\r\n // console.log(lessonsList[4].url);\r\n  //setLessonsNumber(lessonNumber+1)\r\n  \r\n  }\r\n}\r\nfunction sleep(time){\r\n  return new Promise((resolve)=>setTimeout(resolve,time)\r\n)\r\n}\r\n\r\nconst setLessonDetails = (results) =>{\r\n  console.log(\"inside setlessonDetails. file is: \" , results.image)\r\n  setAnswer(results.answer)\r\n  setLink(results.link)\r\n  setFile(results.image)\r\n  setNewImage(false)\r\n  // sleep(1000).then(()=>{\r\n  //   <ImageThumb image={file} />\r\n  // })\r\n}\r\n\r\n\r\nconst playPreviousLesson= () =>  {\r\n  console.log(\"in previous. next lesson number is:\", lessonNumber-1);\r\n  console.log(\"lesson number is: \", lessonNumber);\r\n  {lessonsList.map(lesson => {\r\n    return setUrl(lesson[lessonNumber-2].link), setCurrentLesson(lesson[lessonNumber-2])\r\n    // console.log(lesson[4].link);\r\n  })}\r\n  setLessonsNumber(lessonNumber-1)\r\n  \r\n  // console.log(lessonNumber)\r\n  // API.getPreviousLesson(lessonNumber-1)\r\n  //     .then( resp => setCurrentLesson(resp))\r\n  //     .then(console.log(currentLesson))\r\n  //     .catch( error => console.log(error)) \r\n  // setUrl(currentLesson.link)\r\n  // setLessonsNumber(currentLesson.id)  \r\n}\r\n//proceed to the next lesson of the course after the popup message\r\nconst proceedToNextLesson= () =>  {\r\nif(currentLesson.answerType == \"1\") //type text\r\n//validate that the text is not empty\r\nif(answer==\"\"){\r\n  alert(\"הטקסט ריק\")\r\n  return \r\n}\r\nif(currentLesson.answerType == \"2\") // type link\r\n//validate that the link is correct\r\nif(!link.match(linkRegex))\r\n{\r\n  alert(\"הלינק לא נכון\")\r\n  return \r\n}\r\nif(currentLesson.answerType == \"3\")// type img\r\n// validate that the image is correct\r\nif(file&& (!(/\\.(gif|jpe?g|tiff?|png|webp|bmp)$/i).test(file.name)))\r\n{\r\n  alert(\"אין קובץ תמונה תקין\")\r\n  return \r\n}\r\n\r\n  if(userLastLesson==lessonNumber){\r\n    API.updateUserCourse(token['mr-token'], userLastLesson+1, IdFromURL)\r\n    setUserLastLesson(userLastLesson+1)\r\n    }\r\n  console.log(\" inside fun proceed\");\r\n  console.log(file);\r\n  // try\r\n  const uploadData = new FormData()\r\n  uploadData.append('answer', answer);\r\n  uploadData.append('link', link);\r\n  uploadData.append('image', file);\r\n  if(currentLesson.id){\r\n    console.log(\"look here!!! \", currentLesson.id)\r\n    API.updateUserAnswer(token['mr-token'], uploadData, currentLesson.id)}\r\n  // if(currentLesson.id)\r\n  //   API.updateUserAnswer(token['mr-token'], answer, link, file, currentLesson.id)\r\n  else\r\n    API.updateUserAnswer(token['mr-token'], answer, link, file, params.get('firstLessonId'))\r\n  {lessonsList.map(lesson => {\r\n    return setUrl(lesson[lessonNumber].link), setCurrentLesson(lesson[lessonNumber])\r\n  })}\r\n  setLessonsNumber(lessonNumber+1)\r\n  setButtonPopup(false)\r\n}\r\n//link is not correct\r\n// else{\r\n// alert(\"הלינק לא נכון\")\r\n// }\r\n// }\r\n// console.log(\"lessonNumber+2\")\r\n// API.getNextLesson(lessonNumber+1)\r\n//     .then( resp => setCurrentLesson(resp))\r\n//     .then(console.log(currentLesson))\r\n//     .catch( error => console.log(error)) \r\n//     console.log(\"the current lesson is:\")\r\n//     console.log(currentLesson.name)\r\n// setUrl(currentLesson.link)\r\n// setLessonsNumber(currentLesson.id)\r\n// \r\nconst openNotes= () =>  {\r\n  //{setPlaying(false)}\r\n  console.log(\" inside openNotes\");\r\n  setNotes('')\r\n  console.log(\"lesson is:\",currentLesson.id)\r\n  console.log(\"maybe that: \",  params.get('firstLessonId'))\r\n  if(currentLesson.id){\r\n    API.getUserNotes(token['mr-token'],currentLesson.id)\r\n      .then( resp => setNotes(resp.results[0].notes))\r\n      .catch( error => console.log(error))\r\n  }\r\n  else{\r\n    console.log(\"im in else\")\r\n    API.getUserNotes(token['mr-token'],params.get('firstLessonId'))\r\n      .then( resp => setNotes(resp.results[0].notes))\r\n      .catch( error => console.log(error))\r\n  }\r\n  setNotePopup(true)\r\n}\r\nconst saveNotes= () =>  { \r\nconsole.log(\"look here::: \", notes)\r\nconst uploadNote = new FormData()\r\nuploadNote.append('notes', notes);\r\nif(currentLesson.id)\r\n  API.updateUserNotes(token['mr-token'], uploadNote, currentLesson.id)\r\nelse\r\n  API.updateUserNotes(token['mr-token'], uploadNote, params.get('firstLessonId'))\r\n setNotePopup(false)\r\n}\r\n// if(currentLesson.id)\r\n//   API.updateUserNotes(token['mr-token'], notes, currentLesson.id)\r\n// else\r\n//   API.updateUserNotes(token['mr-token'], notes, params.get('firstLessonId'))\r\n//  setNotePopup(false)\r\n// }\r\n// const ref = player => {\r\n//   player = player\r\n// }\r\n\r\n  return ( \r\n\r\n  \r\n    <div className=\"App\">\r\n      <header className=\"Header\">\r\n      \r\n     \r\n      {/* <h1>{currentLesson.assignment}</h1> */}\r\n        {/* {courses.map(lesson => {\r\n             if(lesson.id == IdFromURL) \r\n                 return <h2>{lesson.name}}</h2>} */}\r\n\r\n\r\n                 { courses.map(lesson => { \r\n                  if(lesson.id == IdFromURL) \r\n                      return <h1>{lesson.name}</h1>\r\n                    //  return <h1>{currentLesson.id}</h1>\r\n                     \r\n               })}\r\n\r\n\r\n      </header> \r\n      <button onClick={openNotes}>הערות</button>\r\n      <div className=\"lessons\">\r\n      <div>\r\n        {/* //working */}\r\n      {/* {  courses.map( course => {\r\n            return <button onClick={() => test(course)}>{course.name}</button>\r\n          })}  */}\r\n      {/* {  courses.map( course => {\r\n            return <h2>{course.name}</h2>\r\n          })}  */}\r\n      {/* { courses.map(lesson => {\r\n            return <h2>{lesson.lessons.map((name) => \r\n              <li >{name.name} </li>\r\n              //<button onClick={displayLessons(name.name)}>{name.name} </button>\r\n            )}</h2>\r\n        })} */}\r\n      </div>\r\n      <div>\r\n      {/* { courses.map( lesson => {         &nbsp;&nbsp;&nbsp;\r\n          lesson.lessons.map(nam =>{\r\n            return <h2>{nam.name}</h2>\r\n        })\r\n          })} */}\r\n        </div>\r\n       \r\n        <div>\r\n\r\n           {/*  display the lessons for the chosen course */ }\r\n          { courses.map(lesson => { \r\n             if(lesson.id == IdFromURL){\r\n                numOfLessons=lesson.lessons.length;\r\n                {console.log(\"num of lesson is: \",numOfLessons )}\r\n                {lessonsList.push(lesson.lessons)}\r\n                // {setsSelectedCourse(lesson)}\r\n                return <h2>{lesson.lessons.map((name) =>\r\n                  <ul class={name.numOfLesson>userLastLesson? \"coursesListBlocked\" :name.numOfLesson == currentLesson.numOfLesson ? \"currentList\": \"lessonsList\"}>\r\n                  <li onClick={() => displayLessons(name)}>\r\n                  {name.numOfLesson>userLastLesson?   name.name + \" (נעול)\":name.name } </li> </ul>\r\n                // <ul class={name.numOfLesson == currentLesson.numOfLesson ? \"currentList\": \"lessonsList\"}> <li onClick={() =>  displayLessons(name)}>{  name.numOfLesson>userLastLesson? name.name + \" (נעול)\"}b:name.name } </li> </ul>\r\n             //}\r\n             )}</h2> \r\n                } \r\n          })}\r\n        \r\n</div>\r\n              \r\n\r\n        <div>\r\n\r\n          <ReactPlayer trigger={url} controls url={url} width='70%'\r\n          height='220%'/><br/>\r\n          {console.log(\"lessonsList\")}\r\n          {console.log(lessonsList)}\r\n          {/* {numOfLessons = lessonsList.length > 0 ? lessonsList[0].length: '0'} */}\r\n          {/* <div className=\"prevAndNext\"> */}\r\n            {/* <button className=\"prevAndNext\" onClick={playNextLesson} >השיעור הבא</button> */}\r\n            {/*lessonsList[0] &&    lessonsList[0].length*/}\r\n            \r\n              \r\n           \r\n            {/* <button className=\"prevAndNext\" style={{display : lessonNumber ===  lessonsList[0].length  ? \"\": \"none\"}}  onClick={playNextLesson} >השיעור הבא</button>  */}\r\n            <button className=\"prevAndNext\" style={{display : lessonNumber ===  numOfLessons  ? \"none\": \"\"}}  onClick={playNextLesson} >השיעור הבא</button> \r\n            {/* <button className=\"prevAndNext\" style={{display : lessonsList[0]!=null  &&  lessonNumber ===  lessonsList[0].length  ? \"none\": \"\"}}  onClick={playNextLesson} >השיעור הבא</button>  */}\r\n            <button className=\"prevAndNext\" style={{display : lessonNumber ===  1  ? \"none\": \"\"}} onClick={playPreviousLesson}>השיעור הקודם</button><br/>\r\n     \r\n        </div>\r\n\r\n          {/* display as buttons all the lessons of the selected course  */}\r\n        {/* { courses.map(lesson => {\r\n            return <h2>{lesson.lessons.map((name) => \r\n             <ul class=\"lessonsList\"> <li onClick={() => displayLessons(name)}>{name.name} </li> </ul>\r\n              //<button onClick={displayLessons(name.name)}>{name.name} </button>\r\n            )}</h2>\r\n        })} */}\r\n        \r\n\r\n\r\n           {/* <button onClick={() => setUrl('https://youtu.be/i9-HWYsrh_k')} >שיעור 1</button><br/>\r\n           <button onClick={() => setUrl('https://youtu.be/OWuRhPUP31s')}>שיעור 2</button><br/>\r\n           <button onClick={() => setUrl('https://youtu.be/Ew_JiqX1EO0')} >שיעור 3</button><br/>\r\n           <button onClick={() => setUrl('https://youtu.be/6XI_0ORZsao')}>שיעור 4</button><br/>\r\n           <button onClick={() => setUrl('https://youtu.be/iDu4PuKNXpc')} >שיעור 5</button><br/>\r\n           <button onClick={() => setUrl('https://youtu.be/VIAgn7_zPvU')}>שיעור 6</button><br/>\r\n           <button onClick={() => setUrl('https://youtu.be/yPdMrpmLZ1o')} >שיעור 7</button><br/>\r\n           <button onClick={() => setUrl('https://youtu.be/2SYkSp8bHkQ')}>שיעור 8</button><br/>\r\n           <button onClick={() => setUrl('https://youtu.be/djYyAngqOHA')} >שיעור 9</button><br/>\r\n           <button onClick={() => setUrl('https://youtu.be/F6OD_OCSDrQ')}>שיעור 10</button><br/>\r\n           <button onClick={() => setUrl('https://youtu.be/hsdPUQ94TFQ')} >שיעור 11</button><br/>\r\n           <button onClick={() => setUrl('https://youtu.be/iIFS059A1oM')}>שיעור 12</button><br/>\r\n           <button onClick={() => setUrl('https://youtu.be/HD2s_BTtVBo')} >שיעור 13</button><br/>\r\n           <button onClick={() => setUrl('https://youtu.be/zACdpNyH3_M')}>שיעור 14</button><br/>\r\n           <button onClick={() => setUrl('https://youtu.be/Xn9_B_oQcC4')} >שיעור 15</button><br/>\r\n           <button onClick={() => setUrl('https://youtu.be/K2eQyBepFoQ')}>שיעור 16</button><br/>\r\n           <button onClick={() => setUrl('https://youtu.be/GSQEc4BxrhE')}>שיעור 17</button><br/>\r\n           <button onClick={() => setUrl('https://youtu.be/uzZFDPQ_jyI')} >שיעור 18</button><br/>\r\n           <button onClick={() => setUrl('https://youtu.be/Q-vWAl6AdsE')}>שיעור 19</button><br/>\r\n           <button onClick={() => setUrl('https://youtu.be/z5zA9wMjwmQ')} >שיעור 20</button><br/>\r\n           <button onClick={() => setUrl('https://youtu.be/HfyV9IzyaJQ')}>שיעור 21</button><br/> */}\r\n        \r\n        {/* <div>\r\n          \r\n          { courses.map( course => {\r\n            return <h2>{course.name}</h2>\r\n          })}\r\n        </div> */}\r\n          {/* course = this.props.data.map(function (co)){\r\n          return(\r\n          <div>\r\n          <h2>{course.name}</h2>\r\n          </div>\r\n          );\r\n      });\r\n    } */}\r\n    </div>\r\n    \r\n    <Popup trigger={buttonPopup} setTrigger={setButtonPopup}>\r\n      <h3>לפני שעוברים לשיעור הבא יש לבצע מטלה</h3>\r\n          {console.log(\"popup message\")}\r\n          {console.log(currentLesson.assignment)}\r\n          <p>{currentLesson.assignment}</p>\r\n          {console.log(\"answer is: \",answer)}\r\n          \r\n          <p>:טקסט חופשי</p>\r\n          <input type = \"text\" value={answer} \r\n          onChange={e => setAnswer(e.target.value)}\r\n          ></input>\r\n          <br/> \r\n          <p>:הכנס לינק</p>\r\n          <input type = \"text\" value={link} \r\n          onChange={e => setLink(e.target.value)}\r\n          ></input>\r\n        \r\n            <p>:העלה תמונה</p>\r\n          <input type=\"file\" onChange={handleUpload} />\r\n         \r\n          {console.log(\"check the file in popup: \", file)}\r\n          {/* {<img src={\"http://127.0.0.1:8000/media/answers/yarinBBB%40gmail.com/IMG_20170911_091555.jpg\" } width='100' \r\n height='100'></img>} */}\r\n {/* /media/answers/yarinBBB%40gmail.com/IMG_20170912_173837.jpg */}\r\n {file && newImage? <ImageThumb image={file} />:  <img src={\"http://127.0.0.1:8000\"+file } width='100' \r\n height='100'></img>}\r\n           {/* {file == \"\"&& <ImageThumb image={file} />} */}\r\n          <br/> \r\n          <button onClick={proceedToNextLesson}>שמור והמשך לשיעור הבא</button>\r\n        {/* </div> */}\r\n    </Popup>\r\n    <Popup trigger={notePopup} setTrigger={setNotePopup}>\r\n    \r\n    {/* {console.log(this.player.getCurrentTime())} */}\r\n      <h3>אלו ההערות שלך עבור שיעור זה</h3>\r\n          {console.log(\"popup message 2\")}\r\n          {console.log(notes)}\r\n          {/* {console.log(notes.results && notes.results.notes)} */}\r\n          {console.log(\"end of popup message 2\")}\r\n          {/* <p>{notes}</p> */}\r\n        \r\n          <textarea\r\n          name = \"notesTA\"\r\n          value={notes}\r\n          onChange={e => setNotes(e.target.value)}\r\n          rows={5}\r\n          cols={50}\r\n        />\r\n        <br/>\r\n        <button onClick={saveNotes}>שמור</button>\r\n        \r\n    </Popup>\r\n   \r\n    </div>  \r\n\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default CoursesScreen;\r\n","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\CoursesMainScreen.js",[],"C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\ProjectsScreen.js",[],"C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\api-service.js",["173","174","175","176","177","178","179","180","181","182","183"],"import React from \"react\"\r\nconst BASE_URL = 'https://yarintz.pythonanywhere.com';\r\nconst LOCAL_URL = 'http://127.0.0.1:8000';\r\nexport class API extends React.Component{\r\n/*\r\nstatic DisplayUser(body){ \r\n        console.log(body)\r\n        return fetch(`${LOCAL_URL}/main/users/21/`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify( body )\r\n        }).then( resp => resp.json())\r\n        }\r\n       */\r\n       /*\r\nstatic DisplayUserInfo(token, id, data){\r\n    return fetch(`${LOCAL_URL}/main/users/${id}/`),{\r\n        method: 'POST',\r\n        headers:{\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Token ${token}`\r\n        },\r\n        body: JSON.stringify( data )\r\n    }).then( resp => resp.json())  \r\n}*/\r\n// static getUserDetails(id){\r\n\r\n//     return fetch(`${LOCAL_URL}/main/users/${id}`,{\r\n//         method: 'GET',\r\n//         headers: {  \r\n//             'Content-Type':'application/json',\r\n           \r\n//         }\r\n//     }).then( resp => resp.json())\r\n//     //.then( res => props.UpdateUser(res))\r\n//     //.catch( error => console.log(error))\r\n// } \r\nstatic getUserDetails(token){\r\n\r\n    return fetch(`${BASE_URL}/main/userProfile/1/getUserDetails/`,{\r\n        method: 'POST',\r\n        headers: {  \r\n            'Content-Type':'application/json',\r\n            'Authorization': `Token ${token}` \r\n        }\r\n    })\r\n    //.then(resp => console.log(resp))\r\n     .then( resp => resp.json())\r\n    //.then( res => props.UpdateUser(res))\r\n    //.catch( error => console.log(error))\r\n} \r\n\r\nstatic getUserDetails(token){\r\n\r\n    return fetch(`${BASE_URL}/main/userProfile/1/getUserDetails/`,{\r\n        method: 'POST',\r\n        headers: {  \r\n            'Content-Type':'application/json',\r\n            'Authorization': `Token ${token}` \r\n        }\r\n    })\r\n    //.then(resp => console.log(resp))\r\n     .then( resp => resp.json())\r\n    //.then( res => props.UpdateUser(res))\r\n    //.catch( error => console.log(error))\r\n} \r\nstatic getUserDetails(token){\r\n\r\n    return fetch(`${LOCAL_URL}/main/userProfile/1/getUserDetails/`,{\r\n        method: 'POST',\r\n        headers: {  \r\n            'Content-Type':'application/json',\r\n            'Authorization': `Token ${token}` \r\n        }\r\n    })\r\n    //.then(resp => console.log(resp))\r\n     .then( resp => resp.json())\r\n    //.then( res => props.UpdateUser(res))\r\n    //.catch( error => console.log(error))\r\n}\r\n\r\n//samir\r\n// static UpdateUserDetails(token){\r\n\r\n//     return fetch(`${LOCAL_URL}/main/userProfile/1/UpdateUserDetails/`,{\r\n//         method: 'POST',\r\n//         headers: {  \r\n//             'Content-Type':'application/json',\r\n//             'Authorization': `Token ${token}` \r\n//         }\r\n//     })\r\n//     //.then(resp => console.log(resp))\r\n//      .then( resp => resp.json())\r\n//     //.then( res => props.UpdateUser(res))\r\n//     //.catch( error => console.log(error))\r\n// }  \r\nstatic loginUser(body){ \r\n    return fetch(`${BASE_URL}/auth/`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify( body )\r\n        }).then( resp => resp.json())\r\n    }\r\nstatic registerUser(body){ \r\n    console.log(body)\r\n        return fetch(`${BASE_URL}/main/users/`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify( body )\r\n            }).then( resp => resp.json())\r\n        }\r\n        // static registerUserProfile(username){ \r\n        //     return fetch(`${LOCAL_URL}/main/userProfile/1/createUserProfile/`, {\r\n        //         method: 'POST',\r\n        //         headers: {\r\n                \r\n        //           'Content-Type': 'application/json',\r\n        //           //'Authorization': `Token ${token}` \r\n        //              },\r\n        //              body: JSON.stringify({'username' : username})  \r\n                        \r\n        //         })\r\n        //           .then( resp => resp.json())\r\n                \r\n        //        } \r\n        static registerUserProfile(username, firstName, lastName){ \r\n            return fetch(`${LOCAL_URL}/main/userProfile/1/createUserProfile/`, {\r\n                method: 'POST',\r\n                headers: {\r\n                \r\n                  'Content-Type': 'application/json',\r\n                  //'Authorization': `Token ${token}` \r\n                     },\r\n                     body: JSON.stringify({'username' : username, 'firstName' : firstName,'lastName' : lastName} )  \r\n                        \r\n                })\r\n                  .then( resp => resp.json())\r\n                \r\n               }   \r\n\r\n        static displayCourses(){ \r\n                console.log(\"inside displayCourses fun\")\r\n                return fetch(`${BASE_URL}/main/courses/`, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                     },\r\n                    //body: JSON.stringify( body )\r\n                }).then( resp => resp.json())\r\n                // .then( resp => console.log(resp))\r\n                }           \r\n        static getLessons(){ \r\n                console.log(\"inside getLessons fun\")\r\n                // return fetch(`http://127.0.0.1:8000/main/courses/1/`, {\r\n                return fetch(`${BASE_URL}/admin/main/course/1/`, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                        },\r\n                    //body: JSON.stringify( body )\r\n                })\r\n                .then( resp => resp.json())\r\n                // .then( resp => console.log(resp))\r\n                \r\n                      \r\n                }  \r\n                static getNextLesson(num){ \r\n                    console.log(\"inside getNextLesson fun\")\r\n                    return fetch(`${BASE_URL}/main/lessons/${num}/`, {\r\n                        method: 'GET',\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                            },\r\n                        //body: JSON.stringify( body )\r\n                    })\r\n                    .then( resp => resp.json())\r\n                    // .then( resp => console.log(resp)) \r\n                }\r\n                static getPreviousLesson(num){ \r\n                    console.log(\"inside getPreviousLesson fun\")\r\n                    console.log(num)\r\n                    return fetch(`${BASE_URL}/main/lessons/${num}/`, {\r\n                        method: 'GET',\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                            },                       \r\n                    })\r\n                    .then( resp => resp.json())\r\n                }\r\n\r\n                static getCurrentCourse(numOfCourse){ \r\n                    console.log(\"inside displayCourses fun\")\r\n                    return fetch(`${BASE_URL}/main/courses/${numOfCourse}/`, {\r\n                        method: 'GET',\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                         },\r\n                        //body: JSON.stringify( body )\r\n                    }).then( resp => resp.json())\r\n                    // .then( resp => console.log(resp))\r\n                    }   \r\n               \r\n                    static loginUser(body){ \r\n                        return fetch(`${LOCAL_URL}/auth/`, {\r\n                            method: 'POST',\r\n                            headers: {\r\n                                'Content-Type': 'application/json'\r\n                            },\r\n                            body: JSON.stringify( body )\r\n                        }).then( resp => resp.json())\r\n                        }\r\n\r\n\r\n                        static registerUser(body){ \r\n                            console.log(body)\r\n                            return fetch(`${LOCAL_URL}/main/users/`, {\r\n                                method: 'POST',\r\n                                headers: {\r\n                                    'Content-Type': 'application/json'\r\n                                },\r\n                                body: JSON.stringify( body )\r\n                            }).then( resp => resp.json())\r\n                            }\r\n                        static displayCourses(){ \r\n                                console.log(\"inside displayCourses fun\")\r\n                                return fetch(`${LOCAL_URL}/main/courses/`, {\r\n                                    method: 'GET',\r\n                                    headers: {\r\n                                        'Content-Type': 'application/json'\r\n                                     },\r\n                                    //body: JSON.stringify( body )\r\n                                }).then( resp => resp.json())\r\n                                // .then( resp => console.log(resp))\r\n                                }  \r\n                                static getCourses(num){ \r\n                                    return fetch(`${BASE_URL}/main/courses/${num}`, {\r\n                                        method: 'GET',\r\n                                        headers: {\r\n                                            'Content-Type': 'application/json'\r\n                                         },\r\n                                    }).then( resp => resp.json())\r\n                                    }  \r\n\r\n                                    static getCourses(num){ \r\n                                        return fetch(`${LOCAL_URL}/main/courses/${num}`, {\r\n                                            method: 'GET',\r\n                                            headers: {\r\n                                                'Content-Type': 'application/json'\r\n                                             },\r\n                                        }).then( resp => resp.json())\r\n                                        } \r\n\r\n                        static getLessons(){ \r\n                                console.log(\"inside getLessons fun\")\r\n                                // return fetch(`http://127.0.0.1:8000/main/courses/1/`, {\r\n                                return fetch(`${LOCAL_URL}/admin/main/course/1/`, {\r\n                                    method: 'GET',\r\n                                    headers: {\r\n                                        'Content-Type': 'application/json'\r\n                                        },\r\n                                    //body: JSON.stringify( body )\r\n                                })\r\n                                .then( resp => resp.json())\r\n                                // .then( resp => console.log(resp))\r\n                                \r\n                                      \r\n                                }  \r\n                                static getNextLesson(num){ \r\n                                    console.log(\"inside getNextLesson fun\")\r\n                                    return fetch(`${LOCAL_URL}/main/lessons/${num}/`, {\r\n                                        method: 'GET',\r\n                                        headers: {\r\n                                            'Content-Type': 'application/json'\r\n                                            },\r\n                                        //body: JSON.stringify( body )\r\n                                    })\r\n                                    .then( resp => resp.json())\r\n                                    // .then( resp => console.log(resp)) \r\n                                }\r\n                                static getPreviousLesson(num){ \r\n                                    console.log(\"inside getPreviousLesson fun\")\r\n                                    console.log(num)\r\n                                    return fetch(`${LOCAL_URL}/main/lessons/${num}/`, {\r\n                                        method: 'GET',\r\n                                        headers: {\r\n                                            'Content-Type': 'application/json'\r\n                                            },                       \r\n                                    })\r\n                                    .then( resp => resp.json())\r\n                                }\r\n                \r\n                                static getCurrentCourse(numOfCourse){ \r\n                                    console.log(\"inside displayCourses fun\")\r\n                                    return fetch(`${LOCAL_URL}/main/courses/${numOfCourse}/`, {\r\n                                        method: 'GET',\r\n                                        headers: {\r\n                                            'Content-Type': 'application/json'\r\n                                         },\r\n                                        //body: JSON.stringify( body )\r\n                                    }).then( resp => resp.json())\r\n                                    // .then( resp => console.log(resp))\r\n                                    }\r\n                                static getUserLessons(){ \r\n                                        console.log(\"inside getUserLessons fun\")                           \r\n                                        return fetch(`${LOCAL_URL}/main/userLessons/`, {\r\n                                            method: 'GET',\r\n                                            headers: {\r\n                                                'Content-Type': 'application/json'\r\n                                                },\r\n                                            //body: JSON.stringify( body )\r\n                                        }).then( resp => resp.json())\r\n                                        //.then( resp => console.log(resp))\r\n                                        \r\n                                              \r\n                                        }  \r\n                static getUserNotes(token, data){ \r\n                    console.log(\"im in getUserNotes\")\r\n                  //  http://127.0.0.1:8000/main/userLessons/1/getUserLessons/                             \r\n                    return fetch(`${LOCAL_URL}/main/userLessons/1/getUserLessons/`, {\r\n                        method: 'POST',\r\n                        headers: {\r\n                        //   'Accept': 'application/json',\r\n                          'Content-Type': 'application/json',\r\n                          'Authorization': `Token ${token}` \r\n                             },\r\n                             body: JSON.stringify({'lesson' : data})  \r\n                            // body: JSON.stringify({data})  \r\n                            // params: {\r\n                            //     'lesson': '4'\r\n                            //   }                 \r\n                        })\r\n                          .then( resp => resp.json())\r\n                        //.then( resp => console.log(\"eewrwerrewreerwewfaj\"))\r\n                       }  \r\n                       static getUserAnswersById(userId, lessonID){                     \r\n                        return fetch(`${LOCAL_URL}/main/userLessons/1/getUserAnswers/`, {\r\n                            method: 'POST',\r\n                            headers: {\r\n                              'Content-Type': 'application/json'\r\n                                 },\r\n                                 body: JSON.stringify({'userId' : userId, 'lessonId' : lessonID})  \r\n                     \r\n                            })\r\n                              .then( resp => resp.json())\r\n                     \r\n                           }\r\n                       static updateUserNotes(token, uploadData, numOfLesson){ \r\n                         return fetch(`${LOCAL_URL}/main/userLessons/${numOfLesson}/addUserLessons/`, {\r\n                            method: 'POST',\r\n                            headers: {\r\n                            \r\n                            //   'Content-Type': 'application/json',\r\n                              'Authorization': `Token ${token}` \r\n                                 },\r\n                                //  body: JSON.stringify({'notes' : data})\r\n                            body: uploadData  \r\n                                    \r\n                            })\r\n                            //    .then( resp => resp.json())\r\n                           }  \r\n\r\n                           static getUserAnswer(token, data){ \r\n                            console.log(\"im in getUserAnswer\")                         \r\n                            return fetch(`${LOCAL_URL}/main/userLessons/1/getUserLessons/`, {\r\n                                method: 'POST',\r\n                                headers: {\r\n                                  'Content-Type': 'application/json',\r\n                                  'Authorization': `Token ${token}` \r\n                                     },\r\n                                     body: JSON.stringify({'lesson' : data})  \r\n              \r\n                                })\r\n                                  //.then( resp => console.log(resp))\r\n                                  .then( resp => resp.json())\r\n                            \r\n                               }  \r\n                            //    static updateUserAnswer(token, answer,link, image, numOfLesson){                             \r\n                            //     return fetch(`${LOCAL_URL}/main/userLessons/${numOfLesson}/addUserLessons/`, {\r\n                            //         method: 'POST',\r\n                            //         //format: 'multipart',\r\n                            //         headers: {\r\n                            //         //   'Accept': 'application/json, text/plain',\r\n                            //         //   'Content-Type': 'application/json',\r\n                            //           'Authorization': `Token ${token}` \r\n                            //              },\r\n                            //             //  body: JSON.stringify({'answer' : answer, 'link' : link, 'image' : image})  \r\n                            //             // body: JSON.stringify({'answer' : answer, 'link' : link}), 'image' : image\r\n                            //             body: {'answer' : answer, 'link' : link, 'image' : image}\r\n                            //         })\r\n                            //           //.then( resp => resp.json())\r\n                            //        }\r\n\r\n                            static updateUserAnswer(token, uploadData, numOfLesson){                             \r\n                                return fetch(`${LOCAL_URL}/main/userLessons/${numOfLesson}/addUserLessons/`, {\r\n                                    method: 'POST',\r\n                                    //format: 'multipart',\r\n                                    headers: {\r\n                                    //   'Accept': 'application/json, text/plain',\r\n                                    //   'Content-Type': 'application/json',\r\n                                      'Authorization': `Token ${token}` \r\n                                         },\r\n                                        //  body: JSON.stringify({'answer' : answer, 'link' : link, 'image' : image})  \r\n                                        // body: JSON.stringify({'answer' : answer, 'link' : link}), 'image' : image\r\n                                        body: uploadData\r\n                                    })\r\n                                      //.then( resp => resp.json())\r\n                                   }\r\n                                   \r\n                                   static getUserLastLesson(token, numOfCourse){                                                       \r\n                                    return fetch(`${LOCAL_URL}/main/userCourses/${numOfCourse}/getUserCourses/`, {\r\n                                        method: 'POST',\r\n                                        headers: {\r\n                                          'Content-Type': 'application/json',\r\n                                          'Authorization': `Token ${token}` \r\n                                             },\r\n                                            //  body: JSON.stringify({'course' : data})  \r\n                      \r\n                                        })\r\n                                          //.then( resp => console.log(resp))\r\n                                          .then( resp => resp.json())\r\n                                    \r\n                                       } \r\n                                       static getAllUserCourses(token){                                                        \r\n                                        return fetch(`${LOCAL_URL}/main/userCourses/1/getAllUserCourses/`, {\r\n                                            method: 'GET',\r\n                                            headers: {\r\n                                              'Content-Type': 'application/json',\r\n                                              'Authorization': `Token ${token}` \r\n                                                 },                         \r\n                                            })                                    \r\n                                              .then( resp => resp.json())                                       \r\n                                           }\r\n                                           static getAllUserCourses(){                                                        \r\n                                            return fetch(`${LOCAL_URL}/main/userCourses/`, {\r\n                                                method: 'GET',\r\n                                                headers: {\r\n                                                  'Content-Type': 'application/json'                                                \r\n                                                     },                         \r\n                                                })                                    \r\n                                                  .then( resp => resp.json())                                       \r\n                                               }\r\n                                               static getAllCourses(){                                                        \r\n                                                return fetch(`${LOCAL_URL}/main/courses/`, {\r\n                                                    method: 'GET',\r\n                                                    headers: {\r\n                                                      'Content-Type': 'application/json'                                                \r\n                                                         },                         \r\n                                                    })                                    \r\n                                                      .then( resp => resp.json())                                       \r\n                                                   }\r\n                                        //    static getAllUserCourses(token){                                                       \r\n                                        //     return fetch(`${BASE_URL}/main/userCourses/1/getAllUserCourses/`, {\r\n                                        //         method: 'GET',\r\n                                        //         headers: {\r\n                                        //           'Content-Type': 'application/json',\r\n                                        //           'Authorization': `Token ${token}` \r\n                                        //              },                         \r\n                                        //         })                                    \r\n                                        //           .then( resp => resp.json())                                       \r\n                                        //        }  \r\n                                               static getAllCoursesByUserId(id){  \r\n                                                console.log(\"id is: \" ,id)                                                     \r\n                                                return fetch(`${LOCAL_URL}/main/userCourses/${id}/getAllCoursesByUserId/`, {\r\n                                                    method: 'GET',\r\n                                                    headers: {\r\n                                                      'Content-Type': 'application/json',                                                     \r\n                                                         },                         \r\n                                                    }).then( resp => resp.json())\r\n                                                     //.then( resp => console.log(\"in API \", resp))                                       \r\n                                                   }\r\n                                                //    static getAllCoursesByUserId(id){ \r\n                                                //     console.log(\"im here in base\")                                                      \r\n                                                //     return fetch(`${BASE_URL}/main/userCourses/${id}/getAllCoursesByUserId/`, {\r\n                                                //         method: 'GET',\r\n                                                //         headers: {\r\n                                                //           'Content-Type': 'application/json',                                                       \r\n                                                //              },                         \r\n                                                //         })                                    \r\n                                                //           .then( resp => resp.json())                                       \r\n                                                //        }  \r\n                                       \r\n                                       static updateUserCourse(token, data, numOfCourse){                             \r\n                                        return fetch(`${LOCAL_URL}/main/userCourses/${numOfCourse}/addUserCourses/`, {\r\n                                            method: 'POST',\r\n                                            headers: {\r\n                                            \r\n                                              'Content-Type': 'application/json',\r\n                                              'Authorization': `Token ${token}` \r\n                                                 },\r\n                                                 body: JSON.stringify({'lesson' : data})  \r\n                                                    \r\n                                            })\r\n                                              .then( resp => resp.json())\r\n                                           }\r\n                                           static getClassStudentsByID(classId){                                                                                  \r\n                                                return fetch(`${LOCAL_URL}/main/class/${classId}/getClassStudents/`, {\r\n                                                     method: 'POST',\r\n                                                     headers: {\r\n                                                        'Content-Type': 'application/json'\r\n                                                     },                                           \r\n                                              })\r\n                                             .then( resp => resp.json())                                                                                                                               \r\n                                             }  \r\n                                             static getClassTeacherssByID(classId){                                                                                  \r\n                                                return fetch(`${LOCAL_URL}/main/class/${classId}/getClassTeachers/`, {\r\n                                                     method: 'POST',\r\n                                                     headers: {\r\n                                                        'Content-Type': 'application/json'\r\n                                                     },                                           \r\n                                              })\r\n                                             .then( resp => resp.json())                                                                                                                               \r\n                                             } \r\n                                             static getClassMatatzesByID(classId){                                                                                  \r\n                                                return fetch(`${LOCAL_URL}/main/class/${classId}/getClassMatatzes/`, {\r\n                                                     method: 'POST',\r\n                                                     headers: {\r\n                                                        'Content-Type': 'application/json'\r\n                                                     },                                           \r\n                                              })\r\n                                             .then( resp => resp.json())                                                                                                                               \r\n                                             }  \r\n                                             static getClassCoordinatorsByID(classId){                                                                                  \r\n                                                return fetch(`${LOCAL_URL}/main/class/${classId}/getClassCoordinators/`, {\r\n                                                     method: 'POST',\r\n                                                     headers: {\r\n                                                        'Content-Type': 'application/json'\r\n                                                     },                                           \r\n                                              })\r\n                                             .then( resp => resp.json())                                                                                                                               \r\n                                             }  \r\n                                             static getUserProfileById(id){                                     \r\n                                                return fetch(`${LOCAL_URL}/main/userProfile/${id}/`, {\r\n                                                    method: 'GET',\r\n                                                    headers: {\r\n                                                        'Content-Type': 'application/json'\r\n                                                        },                       \r\n                                                })\r\n                                                .then( resp => resp.json())\r\n                                            }\r\n                                            static getUserByUsername(username){  \r\n                                                console.log(\"im here\");                                                                                \r\n                                                return fetch(`${LOCAL_URL}/main/userProfile/1/getUserByUsername/`, {\r\n                                                     method: 'POST',\r\n                                                     headers: {\r\n                                                        'Content-Type': 'application/json'\r\n                                                     }, \r\n                                                     body: JSON.stringify({'username' : username})\r\n                                                                                    \r\n                                              })\r\n                                              .then( resp => resp.json())  \r\n                                            //   .then( resp => resp.json()) \r\n                                            }\r\n                                            static addStudentToClass(classId, username){                             \r\n                                                return fetch(`${LOCAL_URL}/main/class/${classId}/addUserToClass/`, {\r\n                                                    method: 'POST',\r\n                                                    headers: {\r\n                                                    \r\n                                                      'Content-Type': 'application/json',\r\n                                                    //   'Authorization': `Token ${token}` \r\n                                                         },\r\n                                                         body: JSON.stringify({'student' : username})  \r\n                                                            \r\n                                                    })\r\n                                                      .then( resp => resp.json())\r\n                                                   }\r\n\r\n                                                   static removeStudentFromClass(classId, username){ \r\n                                                    console.log(\"qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq\");                            \r\n                                                    return fetch(`${LOCAL_URL}/main/class/${classId}/removeUserFromClass/`, {\r\n                                                        method: 'POST',\r\n                                                        headers: {\r\n                                                        \r\n                                                          'Content-Type': 'application/json',\r\n                                                        //   'Authorization': `Token ${token}` \r\n                                                             },\r\n                                                             body: JSON.stringify({'student' : username})  \r\n                                                                \r\n                                                        })\r\n                                                          .then( resp => resp.json())\r\n                                                       }\r\n\r\n\r\n                                                       static updateUserDetails(token, firstName, lastName, aboutMe, hobbies, myGoal ){ \r\n                                                        return fetch(`${LOCAL_URL}/main/userProfile/1/UpdateUserDetails/`, {\r\n                                                           method: 'POST',\r\n                                                           headers: {\r\n                                                           \r\n                                                             'Content-Type': 'application/json',\r\n                                                             'Authorization': `Token ${token}` \r\n                                                                },\r\n                                                                body: JSON.stringify({'firstName' : firstName, 'lastName' : lastName,'aboutMe' : aboutMe,\r\n                                                                'hobbies' : hobbies,'myGoal' : myGoal,\r\n                                                            })  \r\n                                                                   \r\n                                                           })\r\n                                                             .then( resp => resp.json())\r\n                                                          }  \r\n                                                          static getStudentsMatatz(studentId){                                                                                  \r\n                                                            return fetch(`${LOCAL_URL}/main/group/${studentId}/getStudentsMatatz/`, {\r\n                                                                 method: 'POST',\r\n                                                                 headers: {\r\n                                                                    'Content-Type': 'application/json'\r\n                                                                 },                                           \r\n                                                          })\r\n                                                         .then( resp => resp.json())                                                                                                                               \r\n                                                         } \r\n                                                    //    static removeStudentFromClass(classId, username){                             \r\n                                                    //     return fetch(`${BASE}/main/class/${classId}/removeUserFromClass/`, {\r\n                                                    //         method: 'POST',\r\n                                                    //         headers: {\r\n                                                            \r\n                                                    //           'Content-Type': 'application/json',\r\n                                                    //         //   'Authorization': `Token ${token}` \r\n                                                    //              },\r\n                                                    //              body: JSON.stringify({'student' : username})  \r\n                                                                    \r\n                                                    //         })\r\n                                                    //           .then( resp => resp.json())\r\n                                                    //        }\r\n    }","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\components\\Navbar\\index.js",["184","185","186","187","188"],"import React, { useEffect, useState } from \"react\";\nimport { useCookies } from 'react-cookie';\n\nimport {\n  Nav,\n  NavLogo,\n  NavLink,\n  Bars,\n  NavMenu,\n  NavBtn,\n  NavBtnLink,\n} from \"./NavbarElements\";\n\n\nconst Navbar = () => {\n    \n    const[token, setToken, deleteToken] = useCookies(['mr-token']);\n\n\nconst logoutUser = () => {\n      console.log(\"inside logoutUser\");\n      console.log(token);\n      deleteToken(['mr-token']);\n      console.log(token);\n}\n  \n    return (\n        <>\n           <Nav>\n            <NavLogo to=\"/\">\n                Logo\n            </NavLogo>\n            <Bars />\n            <NavMenu>\n            <NavLink to=\"/AboutusScreen\" activeStyle>\n                    עלינו\n                </NavLink>\n            <NavLink to=\"/TeachersScreen\" activeStyle>\n                    הדרכה\n                </NavLink>\n            <NavLink to=\"/ProfileScreen\" activeStyle>\n                    פרופייל\n                </NavLink>\n            <NavLink to=\"/ProjectsScreen\" activeStyle>\n                    פרויקטים\n                </NavLink> \n                <NavLink to=\"/CoursesMainScreen\" activeStyle>\n                    למידה\n                </NavLink>\n                <NavLink to=\"/HomeScreen\" activeStyle>\n                    דף הבית\n                </NavLink>\n               \n\n                {token['mr-token'] && token['mr-token']!='undefined' ? (<NavBtn onClick={logoutUser} activeStyle>\n                    התנתק\n                </NavBtn> ) : <NavLink  to=\"/Signin\" activeStyle>\n                    התחבר\n                </NavLink>}\n\n                \n            </NavMenu> \n           </Nav> \n        </>\n    );\n};\nexport default Navbar;","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\components\\Popup.js",[],"C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\components\\Navbar\\NavbarElements.js",[],"C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\AboutusScreen.js",[],"C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\TeachersScreen.js",["189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205"],"import Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\nimport React, {useEffect, useState} from 'react';\r\nimport { useCookies } from 'react-cookie';\r\nimport { API } from '../api-service';\r\nimport '../index.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport Popup from '../components/Popup';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst TeachersScreen = () => {\r\n  const[token] = useCookies(['mr-token']);\r\n  const [user,setUser] = useState([]);\r\n  const [selectedClass, setSelectedClass] = useState();\r\n  const [studentInClass, setsStudentsInClass] = useState([]);\r\n  const [matatzesInClass, setsMatatzesInClass] = useState([]);\r\n  const [coordinatorsInClass, setsCoordinatorsInClass] = useState([]);\r\n  const [addStudentPopup, setAddStudentPopup] = useState(false);\r\n  const [removeStudentPopup, setRemoveStudentPopup] = useState(false);\r\n  const [userToSearch, setUserToSearch] = useState();\r\n  const [userToRemove, setUserToRemove] = useState([]);\r\n  const [userToAdd, setUserToAdd] = useState([]);\r\n  const [addedSuccesfullyMessage, setAddedSuccesfullyMessage] = useState('');\r\n  const search = window.location.search; // returns the URL query String\r\n  const params = new URLSearchParams(search); \r\n  const IdClassFromURL = params.get('class');\r\n\r\n  const options=[];\r\n  const defaultOption = '';\r\n  \r\n\r\n  useEffect(() =>{\r\n    if(!token['mr-token']) window.location.href = '/Signin';\r\n    console.log(\"idfromurl is: \", IdClassFromURL)\r\n    API.getUserDetails(token['mr-token'])\r\n      .then(resp => setUser(resp.results))  \r\n      .catch( error => console.log(error))\r\n   \r\n    sleep(1000).then(()=>{\r\n      console.log(\"type of user is: \", user)\r\n      if(user.userType == \"1\") window.location.href = '/Signin';\r\n      })\r\n    \r\n    }, [])\r\n\r\n    //try\r\n    useEffect(() =>{\r\n      addClasses();\r\n      }, [user])\r\n\r\n      function sleep(time){\r\n        return new Promise((resolve)=>setTimeout(resolve,time)\r\n      )\r\n  }\r\n\r\n    const getDataOfClass= (numOfClass) =>  { \r\n      console.log(\"2- class is: \", selectedClass)\r\n      API.getClassStudentsByID(numOfClass)\r\n      .then(resp => setsStudentsInClass(resp.results)) \r\n      .catch( error => console.log(error))\r\n      API.getClassMatatzesByID(numOfClass)\r\n      .then(resp => setsMatatzesInClass(resp.results)) \r\n      .catch( error => console.log(error))\r\n      API.getClassCoordinatorsByID(numOfClass)\r\n      .then(resp => setsCoordinatorsInClass(resp.results)) \r\n      .catch( error => console.log(error))\r\n      }\r\n\r\n    function handleChange(event) {\r\n      console.log(\"event is: \",event);\r\n      \r\n      for (var i = 0; i < options.length; i++) {\r\n        if(options[i].value == event.value ){\r\n          console.log(options[i].key);\r\n          setSelectedClass(options[i].key);\r\n          console.log(\"class is: \", selectedClass)\r\n          getDataOfClass(options[i].key)\r\n          break;\r\n        }\r\n    } \r\n     \r\n     \r\n    }\r\n\r\n    function setGivenClass() {\r\n        console.log(\"im hereeeee\")\r\n        console.log( options.length)\r\n      for (var i = 0; i < options.length; i++) {\r\n         console.log(options[i].key, \" \",options[i].value )\r\n        if(options[i].key == IdClassFromURL ){\r\n          console.log(\"we are inide if \", options[i].key);\r\n          setSelectedClass(options[i].key);\r\n          console.log(\"class is: \", selectedClass)\r\n          getDataOfClass(options[i].key)\r\n          break;\r\n        }\r\n    }    \r\n    }\r\n\r\n\r\n    const viewProfile = (user) =>{\r\n      console.log(\"id must be 20: \", user.id)\r\n      window.location.href ='/UserProfile?id=' + user.id+ \"&idUser=\" + user.user+\"&idClass=\" + selectedClass; \r\n    }\r\n    const goToSignIn = (username) =>{\r\n      console.log(\"user to regiser: \",username)\r\n      window.location.href ='/UserRegistration?username=' + username+\"&idClass=\" + selectedClass; \r\n    }\r\n    const addUser = (username) =>{\r\n      //console.log(\"details\", username, \" \", selectedClass)\r\n      API.addStudentToClass(selectedClass, username);\r\n      // setUserToAdd('');\r\n      setAddedSuccesfullyMessage(\"התלמיד נוסף בהצלחה\");\r\n      getDataOfClass(selectedClass);\r\n      sleep(100).then(()=>{\r\n      API.getClassStudentsByID(selectedClass)\r\n        .then(resp => setsStudentsInClass(resp.results)) \r\n        .catch( error => console.log(error))\r\n      \r\n      console.log(\"studentInClass: \", studentInClass)\r\n      // setsStudentsInClass((studentInClass) => [...studentInClass, userToAdd])\r\n      setsStudentsInClass(() => [...studentInClass, userToAdd])\r\n      setUserToAdd('');\r\n      })\r\n    }\r\n    \r\n    const addStudent= () =>  {\r\n      setAddStudentPopup(true)\r\n      }\r\n\r\n    const candidateToRemove= (userToRemove) =>  {\r\n      console.log(\"candidate: \", userToRemove.username)\r\n      setUserToRemove(userToRemove)\r\n      setRemoveStudentPopup(true)\r\n      }\r\n\r\n      const removeStudent= (userToRemove) =>  {\r\n        console.log(\"user to remove: \",userToRemove, selectedClass)\r\n        API.removeStudentFromClass(selectedClass, userToRemove);\r\n        sleep(100).then(()=>{\r\n          API.getClassStudentsByID(selectedClass)\r\n            .then(resp => setsStudentsInClass(resp.results)) \r\n            .catch( error => console.log(error))  \r\n        setUserToRemove('')\r\n        setRemoveStudentPopup(false)\r\n        })\r\n        }\r\n\r\n      const searchUser= () =>  { \r\n        setUserToAdd('null');\r\n        console.log(\"user to add is: \", userToSearch)\r\n        API.getUserByUsername(userToSearch) \r\n        //  .then(resp => console.log(\"user: \",resp.results))  \r\n          .then(resp => setUserToAdd(resp.results))  \r\n          .catch( error => console.log(error))  \r\n        }\r\n        //uplaod the data of the class after return to this page from userProfile\r\n        const addClasses= () =>  { \r\n          if(IdClassFromURL==null){\r\n            console.log(\"IdClassFromURL is null\")\r\n            return \r\n          }\r\n          console.log(\"im in addClasses\")\r\n          user.matatzClasses && user.matatzClasses.map(matatzclass => { \r\n            console.log(\"inside map\")     \r\n            options.push({key:matatzclass.id,value:matatzclass.className})\r\n          })\r\n          setGivenClass();\r\n        }\r\n\r\n        const showReport= () =>  { \r\n          window.location.href ='/ClassReportNew?idClass=' + selectedClass;\r\n        } \r\n        const showTeacherReport= () =>  { \r\n          window.location.href ='/TeacherReport?idUser=' + user.id;\r\n        }         \r\n    return (   \r\n    \r\n    <div className=\"App\">\r\n       {console.log(\"in return type of user is: \", user.userType)}\r\n       { user.userType==\"1\"? window.location.href = '/Homepagescreen': \" \"}\r\n      \r\n      {/* <FontAwesomeIcon icon={faTimesCircle} />   */}\r\n      <h1>הדרכה</h1>\r\n      <button onClick={() => showReport()}>הצג דוח כיתה</button>\r\n      {user.userType == \"3\" ? <button onClick={() => showTeacherReport()}>הצג דוח מורה</button>: \"\"}\r\n      {/* insert to options all the classes guided by this user.\r\n      insert the class id as a key and the class name as the value.\r\n      the value will be shown in the dropdown */}\r\n      {user.matatzClasses && user.matatzClasses.map(Matatzclass => {\r\n                  {options.push({key:Matatzclass.id,value:Matatzclass.className})}       \r\n          })}\r\n    \r\n    {/* the dropdown will hold the classes of the user and will display them by their names*/}\r\n    <Dropdown className='dropdown' options={options} value={defaultOption} label={defaultOption.key} onChange={handleChange}  placeholder=\"בחר כיתה\" />\r\n    <div className=\"profile\">\r\n      <div>\r\n      <h3>תלמידים:</h3>\r\n      {/*add the usernames of all the students of the selected class */}\r\n    {studentInClass.map(student => { \r\n      {console.log(\"inside map\")}\r\n                    return <p>\r\n                        {/* <FontAwesomeIcon className='username' icon={faTimesCircle} data-tip={\"הסר\"} onClick={() => removeStudent(student.username)}/> */}\r\n                        <FontAwesomeIcon className='username' icon={faTimesCircle} data-tip={\"הסר\"} onClick={() => candidateToRemove(student)}/>\r\n                         <ReactTooltip />\r\n                         &nbsp;\r\n                         {/* working example with tooltip */}\r\n                        {/* <span className='username' data-tip={student.firstName+ \" \"+ student.lastName}  onClick={() => viewProfile(student)} >\r\n                        {student.firstName+ \" \"+ student.lastName}\r\n                        </span> \r\n                      \r\n                         <ReactTooltip /> */}\r\n                         <span className='username'   onClick={() => viewProfile(student)} >\r\n                        {student.firstName+ \" \"+ student.lastName}\r\n                        </span> \r\n                      \r\n                         \r\n                         {/* <button onClick={() => removeStudent(student.username)}>הסר</button>  */}\r\n                         \r\n                         {/* <FontAwesomeIcon icon={faTimesCircle} data-tip={\"הסר\"} onClick={() => removeStudent(student.username)}/>\r\n                         <ReactTooltip /> */}\r\n                         <br/></p> \r\n                        {/* <p className='username' data-tip={student.username} data-for=\"registerTip\" onClick={() => viewProfile(student)} >\r\n                        {student.username}\r\n                         </p> <br/> */}\r\n      {/* <ReactTooltip id=\"registerTip\" place=\"top\" effect=\"solid\">\r\n        {student.username}\r\n        {/* {student.firstName+ \" \"+ student.lastName} */}\r\n      {/* </ReactTooltip> */} \r\n               \r\n                      \r\n              })}\r\n      {/* <ReactTooltip id=\"registerTip\" place=\"top\" effect=\"solid\">\r\n        {student.firstName+ \" \"+ student.lastName}\r\n      </ReactTooltip> */}\r\n               <Button style={{display : selectedClass  ? \"\": \"none\"}} onClick={addStudent}>הוסף תלמיד</Button> \r\n</div>\r\n<div>\r\n<h3>מטצים:</h3>\r\n    {matatzesInClass.map(matatz => { \r\n                    return <p>\r\n                      \r\n                      <p className='username' onClick={() => viewProfile(matatz)}>\r\n                      {matatz.firstName+ \" \"+ matatz.lastName} </p> <br/>\r\n                     \r\n                </p>                  \r\n              })}\r\n             \r\n  </div>\r\n  <div>\r\n<h3>רכזים:</h3>\r\n    {coordinatorsInClass.map(coordinator => { \r\n                    return <p>\r\n                      \r\n                      <p className='username' onClick={() => viewProfile(coordinator)}> \r\n                      {coordinator.firstName+ \" \"+ coordinator.lastName} </p> <br/>\r\n                      {/* <ReactTooltip /> */}\r\n                </p>                  \r\n              })}\r\n              </div>\r\n    </div>\r\n    <Popup trigger={addStudentPopup} setTrigger={setAddStudentPopup}>\r\n     <h4>חפש שם משתמש של תלמיד</h4>\r\n     <input type = \"text\" onChange={e => setUserToSearch(e.target.value) + setAddedSuccesfullyMessage('')}></input>\r\n         \r\n     \r\n         <button onClick={searchUser}>חפש</button>\r\n         {console.log(\"users are: \",userToAdd.id)}\r\n         <h5>{userToAdd!=\"null\"?  userToAdd.username: \" לא נמצא שם משתמש\"}</h5>\r\n         {<button  style={{display : userToAdd!=\"null\"  ? \"none\": \"\"}} onClick={() => goToSignIn(userToSearch)}>רשום משתמש</button>}\r\n         <p>{userToAdd.id && userToAdd.firstName + \" \"+ userToAdd.lastName}</p>\r\n         {/* <p>{userToAdd && userToAdd.lastName}</p> */}\r\n         {<button  style={{display : userToAdd.id  ? \"\": \"none\"}} onClick={() => addUser(userToAdd.username)}>הוסף</button>}\r\n         <p>{addedSuccesfullyMessage}</p>    \r\n\r\n   </Popup> \r\n   <Popup trigger={removeStudentPopup} setTrigger={setRemoveStudentPopup}>\r\n   <h4> ?מהכיתה {userToRemove.username} האם אתה בטוח שברצונך להסיר את </h4> \r\n   \r\n        {/* <h4> ?{userToRemove[0].username} האם אתה בטוח שברצונך להסיר את </h4>  */}\r\n        {/* <button onClick={removeStudent(userToRemove)}>הסר</button> */}\r\n        {<button  style={{display : userToRemove.id  ? \"\": \"none\"}} onClick={() => removeStudent(userToRemove.username)}>הסר</button>}\r\n   </Popup>     \r\n   \r\n    </div>\r\n     \r\n   \r\n   \r\n   \r\n  );\r\n  \r\n};\r\n\r\nexport default TeachersScreen;","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\components\\UpdateUserDetails.js",["206","207","208","209","210","211","212","213","214","215","216"],"import React, {useEffect, useState} from 'react';\r\nimport { Container,Row,Col,Form ,Button} from 'react-bootstrap';\r\nimport { useCookies } from 'react-cookie';\r\nimport { API } from '../api-service';\r\nimport Signin from '../pages/Signin'; \r\nimport '../index.css';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Popup from './Popup';\r\n//import UpdateUserDetails from '../components/UpdateUserDetails'\r\nconst axios = require('axios');\r\n\r\n\r\nconst UpdateUserDetails = () => {\r\n  const history = useHistory();\r\n  const handleRoute = () =>{ \r\n      history.push(\"/ProfileScreen\");\r\n    }\r\n      \r\n    const [token, setToken, deleteToken] = useCookies(['mr-token']);\r\n    const [user,setUser] = useState([]);\r\n    const[popup, setPopup ] = useState();\r\n    const [UpdateUserfirstnamePopUp, setUpdateUserfirstnamePopUp ] = useState(false);\r\n    const [UpdateUserlastnamePopUp, setUpdateUserlastnamePopUp ] = useState(false);\r\n    const [UpdateUseremailPopUp, setUpdateUseremailPopUp ] = useState(false);\r\n    const [UpdateUseraboutmePopUp, setUpdateUseraboutmePopUp ] = useState(false);\r\n    const [UpdateUserhobbiesPopUp, setUpdateUserhobbiesPopUp ] = useState(false);\r\n    useEffect(()=>{\r\n        //var username = Signin.username\r\n        //console.log(\"username is:\",username)\r\n        API.getUserDetails(token['mr-token'])\r\n         //.then(resp => console.log(\"resp is:\", resp.results))\r\n         .then(resp => setUser(resp.results))  \r\n         .catch( error => console.log(error)) \r\n    }, [])\r\n    const openPopup = () =>{\r\n      //if(this.user === undefined) {return}\r\n      console.log('inside open Popup');\r\n      setPopup('');\r\n      console.log(\"user name \",user.firstName)\r\n      \r\n      setUpdateUserfirstnamePopUp(true);\r\n    } \r\n    const openlastnamePopup = () =>{\r\n      console.log('inside open last name Popup');\r\n      setPopup('');\r\n      console.log(\"user name \",user.firstName)\r\n      \r\n      setUpdateUserlastnamePopUp(true);\r\n    }\r\n    const openemailPopup = () =>{\r\n      console.log('inside open email Popup');\r\n      setPopup('');\r\n      console.log(\"user name \",user.firstName)\r\n      \r\n      setUpdateUseremailPopUp(true);\r\n    }\r\n    const openaboutmePopup = () =>{\r\n      console.log('inside open about me Popup');\r\n      setPopup('');\r\n      console.log(\"user name \",user.firstName)\r\n      \r\n      setUpdateUseraboutmePopUp(true);\r\n    }\r\n    const openhobbiesPopup = () =>{\r\n      console.log('inside open hobbies Popup');\r\n      setPopup('');\r\n      console.log(\"user name \",user.firstName)\r\n      \r\n      setUpdateUserhobbiesPopUp(true);\r\n    }\r\n    /*\r\n    const savechanges= () =>  { \r\n      if(currentLesson.id)\r\n        API.updateUserNotes(token['mr-token'], notes, currentLesson.id)\r\n      else\r\n        API.updateUserNotes(token['mr-token'], notes, params.get('firstLessonId'))\r\n       setNotePopup(false)\r\n      }\r\n      */\r\n    return(\r\n        <div className=\"App\">\r\n        <header className=\"Header\">דף שינוי פרטים</header>\r\n        <div className=\"updateProfile\">\r\n        <div>\r\n        <h4>שם משתמש:</h4>\r\n         <p>{user.username}</p>\r\n         <h4>שם פרטי: </h4><button onClick={openPopup}>עריכה</button>\r\n         <p>{user.firstName}</p>\r\n          <h4>שם משפחה:</h4><button onClick={openlastnamePopup}>עריכה</button>\r\n          <p>{user.lastName}</p>\r\n       </div>\r\n        <div>\r\n        <h4>דואר אלקטרוני:</h4><button onClick={openemailPopup}>עריכה</button>\r\n       <p>{user.email}</p>\r\n       <h4>קצת עליי..</h4><button onClick={openaboutmePopup}>עריכה</button>\r\n       <p>{user.aboutMe}</p>\r\n       </div>\r\n       <div>\r\n       <h4>תחביבים:</h4><button onClick={openhobbiesPopup}>עריכה</button>\r\n       <p>{user.hobbies}</p>\r\n       </div>\r\n       </div>\r\n        <button onClick={handleRoute}>חזרה</button>\r\n        <Popup trigger={UpdateUserfirstnamePopUp} setTrigger={setUpdateUserfirstnamePopUp}>\r\n          <h3>שם פרטי:</h3>\r\n          {console.log(\"first name popup message test\")}\r\n          <textarea>{user.firstName}</textarea>\r\n        <br/>\r\n        <button >שמור</button>\r\n        </Popup>\r\n        <Popup trigger={UpdateUserlastnamePopUp} setTrigger={setUpdateUserlastnamePopUp}>\r\n          <h3>שם משפחה:</h3>\r\n          {console.log(\"last name popup message test\")}\r\n          <textarea>{user.lastName}</textarea>\r\n        <br/>\r\n        <button >שמור</button>\r\n        </Popup>\r\n        <Popup trigger={UpdateUseremailPopUp} setTrigger={setUpdateUseremailPopUp}>\r\n          <h3>דואר אלקטרוני:</h3>\r\n          {console.log(\"mail popup message test\")}\r\n          <textarea>{user.email}</textarea>\r\n        <br/>\r\n        <button >שמור</button>\r\n        </Popup>\r\n        <Popup trigger={UpdateUseraboutmePopUp} setTrigger={setUpdateUseraboutmePopUp}>\r\n          <h3>קצת עליי..:</h3>\r\n          {console.log(\"about me popup message test\")}\r\n          <textarea>{user.aboutMe}</textarea>\r\n        <br/>\r\n        <button >שמור</button>\r\n        </Popup>\r\n        <Popup trigger={UpdateUserhobbiesPopUp} setTrigger={setUpdateUserhobbiesPopUp}>\r\n          <h3>תחביבים:</h3>\r\n          {console.log(\"hobbies popup message test\")}\r\n          <textarea>{user.hobbies}</textarea>\r\n        <br/>\r\n        <button >שמור</button>\r\n        </Popup>\r\n        </div>\r\n    )\r\n};\r\n\r\n           \r\nexport default UpdateUserDetails;","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\UserProfile.js",["217","218","219","220","221","222","223","224","225","226","227","228"],"import React, {useEffect, useState} from 'react';\r\nimport { Container,Row,Col,Form ,Button} from 'react-bootstrap';\r\nimport { useCookies } from 'react-cookie';\r\nimport { API } from '../api-service';\r\nimport Signin from './Signin'; \r\nimport { useHistory } from \"react-router-dom\";\r\nimport Popup from '../components/Popup';\r\nimport '../index.css';\r\nimport UpdateUserDetails from '../components/UpdateUserDetails'\r\nconst axios = require('axios');\r\n\r\n\r\nconst UserProfile = () => {\r\n    console.log(\"hiiiiiiiiii\");\r\n    // const history = useHistory();\r\n    // const handleRoute = () =>{ \r\n    //     history.push(\"/UpdateUserDetails\");\r\n    //   }\r\n    const [token] = useCookies(['mr-token']);\r\n    const search = window.location.search; // returns the URL query String\r\n    const params = new URLSearchParams(search); \r\n    const IdFromURL = params.get('id');\r\n    const IdUserFromURL = params.get('idUser');\r\n    const IdClassFromURL = params.get('idClass');\r\n    const [user,setUser] = useState([]);\r\n   // const [courses,setCourses] = useState([]);\r\n    const [userCourses, setUserCourses] = useState([]);\r\n    const [actionsPopup, setActionsPopup] = useState(false);\r\n    //   test\r\n    //const [studentsInClass, setsStudentsInClass] = useState([]);\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        console.log(\"id from url is: \", IdFromURL)\r\n        API.getUserProfileById(IdFromURL)\r\n         .then(resp => setUser(resp))  \r\n         .catch( error => console.log(error)) \r\n\r\n\r\n          //get all the courses of the selected user \r\n          API.getAllCoursesByUserId(IdUserFromURL) \r\n            .then(resp => getCourseName(resp.results)) \r\n            .catch( error => console.log(error))\r\n    }, [])\r\n\r\n    const getCourseName = (courses) =>{\r\n      console.log(\"in fun\",courses)\r\n      courses.map(course => { \r\n          API.getCourses(course.course) \r\n               .then(resp => setUserCourses((userCourses) => [...userCourses, resp]))\r\n   })     \r\n  }\r\n    // const getCourseName = (courses) =>{\r\n    //     console.log(\"in fun\",courses)\r\n    //     courses.map(course => { \r\n\r\n    //         API.getCourses(course.course) \r\n\r\n    //              .then(resp => setUserCourses((userCourses) => [...userCourses, resp]))\r\n\r\n    //  }) \r\n    \r\n    // }\r\n    \r\n    const backToClass= () =>  {\r\n      window.location.href ='/TeachersScreen?class=' + IdClassFromURL;\r\n      }\r\n      const actions= () =>  {\r\n        setActionsPopup(true)\r\n        }\r\n        const checkAssignments= () =>  {\r\n          window.location.href ='/CheckUserAssignments?id=' + IdUserFromURL;\r\n          }\r\n\r\n\r\n    return(\r\n        <div className=\"App\">\r\n        <header className=\"Header\"> הדף של {user.firstName}  {user.lastName}</header>\r\n        <div className=\"profile\">\r\n            <div>\r\n        <h4>שם משתמש:</h4>\r\n         <p>{user.username}</p>\r\n         {console.log(\"user data: \",user)}\r\n\r\n         {/* test */}\r\n         {/* {console.log(\"user class is: \",user.studentClasses && user.studentClasses[0].className)}\r\n         {console.log(\"the students in class number 2 are: \",studentsInClass)} */}\r\n        \r\n         <br/>\r\n\r\n         <h4>שם פרטי: </h4>\r\n         <p>{user.firstName}</p>\r\n         <br/>\r\n\r\n       <h4>שם משפחה:</h4>\r\n       <p>{user.lastName}</p>\r\n       </div>\r\n        <div>\r\n        {/* <h4>דואר אלקטרוני:</h4>\r\n       <p>{user.email}</p> */}\r\n         \r\n       <h4>קצת עליי..</h4>\r\n       <p>{user.aboutMe}</p>\r\n\r\n       <h4>הקורסים שלי:</h4>\r\n        { userCourses.map(course => { \r\n                return <p>                \r\n                  <p>\r\n                  {course.name} </p>                           \r\n            </p>                \r\n          })}\r\n      \r\n      <h4>הכיתות שלי:</h4>\r\n      { user.studentClasses && user.studentClasses.map(userClass => { \r\n                return <p>              \r\n                  <p>\r\n                  {userClass.className} </p>                             \r\n             </p>                \r\n          })} \r\n\r\n\r\n      \r\n       </div>\r\n       <div>\r\n       <h4>תחביבים:</h4>\r\n       <p>{user.hobbies}</p>\r\n       <br/>\r\n       <h4>הבאדג'ים שלך:</h4>\r\n         <p>{user.badges}</p>\r\n        \r\n         <br/>\r\n         <h4>המטרה שלי:</h4>\r\n         <p>{user.myGoal}</p>\r\n       </div>\r\n       </div>\r\n       <button onClick={actions}>פעולות</button><br/>\r\n        <button onClick={backToClass}>חזרה לכיתה</button>\r\n        <Popup trigger={actionsPopup} setTrigger={setActionsPopup}>\r\n  {<button onClick={() => checkAssignments()}>בדוק מטלות</button>}<br/>\r\n  {<button onClick={() => backToClass()}>הוסף לתת קבוצה</button>}<br/>\r\n  {<button onClick={() => backToClass()}>הענק תג</button>}\r\n</Popup>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default UserProfile;","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\UserRegistration.js",["229","230","231","232","233","234"],"import React, {useEffect, useState} from 'react';\r\nimport { API } from '../api-service';\r\nimport { useCookies } from 'react-cookie';\r\nimport validator from 'validator'\r\n\r\nfunction UserRegistration(){\r\n    \r\n    const[username, setUsername ] = useState('');\r\n    const[password, setPassword ] = useState('');\r\n    const[firstName, setFirstName ] = useState('');\r\n    const[lastName, setLastaName ] = useState('');\r\n    const[errorMessage, setErrorMessage ] = useState('');\r\n    const[token, setToken] = useCookies(['mr-token']);\r\n    const search = window.location.search; // returns the URL query String\r\n    const params = new URLSearchParams(search); \r\n    const IdFromURL = params.get('username');\r\n    const IdClassFromURL = params.get('idClass');\r\n    const [checked, setChecked] = React.useState(false);\r\n\r\n    const handleChange = () => {\r\n      setChecked(!checked);\r\n    };\r\n   \r\n    useEffect( () =>{\r\n        setUsername(IdFromURL);\r\n      }, [])\r\n\r\n      function sleep(time){\r\n        return new Promise((resolve)=>setTimeout(resolve,time)\r\n      )\r\n  }\r\n\r\n      const backToClass= () =>  {\r\n        window.location.href ='/TeachersScreen?class=' + IdClassFromURL;\r\n        }\r\n\r\n    const registerClicked = () =>  {\r\n         // checke if all the values correct\r\n        if (!validator.isEmail(username))\r\n            setErrorMessage('שם משתמש לא חוקי');\r\n        else if (password==\"\")   \r\n            setErrorMessage('הכנס סיסמא');\r\n        else if (firstName==\"\")   \r\n            setErrorMessage('הכנס שם פרטי');\r\n        else if (lastName==\"\")  \r\n            setErrorMessage('הכנס שם משפחה');\r\n        else{\r\n            setErrorMessage('');\r\n            API.registerUser({username, password})\r\n                .then( resp => console.log(resp))\r\n                .then(createUserProfile)\r\n                .then(setUsername(''))\r\n                .then(setPassword(''))\r\n                .then(setErrorMessage(` ${firstName} נרשם בהצלחה `))\r\n                .then(setFirstName(''))\r\n                .then(setLastaName(''))               \r\n                .catch( error => console.log(error)) \r\n            if (checked)\r\n            {\r\n                sleep(1000).then(()=>{\r\n                console.log(\"checked!\",IdClassFromURL+ \" \"+ username )\r\n                API.addStudentToClass(IdClassFromURL, username);\r\n                })\r\n            }\r\n        }    \r\n    }\r\n    const createUserProfile =  () => {       \r\n        sleep(100).then(()=>{\r\n        API.registerUserProfile(username, firstName, lastName)\r\n            .then( resp => console.log(resp))                \r\n            .catch( error => console.log(error)) \r\n        })\r\n    }\r\n\r\n    return (\r\n          <div className=\"App\">\r\n           <h1>הרשמת משתמשים</h1>\r\n             <p style={{color : errorMessage.includes(\"נרשם בהצלחה\") ? \"green\" : \"red\"}}>{errorMessage}</p>\r\n             <label htmlFor=\"username\">Username</label><br/>\r\n             <input id=\"username\" type=\"text\" placeholder=\"username\" value={username}\r\n                     onChange={ evt=> setUsername(evt.target.value)}   \r\n              /><br/>\r\n             <label htmlFor=\"password\">Password</label><br/>\r\n              <input id=\"password\" type=\"password\" placeholder=\"password\" value={password}\r\n                     onChange={ evt=> setPassword(evt.target.value)}/><br/>\r\n             <label htmlFor=\"firstName\">שם פרטי</label><br/>\r\n             <input id=\"firstName\" type=\"text\" placeholder=\" \" value={firstName}\r\n                     onChange={ evt=> setFirstName(evt.target.value)}   \r\n              /><br/>\r\n             <label htmlFor=\"lastName\">שם משפחה</label><br/>\r\n              <input id=\"lastName\" type=\"text\" placeholder=\" \" value={lastName}\r\n                     onChange={ evt=> setLastaName(evt.target.value)}/><br/>\r\n              <br/>\r\n              <label>\r\n              <input type=\"checkbox\"  checked={checked}\r\n               onChange={handleChange}/>\r\n               שייך לכיתה\r\n              </label><br/>\r\n                <button onClick={registerClicked}>רשום משתמש</button><br/><br/>\r\n                <button onClick={backToClass}>חזרה לכיתה</button>\r\n\r\n            </div>\r\n    \r\n      )\r\n\r\n}\r\nexport default UserRegistration;\r\n\r\n","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\CheckUserAssignments.js",["235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262"],"import Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\nimport React, {useEffect, useState} from 'react';\r\nimport { useCookies } from 'react-cookie';\r\nimport { API } from '../api-service';\r\nimport '../index.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport Popup from '../components/Popup';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport HomepageScreen from './HomepageScreen';\r\n\r\nconst CheckUserAssignments = () => {\r\n  const[token] = useCookies(['mr-token']);\r\n   const [user,setUser] = useState([]);\r\n   const [userCourses, setUserCourses] = useState([]);\r\n   const [userAnswers, setUserAnswers] = useState([]);\r\n   const [selectedCourse, setSelectedCourse] = useState();\r\n   const [studentInClass, setsStudentsInClass] = useState([]);\r\n   const [teachersInClass, setsTeachersInClass] = useState([]);\r\n   const [coordinatorsInClass, setsCoordinatorsInClass] = useState([]);\r\n   const search = window.location.search; // returns the URL query String\r\n   const params = new URLSearchParams(search); \r\n   const IdUserFromURL = params.get('id');\r\n   const lessonsList =[];\r\n   const options=[];\r\n   const defaultOption = '';\r\n   const[answerPopup, setAnswerPopup ] = useState(false); \r\n   const[selectedLesson, setSelectedLesoon ] = useState(); \r\n   \r\n\r\n  useEffect(() =>{\r\n    if(!token['mr-token']) window.location.href = '/Signin';\r\n    //console.log(\"idfromurl is: \", IdClassFromURL)\r\n    API.getUserDetails(token['mr-token'])\r\n      .then(resp => setUser(resp.results))  \r\n      .catch( error => console.log(error))\r\n   \r\n    sleep(1000).then(()=>{\r\n    //get all the courses belong to the selected user\r\n     API.getAllCoursesByUserId(IdUserFromURL)\r\n        .then(resp => getCourseName(resp.results)) \r\n        .catch( error => console.log(error))\r\n      })\r\n    \r\n    }, [])\r\n\r\n    const getCourseName = (courses) =>{\r\n        courses.map(course => { \r\n            API.getCourses(course.course) \r\n                 .then(resp => setUserCourses((userCourses) => [...userCourses, resp]))\r\n     })     \r\n    }\r\n\r\n\r\n      function sleep(time){\r\n        return new Promise((resolve)=>setTimeout(resolve,time)\r\n      )\r\n  }\r\n\r\n\r\n    // const getCourseDetails= () =>  { \r\n    //     API.getUserAnswersById(IdUserFromURL)\r\n    //     .then(resp => setUserAnswers(resp.results)) \r\n    //     .catch( error => console.log(error)) \r\n    //     sleep(1000).then(()=>{\r\n    //         console.log(userAnswers)\r\n    //     })\r\n    // }\r\n\r\n    function handleChange(event) {\r\n      console.log(\"event is: \",event);\r\n      \r\n      for (var i = 0; i < options.length; i++) {\r\n        if(options[i].value == event.value ){\r\n          console.log(options[i].key);\r\n          setSelectedCourse(options[i].key);\r\n        //   getCourseDetails()\r\n\r\n          break;\r\n        }\r\n    } \r\n         }\r\n         const showFullAnswer = (lessonId) =>{\r\n            API.getUserAnswersById(IdUserFromURL, lessonId)\r\n             .then(resp => setUserAnswers(resp.results)) \r\n             .catch( error => console.log(error)) \r\n            sleep(1000).then(()=>{\r\n            console.log(userAnswers)\r\n            })\r\n         setSelectedLesoon(lessonId)\r\n         setAnswerPopup(true)\r\n         }\r\n \r\n    return (   \r\n\r\n    <div className=\"App\">\r\n\r\n      <h1>בדיקת מטלות</h1>\r\n      {/* insert to options all the courses belong to this user this user.\r\n      insert the course id as a key and the course name as the value.\r\n      the value will be shown in the dropdown */}\r\n      { userCourses.map(course => {\r\n         \r\n          {console.log(\"course is: \",course)}\r\n                  {options.push({key:course.id,value:course.name})}       \r\n          })}\r\n    \r\n    {/* the dropdown will hold the courses of the user and will display them by their names*/}\r\n    <Dropdown className='dropdown' options={options} value={defaultOption} label={defaultOption.key} onChange={handleChange}  placeholder=\"בחר קורס\" />\r\n    <div className=\"profile\">\r\n    <div>\r\n    <h3>שיעורים:</h3>\r\n\r\n \r\n\r\n      { userCourses.map(course => { \r\n              if(course.id === selectedCourse){\r\n      \r\n                {lessonsList.push(course.lessons)}\r\n               \r\n                return <p>{course.lessons.map((lesson) =>\r\n\r\n                <p>\r\n                <p> { lesson.name } </p> \r\n                <button onClick={() => showFullAnswer(lesson.id)}>הצג תשובה לשיעור זה</button>\r\n                <br/></p>\r\n\r\n             )} </p>\r\n             \r\n                }     \r\n          })}\r\n</div>\r\n      <div>\r\n       {/* show on the screen the assignments belong to the chosen course\r\n      <h3>מטלות:</h3>\r\n      { userCourses.map(course => { \r\n              if(course.id === selectedCourse){\r\n      \r\n                {lessonsList.push(course.lessons)}\r\n               \r\n                return <p>{course.lessons.map((lesson) =>\r\n\r\n                <p>\r\n                <p > { lesson.assignment==\"null\"? \"אין מטלה לשיעור זה\": lesson.assignment } </p> <br/></p>\r\n\r\n             )} </p>\r\n                }     \r\n          })} */}\r\n\r\n\r\n\r\n\r\n             \r\n</div>\r\n<div>\r\n{/* <h3>תשובות:</h3> */}\r\n{/* <button onClick={showAnswer}>הצג תשובה לשיעור זה</button> */}\r\n{/* {userAnswers && userAnswers.map(lesson => { \r\n               return <p>\r\n               <p >{lesson.answer}</p> <br/>\r\n               <a href={lesson.link}>{lesson.link}</a>\r\n               </p>              \r\n              })} */}\r\n    \r\n  </div>\r\n\r\n    </div>\r\n       <Popup trigger={answerPopup} setTrigger={setAnswerPopup}>\r\n    \r\n\r\n      \r\n       <h3>מטלה</h3>\r\n{/* display the assignmnet for the selected lesson */}\r\n      { userCourses.map(course => { \r\n              if(course.id === selectedCourse){\r\n                {lessonsList.push(course.lessons)}               \r\n                return <p>{course.lessons.map((lesson) =>\r\n                  \r\n                  { if (lesson.id === selectedLesson){\r\n                  {console.log(\"i am here!!!!!!\")}\r\n                  {console.log(lesson.id)}\r\n                  {console.log(lesson.assignment)}\r\n                  \r\n                  \r\n                // <p>                  \r\n                    return <p > { lesson.assignment==\"null\"? \"אין מטלה לשיעור זה\": lesson.assignment } </p>              \r\n                      // </p>\r\n                    }}\r\n                  )} </p>\r\n                }     \r\n          })}<br/>\r\n\r\n<h3>אלו התשובות עבור שיעור זה</h3>\r\n{/* display the answers for the selected lesson including image and link if attached */}\r\n{userAnswers && userAnswers.map(lesson => { \r\n               return <p>\r\n              \r\n\r\n              \r\n               <p>{lesson.answer}</p> <br/>\r\n               <a href={lesson.link}>{lesson.link}</a> <br/><br/>\r\n               <img src={\"http://127.0.0.1:8000\"+lesson.image} width='100' \r\n                height='100'></img>\r\n               </p>              \r\n              })}\r\n        \r\n    </Popup>\r\n   \r\n    </div>\r\n     \r\n   \r\n   \r\n   \r\n  );\r\n  \r\n};\r\n\r\nexport default CheckUserAssignments;","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\ClassReport.js",["263","264","265","266","267","268","269","270","271","272","273","274","275","276"],"import 'react-dropdown/style.css';\r\nimport React, {useEffect, useState} from 'react';\r\nimport { useCookies } from 'react-cookie';\r\nimport { API } from '../api-service';\r\nimport '../index.css';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst TeachersScreen = () => {\r\n  const[token] = useCookies(['mr-token']);\r\n  const [user,setUser] = useState([]);\r\n  const [selectedClass, setSelectedClass] = useState();\r\n  const [studentInClass, setsStudentsInClass] = useState([]);\r\n  const search = window.location.search; // returns the URL query String\r\n  const params = new URLSearchParams(search); \r\n  const IdClassFromURL = params.get('idClass');\r\n  const [userCourses, setUserCourses] = useState([]);\r\n  const [courses, setCourses] = useState([]);\r\n  const [currentCourseName, setCurrentCourseName] = useState();\r\n  const studentsList =[];\r\n  \r\n\r\n  \r\n\r\n//   useEffect(() =>{\r\n//     if(!token['mr-token']) window.location.href = '/Signin';\r\n//     console.log(\"idfromurl is: \", IdClassFromURL)\r\n//     API.getUserDetails(token['mr-token'])\r\n//       .then(resp => setUser(resp.results))  \r\n//       .catch( error => console.log(error))\r\n    \r\n//     // API.getClassStudentsByID(IdClassFromURL)\r\n//     //   .then(resp => setsStudentsInClass(resp.results)) \r\n//     //   .catch( error => console.log(error))  \r\n    \r\n//     // getDataOfClass(IdClassFromURL);\r\n//     }, [])\r\n\r\n       \r\n        useEffect(() =>{\r\n            getDataOfClass(IdClassFromURL);\r\n            getAllUserCourses()\r\n            getAllCourses()\r\n            }, [IdClassFromURL])\r\n\r\n    function sleep(time){\r\n        return new Promise((resolve)=>setTimeout(resolve,time)\r\n      )\r\n  }\r\n\r\n    const getDataOfClass= (numOfClass) =>  { \r\n      console.log(\"2- class is: \", numOfClass)\r\n      API.getClassStudentsByID(numOfClass)\r\n      .then(resp => setsStudentsInClass(resp.results)) \r\n      .catch( error => console.log(error))\r\n    //   API.getClassTeacherssByID(numOfClass)\r\n    //   .then(resp => setsTeachersInClass(resp.results)) \r\n    //   .catch( error => console.log(error))\r\n    //   API.getClassCoordinatorsByID(numOfClass)\r\n    //   .then(resp => setsCoordinatorsInClass(resp.results)) \r\n    //   .catch( error => console.log(error))\r\n      }\r\n\r\n      // const getCourses = (studentId) =>{\r\n      //     console.log(\"id is: \", studentId)\r\n      //   //get all the courses of the selected user  \r\n      //   API.getAllCoursesByUserId(studentId) \r\n      //     .then(resp =>setUserCourses(resp.results))\r\n      //     //  .then(resp => getCourseName(resp.results))\r\n      //   // .then(resp => console.log(resp.results))  \r\n      //    .catch( error => console.log(error))\r\n      // }\r\n      const getAllUserCourses = () =>{        \r\n      API.getAllUserCourses() \r\n        // .then(resp =>console.log(\"results are: \",resp))\r\n        .then(resp =>setUserCourses(resp))\r\n        .catch( error => console.log(error))\r\n    }\r\n\r\n    const getAllCourses = () =>{        \r\n      API.getAllCourses() \r\n     \r\n        .then(resp =>setCourses(resp))\r\n        .catch( error => console.log(error))\r\n    }\r\n\r\n      const getCourseName = (courses) =>{\r\n        console.log(\"in fun\",courses)\r\n        courses.map(course => { \r\n            API.getCourses(course.course) \r\n                 .then(resp => setUserCourses((userCourses) => [...userCourses, resp]))\r\n     })     \r\n    }\r\n    const getCoursename = (course) =>{\r\n          API.getCourses(course.course) \r\n          .then(resp => setCurrentCourseName(resp)) \r\n    \r\n  }\r\n     \r\n\r\n    return (   \r\n    \r\n    <div className=\"App\">     \r\n       { user.userType==\"1\"? window.location.href = '/Homepagescreen': \" \"}    \r\n      <h1>דוח כיתה</h1>     \r\n      <h3>:תלמידים</h3>\r\n      \r\n       {/*add the usernames of all the students of the selected class */}\r\n       {studentInClass.map(student => { \r\n        \r\n    //    { getCourses(student.user)} \r\n    {studentsList.push(student.user)}\r\n                    return <p>\r\n                        \r\n                        \r\n                         &nbsp;\r\n                         <h5>\r\n                           {/* {console.log(student)} */}\r\n                        {student.firstName+ \" \"+ student.lastName}\r\n                        </h5>\r\n                        {/* &nbsp; */}\r\n                        {/* {student.courses && student.courses.map(course => {\r\n                          return  <span >{course.course}</span>\r\n                        })} */}\r\n                        {/* {userCourses.map(course => { \r\n                                return <p>                \r\n                                  <p>\r\n                                     \r\n                                  {student.courses && student.courses[0]+\" \"+course.name} </p>                           \r\n                            </p> })}    */}\r\n                        {/* { getCourses(student.user)} */}\r\n                        \r\n                            \r\n                             {console.log(\"courses list: \",userCourses)}\r\n                             {userCourses.map(course => { \r\n                                return  <p>              \r\n                                 {/* //working */}\r\n                                 {/* <p> {course.user==student.user?   course.course+\" (\"+course.numOfLesson+\")\": \"\"}</p>  */}\r\n                                  {course.user==student.user?  courses.map(c => {\r\n                                   return <p>{course.course==c.id? c.name+\" (\"+course.numOfLesson+\")\": \"\"} </p>\r\n                                 \r\n                               \r\n                                 }):\"\"} \r\n                                 </p> \r\n                                })}\r\n                                <br/></p>                      \r\n                              })}\r\n\r\n                              </div> \r\n);  \r\n                            };\r\n                                //  </p> \r\n                                //  course.course+\" (\"+course.numOfLesson+\")\": \"\"}</p> \r\n                                  // {/* <p>\r\n                                  // {currentCourseName && currentCourseName.name}</p> */}\r\n                                                             \r\n                            // </p>              \r\n                    \r\n                           \r\n                         \r\n                        \r\n                        // {/* { API.getAllCoursesByUserId(student.id) \r\n                        //     .then(resp => getCourseName(resp.results)) \r\n                        //     .catch( error => console.log(error))} */}\r\n                         \r\n                         \r\n//                         {/* {console.log(student)}\r\n//                         {sleep(100).then(()=>{\r\n//                             <span >\r\n//                             {/* {userCourses} */}\r\n//                             {/* </span> */}\r\n//                            {/* })}  */}\r\n                        \r\n                         \r\n                      \r\n            \r\n//        {/*the line below make an infinite loop! */}\r\n//        {/* {getCourses(studentsList[0])} */}\r\n//       {/* {userCourses.length}\r\n//       <br/>    \r\n//       {studentsList.length} \r\n//       <br/>    \r\n//       {studentsList[0]}  */}\r\n//       {/* {getCourses(20)}      */}\r\n//  {/* {userCourses.map(course => { \r\n//                                 return <p>                \r\n//                                   <p>\r\n                                     \r\n//                                   {course.name} </p>                           \r\n//                             </p> })}           */}\r\n\r\n\r\n\r\n              // {console.log(\"courses list: \",userCourses)}\r\n          //     {/* <p>\r\n          //         sdfdfs </p>  \r\n          //     { userCourses.map(course => { \r\n          //       return <p>                \r\n          //         <p>\r\n          //         {course.name} </p>                           \r\n          //   </p>                 */}\r\n          // {/* })} */}\r\n\r\n   \r\n  \r\nexport default TeachersScreen;","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\ClassReportNew.js",["277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296"],"import 'react-dropdown/style.css';\r\nimport React, {useEffect, useState} from 'react';\r\nimport { useCookies } from 'react-cookie';\r\nimport { API } from '../api-service';\r\nimport '../index.css';\r\nimport '../Report.css';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst TeachersScreen = () => {\r\n  const[token] = useCookies(['mr-token']);\r\n  const [user,setUser] = useState([]);\r\n  const [selectedClass, setSelectedClass] = useState();\r\n  const [studentInClass, setsStudentsInClass] = useState([]);\r\n  const search = window.location.search; // returns the URL query String\r\n  const params = new URLSearchParams(search); \r\n  const IdClassFromURL = params.get('idClass');\r\n  const [userCourses, setUserCourses] = useState([]);\r\n  const [courses, setCourses] = useState([]);\r\n  const [currentCourseName, setCurrentCourseName] = useState();\r\n  const studentsList =[];\r\n  const [courseFound, setCourseFound] = useState(false);\r\n\r\n  \r\n\r\n//   useEffect(() =>{\r\n//     if(!token['mr-token']) window.location.href = '/Signin';\r\n//     console.log(\"idfromurl is: \", IdClassFromURL)\r\n//     API.getUserDetails(token['mr-token'])\r\n//       .then(resp => setUser(resp.results))  \r\n//       .catch( error => console.log(error))\r\n    \r\n//     // API.getClassStudentsByID(IdClassFromURL)\r\n//     //   .then(resp => setsStudentsInClass(resp.results)) \r\n//     //   .catch( error => console.log(error))  \r\n    \r\n//     // getDataOfClass(IdClassFromURL);\r\n//     }, [])\r\n\r\n       \r\n        useEffect(() =>{\r\n            getDataOfClass(IdClassFromURL);\r\n            getAllUserCourses()\r\n            getAllCourses()\r\n            }, [IdClassFromURL])\r\n\r\n    function sleep(time){\r\n        return new Promise((resolve)=>setTimeout(resolve,time)\r\n      )\r\n  }\r\n\r\n    const getDataOfClass= (numOfClass) =>  { \r\n      console.log(\"2- class is: \", numOfClass)\r\n      API.getClassStudentsByID(numOfClass)\r\n      .then(resp => setsStudentsInClass(resp.results)) \r\n      .catch( error => console.log(error))\r\n    //   API.getClassTeacherssByID(numOfClass)\r\n    //   .then(resp => setsTeachersInClass(resp.results)) \r\n    //   .catch( error => console.log(error))\r\n    //   API.getClassCoordinatorsByID(numOfClass)\r\n    //   .then(resp => setsCoordinatorsInClass(resp.results)) \r\n    //   .catch( error => console.log(error))\r\n      }\r\n\r\n      // const getCourses = (studentId) =>{\r\n      //     console.log(\"id is: \", studentId)\r\n      //   //get all the courses of the selected user  \r\n      //   API.getAllCoursesByUserId(studentId) \r\n      //     .then(resp =>setUserCourses(resp.results))\r\n      //     //  .then(resp => getCourseName(resp.results))\r\n      //   // .then(resp => console.log(resp.results))  \r\n      //    .catch( error => console.log(error))\r\n      // }\r\n      const getAllUserCourses = () =>{        \r\n      API.getAllUserCourses() \r\n        // .then(resp =>console.log(\"results are: \",resp))\r\n        .then(resp =>setUserCourses(resp))\r\n        .catch( error => console.log(error))\r\n    }\r\n\r\n    const getAllCourses = () =>{        \r\n      API.getAllCourses() \r\n     \r\n        .then(resp =>setCourses(resp))\r\n        .catch( error => console.log(error))\r\n    }\r\n\r\n      const getCourseName = (courses) =>{\r\n        console.log(\"in fun\",courses)\r\n        courses.map(course => { \r\n            API.getCourses(course.course) \r\n                 .then(resp => setUserCourses((userCourses) => [...userCourses, resp]))\r\n     })     \r\n    }\r\n//     const courseFound1 = () =>{\r\n//         setCourseFound(true)  \r\n// }\r\n\r\n    const getCoursename = (course) =>{\r\n          API.getCourses(course.course) \r\n          .then(resp => setCurrentCourseName(resp))   \r\n  }\r\n  const data = [\r\n    { name: \"Anom\", age: 19, gender: \"Male\" },\r\n    { name: \"Megha\", age: 19, gender: \"Female\" },\r\n    { name: \"Subham\", age: 25, gender: \"Male\"},\r\n  ]\r\n     \r\n\r\n    return (   \r\n    \r\n    // <div className=\"App\">     \r\n    //    { user.userType==\"1\"? window.location.href = '/Homepagescreen': \" \"}    \r\n    //   <h1>דוח כיתה</h1>     \r\n    //   <h3>:תלמידים</h3>\r\n      \r\n    //    {/*add the usernames of all the students of the selected class */}\r\n    //    {studentInClass.map(student => { \r\n        \r\n   \r\n    // {studentsList.push(student.user)}\r\n    //                 return <p>\r\n                        \r\n                        \r\n    //                      &nbsp;\r\n    //                      <h5>\r\n                    \r\n    //                     {student.firstName+ \" \"+ student.lastName}\r\n    //                     </h5>\r\n\r\n                        \r\n                            \r\n    //                          {console.log(\"courses list: \",userCourses)}\r\n    //                          {userCourses.map(course => { \r\n    //                             return  <p>              \r\n    //                              {/* //working */}\r\n    //                              {/* <p> {course.user==student.user?   course.course+\" (\"+course.numOfLesson+\")\": \"\"}</p>  */}\r\n    //                               {course.user==student.user?  courses.map(c => {\r\n    //                                return <p>{course.course==c.id? c.name+\" (\"+course.numOfLesson+\")\": \"\"} </p>\r\n                                 \r\n                               \r\n    //                              }):\"\"} \r\n    //                              </p> \r\n    //                             })}\r\n    //                             <br/></p>                      \r\n    //                           })}\r\n\r\n    //                           </div>\r\n    <div className=\"Report\">\r\n      <table>\r\n        <tr>\r\n          <th>תלמיד</th>\r\n          {courses.map(course => {\r\n          return (\r\n            // <tr>\r\n          <th>{course.name}</th>      \r\n        )\r\n        \r\n    })}\r\n    </tr>\r\n        {/* {data.map((val, key) => {\r\n          return (\r\n            <tr key={key}>\r\n              <td>{val.name}</td>\r\n              <td>{val.age}</td>\r\n              <td>{val.gender}</td>\r\n            </tr>\r\n          )\r\n        })} */}\r\n         {studentInClass.map(student => {\r\n          return <tr>\r\n            \r\n              <td>{student.firstName+ \" \"+ student.lastName}</td>\r\n              \r\n              {/* </tr> */}\r\n        \r\n        {/* go through all the courses in the list and check if the user has benn registerd to the course */}\r\n        {courses.map(c => { \r\n            var foundCourse = false;\r\n            return <td>\r\n                {userCourses.map(course => {\r\n                    if(course.course==c.id && course.user==student.user)\r\n                    {\r\n                        foundCourse = true;\r\n                        return <td>{course.numOfLesson}</td>\r\n                    }\r\n                    // return <td>{course.user==student.user && course.course==c.id? course.numOfLesson:\"\"}</td> \r\n                    //  return<td>{course.course==c.id && course.user==student.user? () =>setCourseFound(true)+course.numOfLesson :\"\" }</td>\r\n                    //working -  return<td>{course.course==c.id && course.user==student.user? course.numOfLesson:\"\" }</td>\r\n\r\n                })} \r\n              \r\n              <td>{foundCourse?\"\":\"לא רשומ/ה\"}</td>\r\n              {/* <td>{\"אין\"}</td> */}\r\n              \r\n              </td>\r\n            {/* </tr> */}\r\n            \r\n})}\r\n\r\n            {/* {userCourses.map(course => { \r\n                return <tr> */}\r\n                {/*go through all the list of UserCourse and continue if the course belong to the current student  */}\r\n                {/* {course.user==student.user?  courses.map(c => {\r\n                return <td>{course.course==c.id? course.numOfLesson: <tr><td>{\"אין\"}</td></tr>}</td>\r\n                }):\"\"} \r\n                </tr> */}\r\n                {/* // )}\r\n            })}  */}\r\n            </tr>\r\n            })}\r\n      </table>\r\n    </div> \r\n);  \r\n                            };\r\n \r\n\r\n   \r\n  \r\nexport default TeachersScreen;","C:\\Users\\yarin\\Documents\\GitHub\\yarin\\Matazim-FrontEnd\\src\\pages\\TeacherReport.js",["297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318"],{"ruleId":"319","replacedBy":"320"},{"ruleId":"321","replacedBy":"322"},{"ruleId":"323","severity":1,"message":"324","line":2,"column":16,"nodeType":"325","messageId":"326","endLine":2,"endColumn":25},{"ruleId":"323","severity":1,"message":"327","line":25,"column":10,"nodeType":"325","messageId":"326","endLine":25,"endColumn":15},{"ruleId":"323","severity":1,"message":"328","line":25,"column":17,"nodeType":"325","messageId":"326","endLine":25,"endColumn":25},{"ruleId":"323","severity":1,"message":"329","line":25,"column":27,"nodeType":"325","messageId":"326","endLine":25,"endColumn":38},{"ruleId":"323","severity":1,"message":"330","line":15,"column":11,"nodeType":"325","messageId":"326","endLine":15,"endColumn":25},{"ruleId":"331","severity":1,"message":"332","line":50,"column":26,"nodeType":"333","messageId":"334","endLine":50,"endColumn":28},{"ruleId":"331","severity":1,"message":"332","line":52,"column":27,"nodeType":"333","messageId":"334","endLine":52,"endColumn":29},{"ruleId":"331","severity":1,"message":"332","line":54,"column":26,"nodeType":"333","messageId":"334","endLine":54,"endColumn":28},{"ruleId":"323","severity":1,"message":"335","line":2,"column":10,"nodeType":"325","messageId":"326","endLine":2,"endColumn":19},{"ruleId":"323","severity":1,"message":"336","line":2,"column":20,"nodeType":"325","messageId":"326","endLine":2,"endColumn":23},{"ruleId":"323","severity":1,"message":"337","line":2,"column":24,"nodeType":"325","messageId":"326","endLine":2,"endColumn":27},{"ruleId":"323","severity":1,"message":"338","line":2,"column":28,"nodeType":"325","messageId":"326","endLine":2,"endColumn":32},{"ruleId":"323","severity":1,"message":"339","line":2,"column":34,"nodeType":"325","messageId":"326","endLine":2,"endColumn":40},{"ruleId":"323","severity":1,"message":"340","line":5,"column":8,"nodeType":"325","messageId":"326","endLine":5,"endColumn":14},{"ruleId":"323","severity":1,"message":"341","line":9,"column":8,"nodeType":"325","messageId":"326","endLine":9,"endColumn":25},{"ruleId":"323","severity":1,"message":"342","line":10,"column":7,"nodeType":"325","messageId":"326","endLine":10,"endColumn":12},{"ruleId":"323","severity":1,"message":"343","line":21,"column":12,"nodeType":"325","messageId":"326","endLine":21,"endColumn":19},{"ruleId":"323","severity":1,"message":"344","line":21,"column":20,"nodeType":"325","messageId":"326","endLine":21,"endColumn":30},{"ruleId":"323","severity":1,"message":"345","line":31,"column":12,"nodeType":"325","messageId":"326","endLine":31,"endColumn":27},{"ruleId":"323","severity":1,"message":"346","line":31,"column":29,"nodeType":"325","messageId":"326","endLine":31,"endColumn":48},{"ruleId":"347","severity":1,"message":"348","line":57,"column":8,"nodeType":"349","endLine":57,"endColumn":10,"suggestions":"350"},{"ruleId":"351","severity":1,"message":"352","line":61,"column":28,"nodeType":"353","messageId":"354","endLine":61,"endColumn":30},{"ruleId":"323","severity":1,"message":"355","line":31,"column":8,"nodeType":"325","messageId":"326","endLine":31,"endColumn":15},{"ruleId":"356","severity":1,"message":"357","line":46,"column":26,"nodeType":"358","messageId":"359","endLine":46,"endColumn":27,"suggestions":"360"},{"ruleId":"356","severity":1,"message":"357","line":46,"column":28,"nodeType":"358","messageId":"359","endLine":46,"endColumn":29,"suggestions":"361"},{"ruleId":"356","severity":1,"message":"362","line":46,"column":36,"nodeType":"358","messageId":"359","endLine":46,"endColumn":37,"suggestions":"363"},{"ruleId":"356","severity":1,"message":"362","line":46,"column":82,"nodeType":"358","messageId":"359","endLine":46,"endColumn":83,"suggestions":"364"},{"ruleId":"356","severity":1,"message":"365","line":46,"column":86,"nodeType":"358","messageId":"359","endLine":46,"endColumn":87,"suggestions":"366"},{"ruleId":"356","severity":1,"message":"362","line":46,"column":97,"nodeType":"358","messageId":"359","endLine":46,"endColumn":98,"suggestions":"367"},{"ruleId":"356","severity":1,"message":"362","line":46,"column":134,"nodeType":"358","messageId":"359","endLine":46,"endColumn":135,"suggestions":"368"},{"ruleId":"356","severity":1,"message":"365","line":46,"column":138,"nodeType":"358","messageId":"359","endLine":46,"endColumn":139,"suggestions":"369"},{"ruleId":"356","severity":1,"message":"357","line":46,"column":153,"nodeType":"358","messageId":"359","endLine":46,"endColumn":154,"suggestions":"370"},{"ruleId":"356","severity":1,"message":"357","line":46,"column":155,"nodeType":"358","messageId":"359","endLine":46,"endColumn":156,"suggestions":"371"},{"ruleId":"356","severity":1,"message":"362","line":46,"column":163,"nodeType":"358","messageId":"359","endLine":46,"endColumn":164,"suggestions":"372"},{"ruleId":"356","severity":1,"message":"362","line":46,"column":186,"nodeType":"358","messageId":"359","endLine":46,"endColumn":187,"suggestions":"373"},{"ruleId":"356","severity":1,"message":"365","line":46,"column":190,"nodeType":"358","messageId":"359","endLine":46,"endColumn":191,"suggestions":"374"},{"ruleId":"356","severity":1,"message":"362","line":46,"column":201,"nodeType":"358","messageId":"359","endLine":46,"endColumn":202,"suggestions":"375"},{"ruleId":"356","severity":1,"message":"362","line":46,"column":215,"nodeType":"358","messageId":"359","endLine":46,"endColumn":216,"suggestions":"376"},{"ruleId":"356","severity":1,"message":"365","line":46,"column":219,"nodeType":"358","messageId":"359","endLine":46,"endColumn":220,"suggestions":"377"},{"ruleId":"323","severity":1,"message":"378","line":47,"column":5,"nodeType":"325","messageId":"326","endLine":47,"endColumn":15},{"ruleId":"356","severity":1,"message":"362","line":47,"column":21,"nodeType":"358","messageId":"359","endLine":47,"endColumn":22,"suggestions":"379"},{"ruleId":"347","severity":1,"message":"380","line":72,"column":4,"nodeType":"349","endLine":72,"endColumn":6,"suggestions":"381"},{"ruleId":"382","severity":1,"message":"383","line":151,"column":2,"nodeType":"384","messageId":"385","endLine":151,"endColumn":118},{"ruleId":"331","severity":1,"message":"386","line":159,"column":50,"nodeType":"333","messageId":"334","endLine":159,"endColumn":52},{"ruleId":"331","severity":1,"message":"332","line":190,"column":22,"nodeType":"333","messageId":"334","endLine":190,"endColumn":24},{"ruleId":"382","severity":1,"message":"383","line":194,"column":5,"nodeType":"384","messageId":"385","endLine":200,"endColumn":8},{"ruleId":"382","severity":1,"message":"383","line":195,"column":7,"nodeType":"384","messageId":"385","endLine":195,"endColumn":42},{"ruleId":"382","severity":1,"message":"383","line":196,"column":7,"nodeType":"384","messageId":"385","endLine":196,"endColumn":42},{"ruleId":"387","severity":1,"message":"388","line":197,"column":47,"nodeType":"389","messageId":"390","endLine":197,"endColumn":48},{"ruleId":"323","severity":1,"message":"391","line":209,"column":10,"nodeType":"325","messageId":"326","endLine":209,"endColumn":15},{"ruleId":"382","severity":1,"message":"383","line":229,"column":3,"nodeType":"384","messageId":"385","endLine":232,"endColumn":6},{"ruleId":"387","severity":1,"message":"388","line":230,"column":47,"nodeType":"389","messageId":"390","endLine":230,"endColumn":48},{"ruleId":"331","severity":1,"message":"332","line":245,"column":29,"nodeType":"333","messageId":"334","endLine":245,"endColumn":31},{"ruleId":"331","severity":1,"message":"332","line":247,"column":10,"nodeType":"333","messageId":"334","endLine":247,"endColumn":12},{"ruleId":"331","severity":1,"message":"332","line":251,"column":29,"nodeType":"333","messageId":"334","endLine":251,"endColumn":31},{"ruleId":"331","severity":1,"message":"332","line":258,"column":29,"nodeType":"333","messageId":"334","endLine":258,"endColumn":31},{"ruleId":"331","severity":1,"message":"332","line":266,"column":20,"nodeType":"333","messageId":"334","endLine":266,"endColumn":22},{"ruleId":"382","severity":1,"message":"383","line":284,"column":3,"nodeType":"384","messageId":"385","endLine":286,"endColumn":6},{"ruleId":"387","severity":1,"message":"388","line":285,"column":45,"nodeType":"389","messageId":"390","endLine":285,"endColumn":46},{"ruleId":"351","severity":1,"message":"392","line":357,"column":39,"nodeType":"353","messageId":"393","endLine":357,"endColumn":41},{"ruleId":"331","severity":1,"message":"332","line":358,"column":32,"nodeType":"333","messageId":"334","endLine":358,"endColumn":34},{"ruleId":"351","severity":1,"message":"392","line":394,"column":32,"nodeType":"353","messageId":"393","endLine":394,"endColumn":34},{"ruleId":"331","severity":1,"message":"332","line":395,"column":27,"nodeType":"333","messageId":"334","endLine":395,"endColumn":29},{"ruleId":"382","severity":1,"message":"383","line":397,"column":17,"nodeType":"384","messageId":"385","endLine":397,"endColumn":66},{"ruleId":"382","severity":1,"message":"383","line":398,"column":17,"nodeType":"384","messageId":"385","endLine":398,"endColumn":51},{"ruleId":"331","severity":1,"message":"332","line":401,"column":102,"nodeType":"333","messageId":"334","endLine":401,"endColumn":104},{"ruleId":"394","severity":1,"message":"395","line":505,"column":51,"nodeType":"396","endLine":506,"endColumn":15},{"ruleId":"397","severity":1,"message":"398","line":55,"column":1,"nodeType":"399","messageId":"334","endLine":68,"endColumn":2},{"ruleId":"397","severity":1,"message":"398","line":69,"column":1,"nodeType":"399","messageId":"334","endLine":82,"endColumn":2},{"ruleId":"397","severity":1,"message":"400","line":209,"column":21,"nodeType":"399","messageId":"334","endLine":217,"endColumn":26},{"ruleId":"397","severity":1,"message":"401","line":220,"column":25,"nodeType":"399","messageId":"334","endLine":229,"endColumn":30},{"ruleId":"397","severity":1,"message":"402","line":230,"column":25,"nodeType":"399","messageId":"334","endLine":240,"endColumn":34},{"ruleId":"397","severity":1,"message":"403","line":250,"column":37,"nodeType":"399","messageId":"334","endLine":257,"endColumn":42},{"ruleId":"397","severity":1,"message":"404","line":259,"column":25,"nodeType":"399","messageId":"334","endLine":273,"endColumn":34},{"ruleId":"397","severity":1,"message":"405","line":274,"column":33,"nodeType":"399","messageId":"334","endLine":285,"endColumn":34},{"ruleId":"397","severity":1,"message":"406","line":286,"column":33,"nodeType":"399","messageId":"334","endLine":296,"endColumn":34},{"ruleId":"397","severity":1,"message":"407","line":298,"column":33,"nodeType":"399","messageId":"334","endLine":308,"endColumn":38},{"ruleId":"397","severity":1,"message":"408","line":439,"column":44,"nodeType":"399","messageId":"334","endLine":447,"endColumn":49},{"ruleId":"323","severity":1,"message":"324","line":1,"column":17,"nodeType":"325","messageId":"326","endLine":1,"endColumn":26},{"ruleId":"323","severity":1,"message":"409","line":1,"column":28,"nodeType":"325","messageId":"326","endLine":1,"endColumn":36},{"ruleId":"323","severity":1,"message":"410","line":11,"column":3,"nodeType":"325","messageId":"326","endLine":11,"endColumn":13},{"ruleId":"323","severity":1,"message":"328","line":17,"column":18,"nodeType":"325","messageId":"326","endLine":17,"endColumn":26},{"ruleId":"331","severity":1,"message":"386","line":55,"column":56,"nodeType":"333","messageId":"334","endLine":55,"endColumn":58},{"ruleId":"331","severity":1,"message":"332","line":43,"column":24,"nodeType":"333","messageId":"334","endLine":43,"endColumn":26},{"ruleId":"347","severity":1,"message":"411","line":46,"column":8,"nodeType":"349","endLine":46,"endColumn":10,"suggestions":"412"},{"ruleId":"347","severity":1,"message":"413","line":51,"column":10,"nodeType":"349","endLine":51,"endColumn":16,"suggestions":"414"},{"ruleId":"331","severity":1,"message":"332","line":75,"column":29,"nodeType":"333","messageId":"334","endLine":75,"endColumn":31},{"ruleId":"331","severity":1,"message":"332","line":92,"column":27,"nodeType":"333","messageId":"334","endLine":92,"endColumn":29},{"ruleId":"351","severity":1,"message":"352","line":166,"column":68,"nodeType":"353","messageId":"354","endLine":166,"endColumn":70},{"ruleId":"331","severity":1,"message":"332","line":183,"column":23,"nodeType":"333","messageId":"334","endLine":183,"endColumn":25},{"ruleId":"331","severity":1,"message":"332","line":188,"column":22,"nodeType":"333","messageId":"334","endLine":188,"endColumn":24},{"ruleId":"351","severity":1,"message":"352","line":192,"column":65,"nodeType":"353","messageId":"354","endLine":192,"endColumn":67},{"ruleId":"382","severity":1,"message":"383","line":193,"column":19,"nodeType":"384","messageId":"385","endLine":193,"endColumn":83},{"ruleId":"382","severity":1,"message":"383","line":203,"column":7,"nodeType":"384","messageId":"385","endLine":203,"endColumn":34},{"ruleId":"382","severity":1,"message":"383","line":225,"column":25,"nodeType":"384","messageId":"385","endLine":227,"endColumn":40},{"ruleId":"415","severity":1,"message":"416","line":225,"column":25,"nodeType":"384","messageId":"417","endLine":231,"endColumn":30},{"ruleId":"382","severity":1,"message":"383","line":228,"column":7,"nodeType":"384","messageId":"385","endLine":230,"endColumn":59},{"ruleId":"382","severity":1,"message":"383","line":231,"column":7,"nodeType":"384","messageId":"385","endLine":231,"endColumn":30},{"ruleId":"331","severity":1,"message":"386","line":271,"column":24,"nodeType":"333","messageId":"334","endLine":271,"endColumn":26},{"ruleId":"331","severity":1,"message":"386","line":272,"column":47,"nodeType":"333","messageId":"334","endLine":272,"endColumn":49},{"ruleId":"323","severity":1,"message":"335","line":2,"column":10,"nodeType":"325","messageId":"326","endLine":2,"endColumn":19},{"ruleId":"323","severity":1,"message":"336","line":2,"column":20,"nodeType":"325","messageId":"326","endLine":2,"endColumn":23},{"ruleId":"323","severity":1,"message":"337","line":2,"column":24,"nodeType":"325","messageId":"326","endLine":2,"endColumn":27},{"ruleId":"323","severity":1,"message":"338","line":2,"column":28,"nodeType":"325","messageId":"326","endLine":2,"endColumn":32},{"ruleId":"323","severity":1,"message":"339","line":2,"column":34,"nodeType":"325","messageId":"326","endLine":2,"endColumn":40},{"ruleId":"323","severity":1,"message":"340","line":5,"column":8,"nodeType":"325","messageId":"326","endLine":5,"endColumn":14},{"ruleId":"323","severity":1,"message":"342","line":10,"column":7,"nodeType":"325","messageId":"326","endLine":10,"endColumn":12},{"ruleId":"323","severity":1,"message":"328","line":19,"column":19,"nodeType":"325","messageId":"326","endLine":19,"endColumn":27},{"ruleId":"323","severity":1,"message":"329","line":19,"column":29,"nodeType":"325","messageId":"326","endLine":19,"endColumn":40},{"ruleId":"323","severity":1,"message":"418","line":21,"column":11,"nodeType":"325","messageId":"326","endLine":21,"endColumn":16},{"ruleId":"347","severity":1,"message":"348","line":34,"column":8,"nodeType":"349","endLine":34,"endColumn":10,"suggestions":"419"},{"ruleId":"323","severity":1,"message":"335","line":2,"column":10,"nodeType":"325","messageId":"326","endLine":2,"endColumn":19},{"ruleId":"323","severity":1,"message":"336","line":2,"column":20,"nodeType":"325","messageId":"326","endLine":2,"endColumn":23},{"ruleId":"323","severity":1,"message":"337","line":2,"column":24,"nodeType":"325","messageId":"326","endLine":2,"endColumn":27},{"ruleId":"323","severity":1,"message":"338","line":2,"column":28,"nodeType":"325","messageId":"326","endLine":2,"endColumn":32},{"ruleId":"323","severity":1,"message":"339","line":2,"column":34,"nodeType":"325","messageId":"326","endLine":2,"endColumn":40},{"ruleId":"323","severity":1,"message":"340","line":5,"column":8,"nodeType":"325","messageId":"326","endLine":5,"endColumn":14},{"ruleId":"323","severity":1,"message":"420","line":6,"column":10,"nodeType":"325","messageId":"326","endLine":6,"endColumn":20},{"ruleId":"323","severity":1,"message":"341","line":9,"column":8,"nodeType":"325","messageId":"326","endLine":9,"endColumn":25},{"ruleId":"323","severity":1,"message":"342","line":10,"column":7,"nodeType":"325","messageId":"326","endLine":10,"endColumn":12},{"ruleId":"323","severity":1,"message":"327","line":19,"column":12,"nodeType":"325","messageId":"326","endLine":19,"endColumn":17},{"ruleId":"347","severity":1,"message":"421","line":45,"column":8,"nodeType":"349","endLine":45,"endColumn":10,"suggestions":"422"},{"ruleId":"351","severity":1,"message":"352","line":49,"column":26,"nodeType":"353","messageId":"354","endLine":49,"endColumn":28},{"ruleId":"323","severity":1,"message":"327","line":13,"column":11,"nodeType":"325","messageId":"326","endLine":13,"endColumn":16},{"ruleId":"323","severity":1,"message":"328","line":13,"column":18,"nodeType":"325","messageId":"326","endLine":13,"endColumn":26},{"ruleId":"347","severity":1,"message":"423","line":26,"column":10,"nodeType":"349","endLine":26,"endColumn":12,"suggestions":"424"},{"ruleId":"331","severity":1,"message":"332","line":41,"column":26,"nodeType":"333","messageId":"334","endLine":41,"endColumn":28},{"ruleId":"331","severity":1,"message":"332","line":43,"column":27,"nodeType":"333","messageId":"334","endLine":43,"endColumn":29},{"ruleId":"331","severity":1,"message":"332","line":45,"column":26,"nodeType":"333","messageId":"334","endLine":45,"endColumn":28},{"ruleId":"323","severity":1,"message":"339","line":7,"column":10,"nodeType":"325","messageId":"326","endLine":7,"endColumn":16},{"ruleId":"323","severity":1,"message":"425","line":9,"column":8,"nodeType":"325","messageId":"326","endLine":9,"endColumn":20},{"ruleId":"323","severity":1,"message":"426","line":10,"column":10,"nodeType":"325","messageId":"326","endLine":10,"endColumn":25},{"ruleId":"323","severity":1,"message":"427","line":11,"column":10,"nodeType":"325","messageId":"326","endLine":11,"endColumn":23},{"ruleId":"323","severity":1,"message":"428","line":12,"column":8,"nodeType":"325","messageId":"326","endLine":12,"endColumn":22},{"ruleId":"323","severity":1,"message":"429","line":16,"column":11,"nodeType":"325","messageId":"326","endLine":16,"endColumn":15},{"ruleId":"323","severity":1,"message":"430","line":20,"column":11,"nodeType":"325","messageId":"326","endLine":20,"endColumn":25},{"ruleId":"323","severity":1,"message":"346","line":20,"column":27,"nodeType":"325","messageId":"326","endLine":20,"endColumn":46},{"ruleId":"323","severity":1,"message":"431","line":21,"column":11,"nodeType":"325","messageId":"326","endLine":21,"endColumn":26},{"ruleId":"323","severity":1,"message":"432","line":21,"column":28,"nodeType":"325","messageId":"326","endLine":21,"endColumn":47},{"ruleId":"323","severity":1,"message":"433","line":22,"column":11,"nodeType":"325","messageId":"326","endLine":22,"endColumn":30},{"ruleId":"323","severity":1,"message":"434","line":22,"column":32,"nodeType":"325","messageId":"326","endLine":22,"endColumn":55},{"ruleId":"347","severity":1,"message":"435","line":47,"column":8,"nodeType":"349","endLine":47,"endColumn":10,"suggestions":"436"},{"ruleId":"351","severity":1,"message":"352","line":50,"column":28,"nodeType":"353","messageId":"354","endLine":50,"endColumn":30},{"ruleId":"331","severity":1,"message":"332","line":76,"column":29,"nodeType":"333","messageId":"334","endLine":76,"endColumn":31},{"ruleId":"351","severity":1,"message":"352","line":104,"column":32,"nodeType":"353","messageId":"354","endLine":104,"endColumn":34},{"ruleId":"382","severity":1,"message":"383","line":106,"column":11,"nodeType":"384","messageId":"385","endLine":106,"endColumn":46},{"ruleId":"382","severity":1,"message":"383","line":107,"column":19,"nodeType":"384","messageId":"385","endLine":107,"endColumn":68},{"ruleId":"351","severity":1,"message":"392","line":118,"column":32,"nodeType":"353","messageId":"393","endLine":118,"endColumn":34},{"ruleId":"382","severity":1,"message":"383","line":121,"column":17,"nodeType":"384","messageId":"385","endLine":121,"endColumn":51},{"ruleId":"351","severity":1,"message":"392","line":176,"column":32,"nodeType":"353","messageId":"393","endLine":176,"endColumn":34},{"ruleId":"382","severity":1,"message":"383","line":178,"column":17,"nodeType":"384","messageId":"385","endLine":178,"endColumn":51},{"ruleId":"351","severity":1,"message":"392","line":179,"column":56,"nodeType":"353","messageId":"393","endLine":179,"endColumn":58},{"ruleId":"382","severity":1,"message":"383","line":182,"column":19,"nodeType":"384","messageId":"385","endLine":182,"endColumn":51},{"ruleId":"382","severity":1,"message":"383","line":183,"column":19,"nodeType":"384","messageId":"385","endLine":183,"endColumn":43},{"ruleId":"382","severity":1,"message":"383","line":184,"column":19,"nodeType":"384","messageId":"385","endLine":184,"endColumn":51},{"ruleId":"331","severity":1,"message":"332","line":188,"column":52,"nodeType":"333","messageId":"334","endLine":188,"endColumn":54},{"ruleId":"394","severity":1,"message":"395","line":204,"column":16,"nodeType":"396","endLine":205,"endColumn":30},{"ruleId":"323","severity":1,"message":"339","line":6,"column":10,"nodeType":"325","messageId":"326","endLine":6,"endColumn":16},{"ruleId":"323","severity":1,"message":"327","line":9,"column":9,"nodeType":"325","messageId":"326","endLine":9,"endColumn":14},{"ruleId":"323","severity":1,"message":"437","line":10,"column":15,"nodeType":"325","messageId":"326","endLine":10,"endColumn":22},{"ruleId":"323","severity":1,"message":"438","line":11,"column":10,"nodeType":"325","messageId":"326","endLine":11,"endColumn":23},{"ruleId":"323","severity":1,"message":"439","line":11,"column":25,"nodeType":"325","messageId":"326","endLine":11,"endColumn":41},{"ruleId":"323","severity":1,"message":"440","line":18,"column":10,"nodeType":"325","messageId":"326","endLine":18,"endColumn":27},{"ruleId":"323","severity":1,"message":"391","line":45,"column":14,"nodeType":"325","messageId":"326","endLine":45,"endColumn":19},{"ruleId":"323","severity":1,"message":"441","line":86,"column":13,"nodeType":"325","messageId":"326","endLine":86,"endColumn":26},{"ruleId":"351","severity":1,"message":"352","line":88,"column":28,"nodeType":"353","messageId":"354","endLine":88,"endColumn":30},{"ruleId":"323","severity":1,"message":"442","line":93,"column":11,"nodeType":"325","messageId":"326","endLine":93,"endColumn":24},{"ruleId":"331","severity":1,"message":"332","line":103,"column":23,"nodeType":"333","messageId":"334","endLine":103,"endColumn":25},{"ruleId":"382","severity":1,"message":"383","line":111,"column":5,"nodeType":"384","messageId":"385","endLine":111,"endColumn":38},{"ruleId":"331","severity":1,"message":"332","line":138,"column":47,"nodeType":"333","messageId":"334","endLine":138,"endColumn":49},{"ruleId":"331","severity":1,"message":"332","line":139,"column":60,"nodeType":"333","messageId":"334","endLine":139,"endColumn":62},{"ruleId":"323","severity":1,"message":"339","line":7,"column":10,"nodeType":"325","messageId":"326","endLine":7,"endColumn":16},{"ruleId":"323","severity":1,"message":"327","line":10,"column":9,"nodeType":"325","messageId":"326","endLine":10,"endColumn":14},{"ruleId":"323","severity":1,"message":"429","line":11,"column":10,"nodeType":"325","messageId":"326","endLine":11,"endColumn":14},{"ruleId":"323","severity":1,"message":"437","line":11,"column":15,"nodeType":"325","messageId":"326","endLine":11,"endColumn":22},{"ruleId":"323","severity":1,"message":"438","line":12,"column":10,"nodeType":"325","messageId":"326","endLine":12,"endColumn":23},{"ruleId":"323","severity":1,"message":"439","line":12,"column":25,"nodeType":"325","messageId":"326","endLine":12,"endColumn":41},{"ruleId":"323","severity":1,"message":"440","line":19,"column":10,"nodeType":"325","messageId":"326","endLine":19,"endColumn":27},{"ruleId":"323","severity":1,"message":"443","line":20,"column":9,"nodeType":"325","messageId":"326","endLine":20,"endColumn":21},{"ruleId":"323","severity":1,"message":"444","line":21,"column":10,"nodeType":"325","messageId":"326","endLine":21,"endColumn":21},{"ruleId":"323","severity":1,"message":"445","line":21,"column":23,"nodeType":"325","messageId":"326","endLine":21,"endColumn":37},{"ruleId":"323","severity":1,"message":"391","line":46,"column":14,"nodeType":"325","messageId":"326","endLine":46,"endColumn":19},{"ruleId":"323","severity":1,"message":"441","line":87,"column":13,"nodeType":"325","messageId":"326","endLine":87,"endColumn":26},{"ruleId":"351","severity":1,"message":"352","line":89,"column":28,"nodeType":"353","messageId":"354","endLine":89,"endColumn":30},{"ruleId":"323","severity":1,"message":"442","line":98,"column":11,"nodeType":"325","messageId":"326","endLine":98,"endColumn":24},{"ruleId":"323","severity":1,"message":"446","line":102,"column":9,"nodeType":"325","messageId":"326","endLine":102,"endColumn":13},{"ruleId":"351","severity":1,"message":"392","line":180,"column":41,"nodeType":"353","messageId":"393","endLine":180,"endColumn":43},{"ruleId":"331","severity":1,"message":"332","line":181,"column":37,"nodeType":"333","messageId":"334","endLine":181,"endColumn":39},{"ruleId":"331","severity":1,"message":"332","line":181,"column":58,"nodeType":"333","messageId":"334","endLine":181,"endColumn":60},{"ruleId":"382","severity":1,"message":"383","line":196,"column":13,"nodeType":"384","messageId":"385","endLine":196,"endColumn":26},{"ruleId":"415","severity":1,"message":"416","line":196,"column":13,"nodeType":"384","messageId":"417","endLine":196,"endColumn":26},{"ruleId":"323","severity":1,"message":"339","line":7,"column":10,"nodeType":"325","messageId":"326","endLine":7,"endColumn":16},{"ruleId":"323","severity":1,"message":"447","line":8,"column":10,"nodeType":"325","messageId":"326","endLine":8,"endColumn":16},{"ruleId":"323","severity":1,"message":"448","line":8,"column":18,"nodeType":"325","messageId":"326","endLine":8,"endColumn":25},{"ruleId":"323","severity":1,"message":"327","line":11,"column":9,"nodeType":"325","messageId":"326","endLine":11,"endColumn":14},{"ruleId":"323","severity":1,"message":"438","line":13,"column":10,"nodeType":"325","messageId":"326","endLine":13,"endColumn":23},{"ruleId":"323","severity":1,"message":"439","line":13,"column":25,"nodeType":"325","messageId":"326","endLine":13,"endColumn":41},{"ruleId":"323","severity":1,"message":"449","line":15,"column":10,"nodeType":"325","messageId":"326","endLine":15,"endColumn":25},{"ruleId":"323","severity":1,"message":"450","line":15,"column":27,"nodeType":"325","messageId":"326","endLine":15,"endColumn":46},{"ruleId":"323","severity":1,"message":"451","line":19,"column":23,"nodeType":"325","messageId":"326","endLine":19,"endColumn":37},{"ruleId":"323","severity":1,"message":"452","line":22,"column":10,"nodeType":"325","messageId":"326","endLine":22,"endColumn":23},{"ruleId":"323","severity":1,"message":"453","line":22,"column":25,"nodeType":"325","messageId":"326","endLine":22,"endColumn":41},{"ruleId":"347","severity":1,"message":"454","line":44,"column":12,"nodeType":"349","endLine":44,"endColumn":14,"suggestions":"455"},{"ruleId":"347","severity":1,"message":"456","line":50,"column":10,"nodeType":"349","endLine":50,"endColumn":26,"suggestions":"457"},{"ruleId":"351","severity":1,"message":"352","line":69,"column":52,"nodeType":"353","messageId":"354","endLine":69,"endColumn":54},{"ruleId":"331","severity":1,"message":"332","line":91,"column":27,"nodeType":"333","messageId":"334","endLine":91,"endColumn":29},{"ruleId":"351","severity":1,"message":"352","line":155,"column":31,"nodeType":"353","messageId":"354","endLine":155,"endColumn":33},{"ruleId":"323","severity":1,"message":"458","line":198,"column":11,"nodeType":"325","messageId":"326","endLine":198,"endColumn":12},{"ruleId":"351","severity":1,"message":"392","line":246,"column":41,"nodeType":"353","messageId":"393","endLine":246,"endColumn":43},{"ruleId":"331","severity":1,"message":"332","line":247,"column":37,"nodeType":"333","messageId":"334","endLine":247,"endColumn":39},{"ruleId":"331","severity":1,"message":"332","line":247,"column":58,"nodeType":"333","messageId":"334","endLine":247,"endColumn":60},{"ruleId":"382","severity":1,"message":"383","line":262,"column":13,"nodeType":"384","messageId":"385","endLine":262,"endColumn":26},{"ruleId":"415","severity":1,"message":"416","line":262,"column":13,"nodeType":"384","messageId":"417","endLine":262,"endColumn":26},"no-native-reassign",["459"],"no-negated-in-lhs",["460"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","'setToken' is assigned a value but never used.","'deleteToken' is assigned a value but never used.","'userRegistered' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'Signin' is defined but never used.","'UpdateUserDetails' is defined but never used.","'axios' is assigned a value but never used.","'courses' is assigned a value but never used.","'setCourses' is assigned a value but never used.","'studentsInClass' is assigned a value but never used.","'setsStudentsInClass' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["461"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'lessons' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["462","463"],["464","465"],"Unnecessary escape character: \\..",["466","467"],["468","469"],"Unnecessary escape character: \\s.",["470","471"],["472","473"],["474","475"],["476","477"],["478","479"],["480","481"],["482","483"],["484","485"],["486","487"],["488","489"],["490","491"],["492","493"],"'imageRegex' is assigned a value but never used.",["494","495"],"React Hook useEffect has missing dependencies: 'IdFromURL' and 'token'. Either include them or remove the dependency array.",["496"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","Expected '!==' and instead saw '!='.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'sleep' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-dupe-class-members","Duplicate name 'getUserDetails'.","MethodDefinition","Duplicate name 'loginUser'.","Duplicate name 'registerUser'.","Duplicate name 'displayCourses'.","Duplicate name 'getCourses'.","Duplicate name 'getLessons'.","Duplicate name 'getNextLesson'.","Duplicate name 'getPreviousLesson'.","Duplicate name 'getCurrentCourse'.","Duplicate name 'getAllUserCourses'.","'useState' is defined but never used.","'NavBtnLink' is defined but never used.","React Hook useEffect has missing dependencies: 'IdClassFromURL', 'token', and 'user'. Either include them or remove the dependency array.",["497"],"React Hook useEffect has a missing dependency: 'addClasses'. Either include it or remove the dependency array.",["498"],"no-unreachable","Unreachable code.","unreachableCode","'popup' is assigned a value but never used.",["499"],"'useHistory' is defined but never used.","React Hook useEffect has missing dependencies: 'IdFromURL' and 'IdUserFromURL'. Either include them or remove the dependency array.",["500"],"React Hook useEffect has a missing dependency: 'IdFromURL'. Either include it or remove the dependency array.",["501"],"'ReactTooltip' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faTimesCircle' is defined but never used.","'HomepageScreen' is defined but never used.","'user' is assigned a value but never used.","'studentInClass' is assigned a value but never used.","'teachersInClass' is assigned a value but never used.","'setsTeachersInClass' is assigned a value but never used.","'coordinatorsInClass' is assigned a value but never used.","'setsCoordinatorsInClass' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'IdUserFromURL' and 'token'. Either include them or remove the dependency array.",["502"],"'setUser' is assigned a value but never used.","'selectedClass' is assigned a value but never used.","'setSelectedClass' is assigned a value but never used.","'currentCourseName' is assigned a value but never used.","'getCourseName' is assigned a value but never used.","'getCoursename' is assigned a value but never used.","'studentsList' is assigned a value but never used.","'courseFound' is assigned a value but never used.","'setCourseFound' is assigned a value but never used.","'data' is assigned a value but never used.","'render' is defined but never used.","'waitFor' is defined but never used.","'matatzesInClass' is assigned a value but never used.","'setsMatatzesInClass' is assigned a value but never used.","'setUserCourses' is assigned a value but never used.","'currentMatatz' is assigned a value but never used.","'setCurrentMatatz' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'IdUserFromURL' and 'getTeacherClasses'. Either include them or remove the dependency array.",["503"],"React Hook useEffect has a missing dependency: 'getAllMatatz'. Either include it or remove the dependency array.",["504"],"'m' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"505","fix":"506"},{"messageId":"507","fix":"508","desc":"509"},{"messageId":"510","fix":"511","desc":"512"},{"messageId":"507","fix":"513","desc":"509"},{"messageId":"510","fix":"514","desc":"512"},{"messageId":"507","fix":"515","desc":"509"},{"messageId":"510","fix":"516","desc":"512"},{"messageId":"507","fix":"517","desc":"509"},{"messageId":"510","fix":"518","desc":"512"},{"messageId":"507","fix":"519","desc":"509"},{"messageId":"510","fix":"520","desc":"512"},{"messageId":"507","fix":"521","desc":"509"},{"messageId":"510","fix":"522","desc":"512"},{"messageId":"507","fix":"523","desc":"509"},{"messageId":"510","fix":"524","desc":"512"},{"messageId":"507","fix":"525","desc":"509"},{"messageId":"510","fix":"526","desc":"512"},{"messageId":"507","fix":"527","desc":"509"},{"messageId":"510","fix":"528","desc":"512"},{"messageId":"507","fix":"529","desc":"509"},{"messageId":"510","fix":"530","desc":"512"},{"messageId":"507","fix":"531","desc":"509"},{"messageId":"510","fix":"532","desc":"512"},{"messageId":"507","fix":"533","desc":"509"},{"messageId":"510","fix":"534","desc":"512"},{"messageId":"507","fix":"535","desc":"509"},{"messageId":"510","fix":"536","desc":"512"},{"messageId":"507","fix":"537","desc":"509"},{"messageId":"510","fix":"538","desc":"512"},{"messageId":"507","fix":"539","desc":"509"},{"messageId":"510","fix":"540","desc":"512"},{"messageId":"507","fix":"541","desc":"509"},{"messageId":"510","fix":"542","desc":"512"},{"messageId":"507","fix":"543","desc":"509"},{"messageId":"510","fix":"544","desc":"512"},{"desc":"545","fix":"546"},{"desc":"547","fix":"548"},{"desc":"549","fix":"550"},{"desc":"505","fix":"551"},{"desc":"552","fix":"553"},{"desc":"554","fix":"555"},{"desc":"556","fix":"557"},{"desc":"558","fix":"559"},{"desc":"560","fix":"561"},"Update the dependencies array to be: [token]",{"range":"562","text":"563"},"removeEscape",{"range":"564","text":"565"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"566","text":"567"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"568","text":"565"},{"range":"569","text":"567"},{"range":"570","text":"565"},{"range":"571","text":"567"},{"range":"572","text":"565"},{"range":"573","text":"567"},{"range":"574","text":"565"},{"range":"575","text":"567"},{"range":"576","text":"565"},{"range":"577","text":"567"},{"range":"578","text":"565"},{"range":"579","text":"567"},{"range":"580","text":"565"},{"range":"581","text":"567"},{"range":"582","text":"565"},{"range":"583","text":"567"},{"range":"584","text":"565"},{"range":"585","text":"567"},{"range":"586","text":"565"},{"range":"587","text":"567"},{"range":"588","text":"565"},{"range":"589","text":"567"},{"range":"590","text":"565"},{"range":"591","text":"567"},{"range":"592","text":"565"},{"range":"593","text":"567"},{"range":"594","text":"565"},{"range":"595","text":"567"},{"range":"596","text":"565"},{"range":"597","text":"567"},{"range":"598","text":"565"},{"range":"599","text":"567"},"Update the dependencies array to be: [IdFromURL, token]",{"range":"600","text":"601"},"Update the dependencies array to be: [IdClassFromURL, token, user]",{"range":"602","text":"603"},"Update the dependencies array to be: [addClasses, user]",{"range":"604","text":"605"},{"range":"606","text":"563"},"Update the dependencies array to be: [IdFromURL, IdUserFromURL]",{"range":"607","text":"608"},"Update the dependencies array to be: [IdFromURL]",{"range":"609","text":"610"},"Update the dependencies array to be: [IdUserFromURL, token]",{"range":"611","text":"612"},"Update the dependencies array to be: [IdUserFromURL, getTeacherClasses]",{"range":"613","text":"614"},"Update the dependencies array to be: [getAllMatatz, studentInClass]",{"range":"615","text":"616"},[2225,2227],"[token]",[1734,1735],"",[1734,1734],"\\",[1736,1737],[1736,1736],[1744,1745],[1744,1744],[1790,1791],[1790,1790],[1794,1795],[1794,1794],[1805,1806],[1805,1805],[1842,1843],[1842,1842],[1846,1847],[1846,1846],[1861,1862],[1861,1861],[1863,1864],[1863,1863],[1871,1872],[1871,1871],[1894,1895],[1894,1894],[1898,1899],[1898,1898],[1909,1910],[1909,1909],[1923,1924],[1923,1923],[1927,1928],[1927,1927],[1958,1959],[1958,1958],[2757,2759],"[IdFromURL, token]",[1910,1912],"[IdClassFromURL, token, user]",[1980,1986],"[addClasses, user]",[1498,1500],[1690,1692],"[IdFromURL, IdUserFromURL]",[954,956],"[IdFromURL]",[1942,1944],"[IdUserFromURL, token]",[1512,1514],"[IdUserFromURL, getTeacherClasses]",[1594,1610],"[getAllMatatz, studentInClass]"]