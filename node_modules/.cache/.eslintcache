[{"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/index.js":"1","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/reportWebVitals.js":"2","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/App.js":"3","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/Signin.js":"4","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/HomepageScreen.js":"5","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/ProfileScreen.js":"6","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/CoursesScreen.js":"7","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/CoursesMainScreen.js":"8","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/ProjectsScreen.js":"9","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/api-service.js":"10","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/components/Navbar/index.js":"11","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/components/Popup.js":"12","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/components/Navbar/NavbarElements.js":"13","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/components/UpdateUserDetails.js":"14","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/TeachersScreen.js":"15","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/AboutusScreen.js":"16"},{"size":953,"mtime":1639055296000,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1639055296000,"results":"19","hashOfConfig":"18"},{"size":1372,"mtime":1639491298995,"results":"20","hashOfConfig":"18"},{"size":2060,"mtime":1639055296000,"results":"21","hashOfConfig":"18"},{"size":240,"mtime":1639055296000,"results":"22","hashOfConfig":"18"},{"size":3447,"mtime":1639490441922,"results":"23","hashOfConfig":"18"},{"size":17200,"mtime":1639055296000,"results":"24","hashOfConfig":"18"},{"size":2670,"mtime":1639055296000,"results":"25","hashOfConfig":"18"},{"size":158,"mtime":1639055296000,"results":"26","hashOfConfig":"18"},{"size":16501,"mtime":1639307268252,"results":"27","hashOfConfig":"18"},{"size":1675,"mtime":1639491362905,"results":"28","hashOfConfig":"18"},{"size":2310,"mtime":1639055296000,"results":"29","hashOfConfig":"18"},{"size":1664,"mtime":1639055296000,"results":"30","hashOfConfig":"18"},{"size":0,"mtime":1639307224690,"results":"31","hashOfConfig":"18"},{"size":227,"mtime":1639491565141,"results":"32","hashOfConfig":"18"},{"size":238,"mtime":1639491408892,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"3jat24",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/index.js",[],["69","70"],"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/reportWebVitals.js",[],"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/App.js",["71","72","73","74"],"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/Signin.js",[],"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/HomepageScreen.js",[],"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/ProfileScreen.js",["75","76","77","78","79","80","81","82","83"],"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/CoursesScreen.js",["84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106"],"import React, {useEffect, useState} from 'react';\nimport ReactPlayer from 'react-player';\nimport '../Courses.css';\nimport { API } from '../api-service';\n//import {token} from '/Signin'; \n// import ReactDom from 'react-dom';\n//import Popup from 'react-popup';\nimport Popup from '../components/Popup';\nimport { useCookies } from 'react-cookie';\nimport Signin from '../pages/Signin'; \n\n\n\nconst CoursesScreen = () => {\n  const [token, setToken, deleteToken] = useCookies(['mr-token']);\n  console.log(\"token is: \", token['mr-token'])\n  // const user = parseJwt(token['mr-token']);\n\n    \n\n  \n//   render() \n//     const { state } = this.props.location\n//     return (\n//       console.log(state)\n//     )\n  \nconst search = window.location.search; // returns the URL query String\nconst params = new URLSearchParams(search); \nconst IdFromURL = params.get('id');\nconst linkFromURL = params.get('link');\n// const courseFromUrl = params.get('course');   \nconsole.log(\"now\"); \nconsole.log(IdFromURL);\nconsole.log(linkFromURL);\n\n// console.log(courseFromUrl); \nconst [courses, setCourses] = useState([]);\nconst [userLessons, setUserLessons] = useState([]);\nconst [lessons, setLessons] = useState([]);\nconst [lessonNumber, setLessonsNumber] = useState([1]);\nconst [currentLesson, setCurrentLesson] = useState([]);\n//the url from youtube for every lesson. changed when the user choose another lesson. the default is for the first lesson. \nconst[url, setUrl ] = useState(linkFromURL);  \nconst[buttonPopup, setButtonPopup ] = useState(false); \nconst[notePopup, setNotePopup ] = useState(false);\nconst[notes, setNotes ] = useState();\nconst[answer, setAnswer ] = useState();\nconst[userLastLesson, setUserLastLesson ] = useState(1);\nconst lessonsList =[];\nvar numOfLessons = 0;\n\n//const [playing, setPlaying] = useState()\n\n\n\n\n//const displayCourses = () =>  {\n  useEffect(() =>{\n  var username = Signin.username\n  console.log(\"username is:\",username)\n  setLessonsNumber(1) \n  API.displayCourses()\n      .then( resp => setCourses(resp))\n      //.then( resp => setCurrentLesson(resp[0].lessons[0]))\n      .catch( error => console.log(error)) \n  API.getLessons()\n      .then( resp => setLessons(resp))\n      .catch( error => console.log(error)) \n  API.getUserLessons()\n    .then( resp => setUserLessons(resp))\n    .catch( error => console.log(error)) \n  API.getUserLastLesson(token['mr-token'],IdFromURL)\n    .then( resp => setUserLastLesson(resp.results[0].numOfLesson))\n    .catch( error => console.log(error))\n\n}, [])\n\n\n\n//console.log(parseJwt('eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c'))\n// const setFirstUrl= () =>  {\n//   console.log(\"courses[0]\")\n//   console.log(courses[0])\n//   //setUrl(courses[0].lessons[0].link)  .lessons[0].link\n// }\n// useEffect(() =>{ \n//   console.log(\"please work: \")\n//   console.log(courses[0].lessons[0].link)  \n// }, [courses.length > 1])\n\n// const getFirstLesson = (courses) =>{\n//   console.log(\"in first lesson\")\n//   var firstLesson = courses[0].lessons[0]\n//   console.log(\"the first lesson is: \",firstLesson)\n// }\n\nconst displayLessons = (lesson) =>{\n  if(lesson.numOfLesson<=userLastLesson){\n    console.log(\"in display lesson: \")\n    console.log(\"last lesson is: \",userLastLesson)\n    console.log(lesson)\n    //console.log(parseJwt(token['mr-token']))\n    console.log(userLessons)\n    //console.log(token.User)\n    //console.log(token['mr-token'].User)\n    setUrl(lesson.link)\n    console.log(\"lesson number is: \", lessonNumber)\n    console.log(\"lesson id is: \",lesson.id)\n    setLessonsNumber(lesson.numOfLesson)\n    //works for python course -> setLessonsNumber(lesson.id === 1? 1:lesson.id-1)\n    setCurrentLesson(lesson)\n    console.log(\"after: lesson number is: \", lessonNumber)\n  }\n}\n\n\n\n\nconst playNextLesson= () =>  {\n  console.log(\"in next lesoon fun. next lesson number is: \", lessonNumber+1);\n  console.log(\"lesson number is: \", lessonNumber);\n  console.log(lessonsList)\n  // console.log(\"courses[0]\")\n  // console.log(courses[0].lessons[0])\n//   var len = 2;\n//  lessonsList.map(id => {return len=len+1} )\n\n  console.log(\"lesson list.length is:\", lessonsList[0].length);\n {lessonsList[0]  ?  lessonNumber ===  lessonsList[0].length  ?console.log(\"1\") :console.log(\"2\") :console.log(\"3\") }\n  //if there is ann assignmnent for these lesson - display it on a popup message. if there is no assignment - proceed to next lesson\n    // if (currentLesson.assignment != \"null\"){\n    // {lessonsList.map(lesson =>{\n      // var first = lessonsList[0].name;\n      // console.log(first);\n      // console.log(\"first\");\n      //if there is an assignment for this lesson\n    if(lessonsList[0][lessonNumber-1].assignment !=\"null\"){\n      console.log(\"need to be here\");\n      console.log(currentLesson.assignment);\n      console.log(\"lesson number is: \", lessonNumber);\n      setAnswer('')\n\n      if(currentLesson.id){\n        API.getUserAnswer(token['mr-token'], currentLesson.id)\n        //.then( resp => console.log(resp))\n        .then( resp => setAnswer(resp.results[0].answer))\n        .catch( error => console.log(error))\n      }\n      else{\n        console.log(\"im in else\")\n        API.getUserAnswer(token['mr-token'], params.get('firstLessonId'))\n        //.then( resp => console.log(resp))\n        .then( resp => setAnswer(resp.results[0].answer))\n        .catch( error => console.log(error))\n      }\n       \n      setButtonPopup(true);\n  }\n  else{\n    if(userLastLesson==lessonNumber){\n      API.updateUserCourse(token['mr-token'], userLastLesson+1, IdFromURL)\n      setUserLastLesson(userLastLesson+1)\n      }\n    {lessonsList.map(lesson => {\n      {console.log(\"inside next lesson\")}\n      {console.log(lesson[lessonNumber])}\n      return setUrl(lesson[lessonNumber].link), setCurrentLesson(lesson[lessonNumber])\n      \n      // console.log(lesson[4].link);\n    })}\n    setLessonsNumber(lessonNumber+1)\n    \n  // console.log(lessonsList[3]);\n // console.log(lessonsList[4].url);\n  //setLessonsNumber(lessonNumber+1)\n  \n  }\n}\n\n\n\nconst playPreviousLesson= () =>  {\n  console.log(\"in previous. next lesson number is:\", lessonNumber-1);\n  console.log(\"lesson number is: \", lessonNumber);\n  {lessonsList.map(lesson => {\n    return setUrl(lesson[lessonNumber-2].link), setCurrentLesson(lesson[lessonNumber-2])\n    // console.log(lesson[4].link);\n  })}\n  setLessonsNumber(lessonNumber-1)\n  \n  // console.log(lessonNumber)\n  // API.getPreviousLesson(lessonNumber-1)\n  //     .then( resp => setCurrentLesson(resp))\n  //     .then(console.log(currentLesson))\n  //     .catch( error => console.log(error)) \n  // setUrl(currentLesson.link)\n  // setLessonsNumber(currentLesson.id)  \n}\n//proceed to the next lesson of the course after the popup message\nconst proceedToNextLesson= () =>  {\n  if(userLastLesson==lessonNumber){\n    API.updateUserCourse(token['mr-token'], userLastLesson+1, IdFromURL)\n    setUserLastLesson(userLastLesson+1)\n    }\n  console.log(\" inside fun proceed\");\n  if(currentLesson.id)\n    API.updateUserAnswer(token['mr-token'], answer, currentLesson.id)\n  else\n    API.updateUserAnswer(token['mr-token'], answer, params.get('firstLessonId'))\n  {lessonsList.map(lesson => {\n    return setUrl(lesson[lessonNumber].link), setCurrentLesson(lesson[lessonNumber])\n  })}\n  setLessonsNumber(lessonNumber+1)\n  setButtonPopup(false)\n}\n// console.log(\"lessonNumber+2\")\n// API.getNextLesson(lessonNumber+1)\n//     .then( resp => setCurrentLesson(resp))\n//     .then(console.log(currentLesson))\n//     .catch( error => console.log(error)) \n//     console.log(\"the current lesson is:\")\n//     console.log(currentLesson.name)\n// setUrl(currentLesson.link)\n// setLessonsNumber(currentLesson.id)\n// \nconst openNotes= () =>  {\n  //{setPlaying(false)}\n  console.log(\" inside openNotes\");\n  setNotes('')\n  console.log(\"lesson is:\",currentLesson.id)\n  console.log(\"maybe that: \",  params.get('firstLessonId'))\n  if(currentLesson.id){\n    API.getUserNotes(token['mr-token'],currentLesson.id)\n      // .then( console.log(\"resp.results[0].notes\"))\n      // .then( resp => console.log(resp))\n      .then( resp => setNotes(resp.results[0].notes))\n      .catch( error => console.log(error))\n  }\n  else{\n    console.log(\"im in else\")\n    API.getUserNotes(token['mr-token'],params.get('firstLessonId'))\n      .then( resp => setNotes(resp.results[0].notes))\n      .catch( error => console.log(error))\n  }\n  setNotePopup(true)\n}\nconst saveNotes= () =>  { \nif(currentLesson.id)\n  API.updateUserNotes(token['mr-token'], notes, currentLesson.id)\nelse\n  API.updateUserNotes(token['mr-token'], notes, params.get('firstLessonId'))\n setNotePopup(false)\n}\n// const ref = player => {\n//   player = player\n// }\n\n  return ( \n\n  \n    <div className=\"App\">\n      <header className=\"Header\">\n      \n     \n      {/* <h1>{currentLesson.assignment}</h1> */}\n        {/* {courses.map(lesson => {\n             if(lesson.id == IdFromURL) \n                 return <h2>{lesson.name}}</h2>} */}\n\n\n                 { courses.map(lesson => { \n                  if(lesson.id == IdFromURL) \n                      return <h1>{lesson.name}</h1>\n                    //  return <h1>{currentLesson.id}</h1>\n                     \n               })}\n\n\n      </header> \n      <button onClick={openNotes}>הערות</button>\n      <div className=\"lessons\">\n      <div>\n        {/* //working */}\n      {/* {  courses.map( course => {\n            return <button onClick={() => test(course)}>{course.name}</button>\n          })}  */}\n      {/* {  courses.map( course => {\n            return <h2>{course.name}</h2>\n          })}  */}\n      {/* { courses.map(lesson => {\n            return <h2>{lesson.lessons.map((name) => \n              <li >{name.name} </li>\n              //<button onClick={displayLessons(name.name)}>{name.name} </button>\n            )}</h2>\n        })} */}\n      </div>\n      <div>\n      {/* { courses.map( lesson => {         &nbsp;&nbsp;&nbsp;\n          lesson.lessons.map(nam =>{\n            return <h2>{nam.name}</h2>\n        })\n          })} */}\n        </div>\n       \n        <div>\n\n           {/*  display the lessons for the chosen course */ }\n          { courses.map(lesson => { \n             if(lesson.id == IdFromURL){\n                numOfLessons=lesson.lessons.length;\n                {console.log(\"num of lesson is: \",numOfLessons )}\n                {lessonsList.push(lesson.lessons)}\n                // {setsSelectedCourse(lesson)}\n                return <h2>{lesson.lessons.map((name) =>\n                   //{if(name.numOfLesson<=userLastLesson){\n                      //<ul class={name.numOfLesson == currentLesson.numOfLesson ? \"currentList\": \"lessonsList\"}> <li onClick={() => displayLessons(name)}>{name.name} </li> </ul>}\n                  // else\n                  //   <ul class={\"lessonsList\"}> <li>{name.name + \" (נעול)\"} </li> </ul>\n                // <ul class={name.numOfLesson == currentLesson.numOfLesson ? \"currentList\": \"lessonsList\"}> <li onClick={() => displayLessons(name)}>{name.name + \" (נעול)\"} </li> </ul>\n                  <ul class={name.numOfLesson>userLastLesson? \"coursesListBlocked\" :name.numOfLesson == currentLesson.numOfLesson ? \"currentList\": \"lessonsList\"}>\n                  <li onClick={() => displayLessons(name)}>\n                  {name.numOfLesson>userLastLesson?   name.name + \" (נעול)\":name.name } </li> </ul>\n                // <ul class={name.numOfLesson == currentLesson.numOfLesson ? \"currentList\": \"lessonsList\"}> <li onClick={() =>  displayLessons(name)}>{  name.numOfLesson>userLastLesson? name.name + \" (נעול)\"}b:name.name } </li> </ul>\n             //}\n             )}</h2> \n                } \n          })}\n        \n</div>\n              \n\n        <div>\n\n          <ReactPlayer trigger={url} controls url={url} width='70%'\n          height='220%'/><br/>\n          {console.log(\"lessonsList\")}\n          {console.log(lessonsList)}\n          {/* {numOfLessons = lessonsList.length > 0 ? lessonsList[0].length: '0'} */}\n          {/* <div className=\"prevAndNext\"> */}\n            {/* <button className=\"prevAndNext\" onClick={playNextLesson} >השיעור הבא</button> */}\n            {/*lessonsList[0] &&    lessonsList[0].length*/}\n            \n              \n           \n            {/* <button className=\"prevAndNext\" style={{display : lessonNumber ===  lessonsList[0].length  ? \"\": \"none\"}}  onClick={playNextLesson} >השיעור הבא</button>  */}\n            <button className=\"prevAndNext\" style={{display : lessonNumber ===  numOfLessons  ? \"none\": \"\"}}  onClick={playNextLesson} >השיעור הבא</button> \n            {/* <button className=\"prevAndNext\" style={{display : lessonsList[0]!=null  &&  lessonNumber ===  lessonsList[0].length  ? \"none\": \"\"}}  onClick={playNextLesson} >השיעור הבא</button>  */}\n            <button className=\"prevAndNext\" style={{display : lessonNumber ===  1  ? \"none\": \"\"}} onClick={playPreviousLesson}>השיעור הקודם</button><br/>\n     \n        </div>\n\n          {/* display as buttons all the lessons of the selected course  */}\n        {/* { courses.map(lesson => {\n            return <h2>{lesson.lessons.map((name) => \n             <ul class=\"lessonsList\"> <li onClick={() => displayLessons(name)}>{name.name} </li> </ul>\n              //<button onClick={displayLessons(name.name)}>{name.name} </button>\n            )}</h2>\n        })} */}\n        \n\n\n           {/* <button onClick={() => setUrl('https://youtu.be/i9-HWYsrh_k')} >שיעור 1</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/OWuRhPUP31s')}>שיעור 2</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/Ew_JiqX1EO0')} >שיעור 3</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/6XI_0ORZsao')}>שיעור 4</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/iDu4PuKNXpc')} >שיעור 5</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/VIAgn7_zPvU')}>שיעור 6</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/yPdMrpmLZ1o')} >שיעור 7</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/2SYkSp8bHkQ')}>שיעור 8</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/djYyAngqOHA')} >שיעור 9</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/F6OD_OCSDrQ')}>שיעור 10</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/hsdPUQ94TFQ')} >שיעור 11</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/iIFS059A1oM')}>שיעור 12</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/HD2s_BTtVBo')} >שיעור 13</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/zACdpNyH3_M')}>שיעור 14</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/Xn9_B_oQcC4')} >שיעור 15</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/K2eQyBepFoQ')}>שיעור 16</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/GSQEc4BxrhE')}>שיעור 17</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/uzZFDPQ_jyI')} >שיעור 18</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/Q-vWAl6AdsE')}>שיעור 19</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/z5zA9wMjwmQ')} >שיעור 20</button><br/>\n           <button onClick={() => setUrl('https://youtu.be/HfyV9IzyaJQ')}>שיעור 21</button><br/> */}\n        \n        {/* <div>\n          \n          { courses.map( course => {\n            return <h2>{course.name}</h2>\n          })}\n        </div> */}\n          {/* course = this.props.data.map(function (co)){\n          return(\n          <div>\n          <h2>{course.name}</h2>\n          </div>\n          );\n      });\n    } */}\n    </div>\n    \n    <Popup trigger={buttonPopup} setTrigger={setButtonPopup}>\n      <h3>לפני שעוברים לשיעור הבא יש לבצע מטלה</h3>\n          {console.log(\"popup message\")}\n          {console.log(currentLesson.assignment)}\n          <p>{currentLesson.assignment}</p>\n          {console.log(\"answer is: \",answer)}\n          <button onClick={proceedToNextLesson}>שמור והמשך לשיעור הבא</button>\n          <input type = \"text\" value={answer} \n          onChange={e => setAnswer(e.target.value)}\n          ></input>\n    </Popup>\n    <Popup trigger={notePopup} setTrigger={setNotePopup}>\n    \n    {/* {console.log(this.player.getCurrentTime())} */}\n      <h3>אלו ההערות שלך עבור שיעור זה</h3>\n          {console.log(\"popup message 2\")}\n          {console.log(notes)}\n          {/* {console.log(notes.results && notes.results.notes)} */}\n          {console.log(\"end of popup message 2\")}\n          {/* <p>{notes}</p> */}\n        \n          <textarea\n          name = \"notesTA\"\n          value={notes}\n          onChange={e => setNotes(e.target.value)}\n          rows={5}\n          cols={50}\n        />\n        <br/>\n        <button onClick={saveNotes}>שמור</button>\n        \n    </Popup>\n   \n    </div>  \n\n  );\n};\n\n\n\nexport default CoursesScreen;\n","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/CoursesMainScreen.js",[],"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/ProjectsScreen.js",[],"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/api-service.js",["107","108","109","110","111","112","113","114"],"import React from \"react\"\nconst BASE_URL = 'https://yarintz.pythonanywhere.com';\nconst LOCAL_URL = 'http://127.0.0.1:8000';\nexport class API extends React.Component{\n/*\nstatic DisplayUser(body){ \n        console.log(body)\n        return fetch(`${LOCAL_URL}/main/users/21/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify( body )\n        }).then( resp => resp.json())\n        }\n       */\n       /*\nstatic DisplayUserInfo(token, id, data){\n    return fetch(`${LOCAL_URL}/main/users/${id}/`),{\n        method: 'POST',\n        headers:{\n            'Content-Type': 'application/json',\n            'Authorization': `Token ${token}`\n        },\n        body: JSON.stringify( data )\n    }).then( resp => resp.json())  \n}*/\nstatic getUserDetails(id){\n\n    return fetch(`${LOCAL_URL}/main/users/${id}`,{\n        method: 'GET',\n        headers: {  \n            'Content-Type':'application/json',\n           \n        }\n    }).then( resp => resp.json())\n    //.then( res => props.UpdateUser(res))\n    //.catch( error => console.log(error))\n} \n/*\nstatic getUserDetails(props,id){\n\n    return fetch(`${BASE_URL}/main/users/${id}`,{\n        method: 'GET',\n        headers: {  \n            'Content-Type':'application/json',\n           \n        }\n    }).then( resp => resp.json())\n   // .then( res => props.UpdateUser(res))\n    //.catch( error => console.log(error))\n} */\nstatic UpdateUser(token, id, data){ \n    return fetch(`${BASE_URL}/main/users/${id}/`, {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Token ${token}`\n        },\n        body: JSON.stringify( data )\n    }).then( resp => resp.json())\n    }\nstatic UpdateUser(token, id, data){ \n        return fetch(`${LOCAL_URL}/main/users/${id}/`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Token ${token}`\n            },\n            body: JSON.stringify( data )\n        }).then( resp => resp.json())\n        }   \n    static loginUser(body){ \n        return fetch(`${BASE_URL}/auth/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify( body )\n        }).then( resp => resp.json())\n        }\n\n        static registerUser(body){ \n            console.log(body)\n            return fetch(`${BASE_URL}/main/users/`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify( body )\n            }).then( resp => resp.json())\n            }\n        static displayCourses(){ \n                console.log(\"inside displayCourses fun\")\n                return fetch(`${BASE_URL}/main/courses/`, {\n                    method: 'GET',\n                    headers: {\n                        'Content-Type': 'application/json'\n                     },\n                    //body: JSON.stringify( body )\n                }).then( resp => resp.json())\n                // .then( resp => console.log(resp))\n                }           \n        static getLessons(){ \n                console.log(\"inside getLessons fun\")\n                // return fetch(`http://127.0.0.1:8000/main/courses/1/`, {\n                return fetch(`${BASE_URL}/admin/main/course/1/`, {\n                    method: 'GET',\n                    headers: {\n                        'Content-Type': 'application/json'\n                        },\n                    //body: JSON.stringify( body )\n                })\n                .then( resp => resp.json())\n                // .then( resp => console.log(resp))\n                \n                      \n                }  \n                static getNextLesson(num){ \n                    console.log(\"inside getNextLesson fun\")\n                    return fetch(`${BASE_URL}/main/lessons/${num}/`, {\n                        method: 'GET',\n                        headers: {\n                            'Content-Type': 'application/json'\n                            },\n                        //body: JSON.stringify( body )\n                    })\n                    .then( resp => resp.json())\n                    // .then( resp => console.log(resp)) \n                }\n                static getPreviousLesson(num){ \n                    console.log(\"inside getPreviousLesson fun\")\n                    console.log(num)\n                    return fetch(`${BASE_URL}/main/lessons/${num}/`, {\n                        method: 'GET',\n                        headers: {\n                            'Content-Type': 'application/json'\n                            },                       \n                    })\n                    .then( resp => resp.json())\n                }\n\n                static getCurrentCourse(numOfCourse){ \n                    console.log(\"inside displayCourses fun\")\n                    return fetch(`${BASE_URL}/main/courses/${numOfCourse}/`, {\n                        method: 'GET',\n                        headers: {\n                            'Content-Type': 'application/json'\n                         },\n                        //body: JSON.stringify( body )\n                    }).then( resp => resp.json())\n                    // .then( resp => console.log(resp))\n                    }   \n               \n                    static loginUser(body){ \n                        return fetch(`${LOCAL_URL}/auth/`, {\n                            method: 'POST',\n                            headers: {\n                                'Content-Type': 'application/json'\n                            },\n                            body: JSON.stringify( body )\n                        }).then( resp => resp.json())\n                        }\n\n\n                        static registerUser(body){ \n                            console.log(body)\n                            return fetch(`${LOCAL_URL}/main/users/`, {\n                                method: 'POST',\n                                headers: {\n                                    'Content-Type': 'application/json'\n                                },\n                                body: JSON.stringify( body )\n                            }).then( resp => resp.json())\n                            }\n                        static displayCourses(){ \n                                console.log(\"inside displayCourses fun\")\n                                return fetch(`${LOCAL_URL}/main/courses/`, {\n                                    method: 'GET',\n                                    headers: {\n                                        'Content-Type': 'application/json'\n                                     },\n                                    //body: JSON.stringify( body )\n                                }).then( resp => resp.json())\n                                // .then( resp => console.log(resp))\n                                }           \n                        static getLessons(){ \n                                console.log(\"inside getLessons fun\")\n                                // return fetch(`http://127.0.0.1:8000/main/courses/1/`, {\n                                return fetch(`${LOCAL_URL}/admin/main/course/1/`, {\n                                    method: 'GET',\n                                    headers: {\n                                        'Content-Type': 'application/json'\n                                        },\n                                    //body: JSON.stringify( body )\n                                })\n                                .then( resp => resp.json())\n                                // .then( resp => console.log(resp))\n                                \n                                      \n                                }  \n                                static getNextLesson(num){ \n                                    console.log(\"inside getNextLesson fun\")\n                                    return fetch(`${LOCAL_URL}/main/lessons/${num}/`, {\n                                        method: 'GET',\n                                        headers: {\n                                            'Content-Type': 'application/json'\n                                            },\n                                        //body: JSON.stringify( body )\n                                    })\n                                    .then( resp => resp.json())\n                                    // .then( resp => console.log(resp)) \n                                }\n                                static getPreviousLesson(num){ \n                                    console.log(\"inside getPreviousLesson fun\")\n                                    console.log(num)\n                                    return fetch(`${LOCAL_URL}/main/lessons/${num}/`, {\n                                        method: 'GET',\n                                        headers: {\n                                            'Content-Type': 'application/json'\n                                            },                       \n                                    })\n                                    .then( resp => resp.json())\n                                }\n                \n                                static getCurrentCourse(numOfCourse){ \n                                    console.log(\"inside displayCourses fun\")\n                                    return fetch(`${LOCAL_URL}/main/courses/${numOfCourse}/`, {\n                                        method: 'GET',\n                                        headers: {\n                                            'Content-Type': 'application/json'\n                                         },\n                                        //body: JSON.stringify( body )\n                                    }).then( resp => resp.json())\n                                    // .then( resp => console.log(resp))\n                                    }\n                                static getUserLessons(){ \n                                        console.log(\"inside getUserLessons fun\")                           \n                                        return fetch(`${LOCAL_URL}/main/userLessons/`, {\n                                            method: 'GET',\n                                            headers: {\n                                                'Content-Type': 'application/json'\n                                                },\n                                            //body: JSON.stringify( body )\n                                        }).then( resp => resp.json())\n                                        //.then( resp => console.log(resp))\n                                        \n                                              \n                                        }  \n                static getUserNotes(token, data){ \n                    console.log(\"im in getUserNotes\")\n                  //  http://127.0.0.1:8000/main/userLessons/1/getUserLessons/                             \n                    return fetch(`${LOCAL_URL}/main/userLessons/1/getUserLessons/`, {\n                        method: 'POST',\n                        headers: {\n                        //   'Accept': 'application/json',\n                          'Content-Type': 'application/json',\n                          'Authorization': `Token ${token}` \n                             },\n                             body: JSON.stringify({'lesson' : data})  \n                            // body: JSON.stringify({data})  \n                            // params: {\n                            //     'lesson': '4'\n                            //   }                 \n                        })\n                          .then( resp => resp.json())\n                        //.then( resp => console.log(\"eewrwerrewreerwewfaj\"))\n                       }  \n                       static updateUserNotes(token, data, numOfLesson){ \n                        console.log(\"im in getUserNotes\")\n                      //  http://127.0.0.1:8000/main/userLessons/1/getUserLessons/                             \n                         return fetch(`${LOCAL_URL}/main/userLessons/${numOfLesson}/addUserLessons/`, {\n                            method: 'POST',\n                            headers: {\n                            \n                              'Content-Type': 'application/json',\n                              'Authorization': `Token ${token}` \n                                 },\n                                 body: JSON.stringify({'notes' : data})  \n                                    \n                            })\n                              .then( resp => resp.json())\n                            //.then( resp => console.log(\"eewrwerrewreerwewfaj\"))\n                           }  \n\n                           static getUserAnswer(token, data){ \n                            console.log(\"im in getUserAnswer\")                         \n                            return fetch(`${LOCAL_URL}/main/userLessons/1/getUserLessons/`, {\n                                method: 'POST',\n                                headers: {\n                                  'Content-Type': 'application/json',\n                                  'Authorization': `Token ${token}` \n                                     },\n                                     body: JSON.stringify({'lesson' : data})  \n              \n                                })\n                                  //.then( resp => console.log(resp))\n                                  .then( resp => resp.json())\n                            \n                               }  \n                               static updateUserAnswer(token, data, numOfLesson){                             \n                                return fetch(`${LOCAL_URL}/main/userLessons/${numOfLesson}/addUserLessons/`, {\n                                    method: 'POST',\n                                    headers: {\n                                    \n                                      'Content-Type': 'application/json',\n                                      'Authorization': `Token ${token}` \n                                         },\n                                         body: JSON.stringify({'answer' : data})  \n                                            \n                                    })\n                                      .then( resp => resp.json())\n                                   }\n                                   \n                                   static getUserLastLesson(token, numOfCourse){                                                       \n                                    return fetch(`${LOCAL_URL}/main/userCourses/${numOfCourse}/getUserCourses/`, {\n                                        method: 'POST',\n                                        headers: {\n                                          'Content-Type': 'application/json',\n                                          'Authorization': `Token ${token}` \n                                             },\n                                            //  body: JSON.stringify({'course' : data})  \n                      \n                                        })\n                                          //.then( resp => console.log(resp))\n                                          .then( resp => resp.json())\n                                    \n                                       } \n                                       \n                                       static updateUserCourse(token, data, numOfCourse){                             \n                                        return fetch(`${LOCAL_URL}/main/userCourses/${numOfCourse}/addUserCourses/`, {\n                                            method: 'POST',\n                                            headers: {\n                                            \n                                              'Content-Type': 'application/json',\n                                              'Authorization': `Token ${token}` \n                                                 },\n                                                 body: JSON.stringify({'lesson' : data})  \n                                                    \n                                            })\n                                              .then( resp => resp.json())\n                                           }\n    }\n","/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/components/Navbar/index.js",["115","116","117","118"],"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/components/Popup.js",[],"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/components/Navbar/NavbarElements.js",[],"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/components/UpdateUserDetails.js",[],"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/TeachersScreen.js",[],"/Users/sameerzaher/Desktop/Development/MATAZIM-PROJECT/Matazim-FrontEnd/src/pages/AboutusScreen.js",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":2,"column":16,"nodeType":"125","messageId":"126","endLine":2,"endColumn":25},{"ruleId":"123","severity":1,"message":"127","line":18,"column":10,"nodeType":"125","messageId":"126","endLine":18,"endColumn":15},{"ruleId":"123","severity":1,"message":"128","line":18,"column":17,"nodeType":"125","messageId":"126","endLine":18,"endColumn":25},{"ruleId":"123","severity":1,"message":"129","line":18,"column":27,"nodeType":"125","messageId":"126","endLine":18,"endColumn":38},{"ruleId":"123","severity":1,"message":"130","line":2,"column":10,"nodeType":"125","messageId":"126","endLine":2,"endColumn":19},{"ruleId":"123","severity":1,"message":"131","line":2,"column":20,"nodeType":"125","messageId":"126","endLine":2,"endColumn":23},{"ruleId":"123","severity":1,"message":"132","line":2,"column":24,"nodeType":"125","messageId":"126","endLine":2,"endColumn":27},{"ruleId":"123","severity":1,"message":"133","line":2,"column":28,"nodeType":"125","messageId":"126","endLine":2,"endColumn":32},{"ruleId":"123","severity":1,"message":"134","line":2,"column":34,"nodeType":"125","messageId":"126","endLine":2,"endColumn":40},{"ruleId":"123","severity":1,"message":"135","line":7,"column":7,"nodeType":"125","messageId":"126","endLine":7,"endColumn":12},{"ruleId":"123","severity":1,"message":"127","line":10,"column":12,"nodeType":"125","messageId":"126","endLine":10,"endColumn":17},{"ruleId":"123","severity":1,"message":"128","line":10,"column":19,"nodeType":"125","messageId":"126","endLine":10,"endColumn":27},{"ruleId":"123","severity":1,"message":"129","line":10,"column":29,"nodeType":"125","messageId":"126","endLine":10,"endColumn":40},{"ruleId":"123","severity":1,"message":"128","line":15,"column":17,"nodeType":"125","messageId":"126","endLine":15,"endColumn":25},{"ruleId":"123","severity":1,"message":"129","line":15,"column":27,"nodeType":"125","messageId":"126","endLine":15,"endColumn":38},{"ruleId":"123","severity":1,"message":"136","line":40,"column":8,"nodeType":"125","messageId":"126","endLine":40,"endColumn":15},{"ruleId":"137","severity":1,"message":"138","line":77,"column":4,"nodeType":"139","endLine":77,"endColumn":6,"suggestions":"140"},{"ruleId":"141","severity":1,"message":"142","line":130,"column":2,"nodeType":"143","messageId":"144","endLine":130,"endColumn":118},{"ruleId":"145","severity":1,"message":"146","line":138,"column":50,"nodeType":"147","messageId":"148","endLine":138,"endColumn":52},{"ruleId":"145","severity":1,"message":"149","line":161,"column":22,"nodeType":"147","messageId":"148","endLine":161,"endColumn":24},{"ruleId":"141","severity":1,"message":"142","line":165,"column":5,"nodeType":"143","messageId":"144","endLine":171,"endColumn":8},{"ruleId":"141","severity":1,"message":"142","line":166,"column":7,"nodeType":"143","messageId":"144","endLine":166,"endColumn":42},{"ruleId":"141","severity":1,"message":"142","line":167,"column":7,"nodeType":"143","messageId":"144","endLine":167,"endColumn":42},{"ruleId":"150","severity":1,"message":"151","line":168,"column":47,"nodeType":"152","messageId":"153","endLine":168,"endColumn":48},{"ruleId":"141","severity":1,"message":"142","line":186,"column":3,"nodeType":"143","messageId":"144","endLine":189,"endColumn":6},{"ruleId":"150","severity":1,"message":"151","line":187,"column":47,"nodeType":"152","messageId":"153","endLine":187,"endColumn":48},{"ruleId":"145","severity":1,"message":"149","line":202,"column":20,"nodeType":"147","messageId":"148","endLine":202,"endColumn":22},{"ruleId":"141","severity":1,"message":"142","line":211,"column":3,"nodeType":"143","messageId":"144","endLine":213,"endColumn":6},{"ruleId":"150","severity":1,"message":"151","line":212,"column":45,"nodeType":"152","messageId":"153","endLine":212,"endColumn":46},{"ruleId":"154","severity":1,"message":"155","line":272,"column":39,"nodeType":"156","messageId":"157","endLine":272,"endColumn":41},{"ruleId":"145","severity":1,"message":"149","line":273,"column":32,"nodeType":"147","messageId":"148","endLine":273,"endColumn":34},{"ruleId":"154","severity":1,"message":"155","line":309,"column":32,"nodeType":"156","messageId":"157","endLine":309,"endColumn":34},{"ruleId":"145","severity":1,"message":"149","line":310,"column":27,"nodeType":"147","messageId":"148","endLine":310,"endColumn":29},{"ruleId":"141","severity":1,"message":"142","line":312,"column":17,"nodeType":"143","messageId":"144","endLine":312,"endColumn":66},{"ruleId":"141","severity":1,"message":"142","line":313,"column":17,"nodeType":"143","messageId":"144","endLine":313,"endColumn":51},{"ruleId":"145","severity":1,"message":"149","line":321,"column":102,"nodeType":"147","messageId":"148","endLine":321,"endColumn":104},{"ruleId":"158","severity":1,"message":"159","line":63,"column":1,"nodeType":"160","messageId":"148","endLine":72,"endColumn":10},{"ruleId":"158","severity":1,"message":"161","line":155,"column":21,"nodeType":"160","messageId":"148","endLine":163,"endColumn":26},{"ruleId":"158","severity":1,"message":"162","line":166,"column":25,"nodeType":"160","messageId":"148","endLine":175,"endColumn":30},{"ruleId":"158","severity":1,"message":"163","line":176,"column":25,"nodeType":"160","messageId":"148","endLine":186,"endColumn":34},{"ruleId":"158","severity":1,"message":"164","line":187,"column":25,"nodeType":"160","messageId":"148","endLine":201,"endColumn":34},{"ruleId":"158","severity":1,"message":"165","line":202,"column":33,"nodeType":"160","messageId":"148","endLine":213,"endColumn":34},{"ruleId":"158","severity":1,"message":"166","line":214,"column":33,"nodeType":"160","messageId":"148","endLine":224,"endColumn":34},{"ruleId":"158","severity":1,"message":"167","line":226,"column":33,"nodeType":"160","messageId":"148","endLine":236,"endColumn":38},{"ruleId":"123","severity":1,"message":"124","line":1,"column":17,"nodeType":"125","messageId":"126","endLine":1,"endColumn":26},{"ruleId":"123","severity":1,"message":"168","line":1,"column":28,"nodeType":"125","messageId":"126","endLine":1,"endColumn":36},{"ruleId":"123","severity":1,"message":"169","line":11,"column":3,"nodeType":"125","messageId":"126","endLine":11,"endColumn":13},{"ruleId":"123","severity":1,"message":"128","line":17,"column":18,"nodeType":"125","messageId":"126","endLine":17,"endColumn":26},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","'setToken' is assigned a value but never used.","'deleteToken' is assigned a value but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'axios' is assigned a value but never used.","'lessons' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'IdFromURL' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["172"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-dupe-class-members","Duplicate name 'UpdateUser'.","MethodDefinition","Duplicate name 'loginUser'.","Duplicate name 'registerUser'.","Duplicate name 'displayCourses'.","Duplicate name 'getLessons'.","Duplicate name 'getNextLesson'.","Duplicate name 'getPreviousLesson'.","Duplicate name 'getCurrentCourse'.","'useState' is defined but never used.","'NavBtnLink' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},"Update the dependencies array to be: [IdFromURL, token]",{"range":"175","text":"176"},[2494,2496],"[IdFromURL, token]"]